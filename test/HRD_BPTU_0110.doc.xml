<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="cp:revision" content="2445" />
<meta name="meta:word-count" content="23602" />
<meta name="custom:_docIssue" content="1" />
<meta name="dc:creator" content="Franck GUIGNARD" />
<meta name="extended-properties:Company" content="" />
<meta name="tika_batch_fs:relative_path" content="HRD_BPTU_0110.doc" />
<meta name="meta:print-date" content="2014-10-31T08:32:00Z" />
<meta name="dcterms:created" content="2014-09-29T10:17:00Z" />
<meta name="custom:_docComments" content="docComments" />
<meta name="dcterms:modified" content="2015-01-26T17:16:00Z" />
<meta name="custom:_docReference" content="HDP_BPTU_0110" />
<meta name="custom:_firmName" content="SILKAN" />
<meta name="custom:_sysAircraft" content="BPTU" />
<meta name="meta:character-count" content="129814" />
<meta name="custom:_docDateShort" content="26/01/2015" />
<meta name="custom:_docName" content="Hardware Requirement Data" />
<meta name="custom:_sysName" content="Brake Pedal Transmitter Unit (BPTU)" />
<meta name="custom:_tempAuthor" content="Franck GUIGNARD" />
<meta name="dc:title" content="template Dev Spec" />
<meta name="extended-properties:TotalTime" content="14727000000000" />
<meta name="cp:subject" content="" />
<meta name="Content-Length" content="35744768" />
<meta name="X-TIKA:digest:MD5" content="ddb87b01cc8e6075fc0392a0c3ae77c7" />
<meta name="Content-Type" content="application/msword" />
<meta name="custom:_docAcronym" content="HRD" />
<meta name="w:Comments" content="" />
<meta name="custom:_sysAcronym" content="BPTU" />
<meta name="dc:subject" content="" />
<meta name="dc:subject" content="" />
<meta name="extended-properties:Application" content="Microsoft Office Word" />
<meta name="custom:_firmDivision" content="DOIP" />
<meta name="meta:last-author" content="Franck GUIGNARD" />
<meta name="custom:_tempIssue" content="1.7" />
<meta name="xmpTPg:NPages" content="160" />
<meta name="resourceName" content="HRD_BPTU_0110.doc" />
<meta name="custom:_sysEquipment" content="BPTU" />
<meta name="custom:_reqNumber" content="reqNumber" />
<meta name="custom:_docDateLong" content="January, 26 2015" />
<meta name="custom:_docLang" content="EN" />
<meta name="custom:_tempDate" content="29/09/2014" />
<meta name="extended-properties:Template" content="docStylesEN.dot" />
<meta name="X-TIKA:Parsed-By" content="org.apache.tika.parser.DefaultParser" />
<meta name="X-TIKA:Parsed-By" content="org.apache.tika.parser.microsoft.OfficeParser" />
<meta name="tika:file_ext" content="doc" />
<meta name="meta:keyword" content="" />
<meta name="custom:_docType" content="Design Data" />
<meta name="meta:page-count" content="160" />
<title>template Dev Spec</title>
</head>
<body><div class="header"><p class="en-tête,hv,logo,Encabezonado"><img src="embedded:image42.png" alt="image42.png" /><img src="embedded:image43.png" alt="image43.png" /></p>
<table><tbody><tr>	<td><p class="hEADER:_Logo" />
</td>	<td><p class="hEADER:_Logo" />
</td>	<td><p class="hEADER:_Reference">Ref. HRD_BPTU_0110.DOC</p>
<p class="hEADER:_Reference">Issue:  
1</p>
</td></tr>
<tr>	<td><p class="hEADER:_Text" />
</td>	<td><p class="hEADER:_Page"><b>Page 21/160</b></p>
</td></tr>
<tr>	<td><p class="hEADER:_Title1"><b>BPTU - Hardware Requirement Data</b></p>
</td></tr>
<tr>	<td><p class="hEADER:_Title2"><i /></p>
</td></tr>
</tbody></table>
</div>
<table><tbody><tr>	<td><p class="dOC_1P:_propertyField"><b><u>Name/Id of Program/Project</u></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b>:</b></p>
</td>	<td><p class="dOC_1P:_propertyValue">Brake Pedal Transmitter Unit (BPTU)</p>
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u>Title of Document</u></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b>:</b></p>
</td>	<td><p class="dOC_1P:_propertyValue">Hardware Requirement Data (HRD) for</p>
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u /></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b>:</b></p>
</td>	<td><p class="dOC_1P:_propertyValue">BPTU </p>
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u /></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b>:</b></p>
</td>	<td><p class="dOC_1P:_propertyValue" />
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u>Number of pages</u></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b>:</b></p>
</td>	<td><p class="dOC_1P:_propertyValue">160</p>
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u>Reference</u></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b>:</b></p>
</td>	<td><p class="dOC_1P:_propertyValue">HRD_BPTU_0110.DOC</p>
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u>Issue</u></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b>:</b></p>
</td>	<td><p class="dOC_1P:_propertyValue">1</p>
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u>Date</u></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b>:</b></p>
</td>	<td><p class="dOC_1P:_propertyValue">January, 26 2015</p>
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u /></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b /></p>
</td>	<td><p class="dOC_1P:_propertyValue" />
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u>Distribution List</u></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b>X</b></p>
</td>	<td><p class="dOC_1P:_propertyValue">Noel Le Moal</p>
</td>	<td><p class="dOC_1P:_propertyValue" />
</td>	<td><p class="dOC_1P:_propertyValue" />
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u /></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b>X</b></p>
</td>	<td><p class="dOC_1P:_propertyValue">Bertrand Dubacher</p>
</td>	<td><p class="dOC_1P:_propertyValue" />
</td>	<td><p class="dOC_1P:_propertyValue" />
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u /></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b>X</b></p>
</td>	<td><p class="dOC_1P:_propertyValue">Airbus Helicopter</p>
</td>	<td><p class="dOC_1P:_propertyValue" />
</td>	<td><p class="dOC_1P:_propertyValue" />
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u /></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b>X</b></p>
</td>	<td><p class="dOC_1P:_propertyValue">Aeroconseil</p>
</td>	<td><p class="dOC_1P:_propertyValue" />
</td>	<td><p class="dOC_1P:_propertyValue" />
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u /></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b /></p>
</td>	<td><p class="dOC_1P:_propertyValue" />
</td>	<td><p class="dOC_1P:_propertyValue" />
</td>	<td><p class="dOC_1P:_propertyValue" />
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u /></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b /></p>
</td>	<td><p class="dOC_1P:_propertyValue" />
</td>	<td><p class="dOC_1P:_propertyValue" />
</td>	<td><p class="dOC_1P:_propertyValue" />
</td></tr>
<tr>	<td><p class="dOC_1P:_propertyField"><b><u /></b></p>
</td>	<td><p class="dOC_1P:_Separator"><b /></p>
</td>	<td><p class="dOC_1P:_propertyValue" />
</td>	<td><p class="dOC_1P:_propertyValue" />
</td>	<td><p class="dOC_1P:_propertyValue" />
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="sIGN:_Title"><b>Name</b></p>
</td>	<td><p class="sIGN:_Title"><b>Function</b></p>
</td>	<td><p class="sIGN:_Title"><b>Date</b></p>
</td>	<td><p class="sIGN:_Title"><b>Visa</b></p>
</td></tr>
<tr>	<td><p class="sIGN:_Section"><b><u>Prepared by :</u></b></p>
</td>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Date" />
</td>	<td><p class="sIGN:_Visa" />
</td></tr>
<tr>	<td><p class="sIGN:_Text" />
</td>	<td><p class="sIGN:_Name">Franck GUIGNARD</p>
</td>	<td><p class="sIGN:_Function">Project manager</p>
</td>	<td><p class="sIGN:_Date" />
</td>	<td><p class="sIGN:_Visa" />
</td></tr>
<tr>	<td><p class="sIGN:_Text" />
</td>	<td><p class="sIGN:_Name" />
</td>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Date" />
</td>	<td><p class="sIGN:_Visa" />
</td></tr>
<tr>	<td><p class="sIGN:_Section"><b><u>Verified by :</u></b></p>
</td>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Date" />
</td>	<td><p class="sIGN:_Visa" />
</td></tr>
<tr>	<td><p class="sIGN:_Text" />
</td>	<td><p class="sIGN:_Name">Noel LE MOAL</p>
</td>	<td><p class="sIGN:_Function">Project leader</p>
</td>	<td><p class="sIGN:_Date" />
</td>	<td><p class="sIGN:_Visa" />
</td></tr>
<tr>	<td><p class="sIGN:_Text" />
</td>	<td><p class="sIGN:_Name">Pascal ARISTOTE</p>
</td>	<td><p class="sIGN:_Function">Component manager</p>
</td>	<td><p class="sIGN:_Date" />
</td>	<td><p class="sIGN:_Visa" />
</td></tr>
<tr>	<td><p class="sIGN:_Text" />
</td>	<td><p class="sIGN:_Name">Florent CHECA</p>
</td>	<td><p class="sIGN:_Function">Development engineer</p>
</td>	<td><p class="sIGN:_Date" />
</td>	<td><p class="sIGN:_Visa" />
</td></tr>
<tr>	<td><p class="sIGN:_Text" />
</td>	<td><p class="sIGN:_Name">Imed MABROUK</p>
</td>	<td><p class="sIGN:_Function">Verification engineer</p>
</td>	<td><p class="sIGN:_Date" />
</td>	<td><p class="sIGN:_Visa" />
</td></tr>
<tr>	<td><p class="sIGN:_Text" />
</td>	<td><p class="sIGN:_Name" />
</td>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Date" />
</td>	<td><p class="sIGN:_Visa" />
</td></tr>
<tr>	<td><p class="sIGN:_Section"><b><u>Approved by :</u></b></p>
</td>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Date" />
</td>	<td><p class="sIGN:_Visa" />
</td></tr>
<tr>	<td><p class="sIGN:_Text" />
</td>	<td><p class="sIGN:_Name">Stephane CADORIN</p>
</td>	<td><p class="sIGN:_Function">Process Assurance Responsible</p>
</td>	<td><p class="sIGN:_Date" />
</td>	<td><p class="sIGN:_Visa" />
</td></tr>
<tr>	<td><p class="sIGN:_Text" />
</td>	<td><p class="sIGN:_Name" />
</td>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Date" />
</td>	<td><p class="sIGN:_Visa" />
</td></tr>
</tbody></table>
<p class="pAGE_BLANK:_Title"><b>This page is left blank intentionally.</b></p>
<p class="sECTION1:_Title"><b>Change History</b></p>
<table><tbody><tr>	<td><p class="hISTORY:_Issue"><b>Issue</b></p>
</td>	<td><p class="hISTROY:_Date"><b>Date</b></p>
</td>	<td><p class="hISTORY:_Issue"><b>Author</b></p>
</td>	<td><p class="hISTORY:_Issue"><b>List of modifications</b></p>
</td>	<td><p class="hISTORY:_Issue"><b>Original SVN revision</b></p>
</td></tr>
<tr>	<td><p class="hISTORY:_Issue">1D1</p>
</td>	<td><p class="hISTROY:_Date">29/09/2014</p>
</td>	<td><p class="hSITORY:_Author">Franck GUIGNARD</p>
</td>	<td><p class="hISTORY:_Text">Initial version from HRD template issue 1.7</p>
</td>	<td><p class="hISTORY:_Text">NA</p>
</td></tr>
<tr>	<td><p class="hISTORY:_Issue">1D2</p>
</td>	<td><p class="hISTROY:_Date">18/11/2014</p>
</td>	<td><p class="hSITORY:_Author">Franck GUIGNARD</p>
</td>	<td><p class="hISTORY:_Text">Integration of remarks from SILKAN reading review #852 r319, MBD and Aeroconseil reading reviews #852 r320</p>
</td>	<td><p class="hISTORY:_Text">317</p>
</td></tr>
<tr>	<td><p class="hISTORY:_Issue">1D3</p>
</td>	<td><p class="hISTROY:_Date">11/12/2014</p>
</td>	<td><p class="hSITORY:_Author">Franck GUIGNARD</p>
</td>	<td><p class="hISTORY:_Text">Integration of remarks from SILKAN reading review #852 r334 and CR#928</p>
</td>	<td><p class="hISTORY:_Text">321</p>
</td></tr>
<tr>	<td><p class="hISTORY:_Issue">1D4</p>
</td>	<td><p class="hISTROY:_Date">15/01/2015</p>
</td>	<td><p class="hSITORY:_Author">Franck GUIGNARD</p>
</td>	<td><p class="hISTORY:_Text">Integration of remarks from SILKAN reading review #852 r348</p>
</td>	<td><p class="hISTORY:_Text">335</p>
</td></tr>
<tr>	<td><p class="hISTORY:_Issue">1D5</p>
</td>	<td><p class="hISTROY:_Date">26/01/2015</p>
</td>	<td><p class="hSITORY:_Author">Franck GUIGNARD</p>
</td>	<td><p class="hISTORY:_Text">Integration of remarks from SILKAN reading review #852 r351</p>
</td>	<td><p class="hISTORY:_Text">349</p>
</td></tr>
<tr>	<td><p class="hISTORY:_Issue">1</p>
</td>	<td><p class="hISTROY:_Date">26/01/2015</p>
</td>	<td><p class="hSITORY:_Author">Franck GUIGNARD</p>
</td>	<td><p class="hISTORY:_Text">Stable issue 1</p>
</td>	<td><p class="hISTORY:_Text">352</p>
</td></tr>
</tbody></table>
<p class="pAGE_BLANK:_Title"><b>This page is left blank intentionally.
</b></p>
<p class="sECTION1:_Title"><b>Table of Contents</b></p>
<p class="tM_1"><b>1</b>
<b>Scope
9</b></p>
<p class="tM_2">1.1
Identification
9</p>
<p class="tM_2">1.2
Hardware Item Overview
9</p>
<p class="tM_3">1.2.1
System presentation
9</p>
<p class="tM_3">1.2.2
System functions
10</p>
<p class="tM_3">1.2.3
Mission profile
11</p>
<p class="tM_2">1.3
Document Overview
11</p>
<p class="tM_2">1.4
Identification of requirements
12</p>
<p class="tM_2">1.5
Interpretation
13</p>
<p class="tM_1"><b>2</b>
<b>Applicable and Reference Documents
14</b></p>
<p class="tM_2">2.1
External Applicable Documents
14</p>
<p class="tM_2">2.2
Internal Applicable Documents
14</p>
<p class="tM_2">2.3
Reference Documents
15</p>
<p class="tM_1"><b>3</b>
<b>Terminology
17</b></p>
<p class="tM_2">3.1
Definitions
17</p>
<p class="tM_2">3.2
List of acronyms
18</p>
<p class="tM_2">3.3
Convention
19</p>
<p class="tM_1"><b>4</b>
<b>Hardware Requirements
21</b></p>
<p class="tM_2">4.1
Scope
21</p>
<p class="tM_2">4.2
Hardware Interface description
22</p>
<p class="tM_2">4.3
Anti-metastability mechanisms
23</p>
<p class="tM_2">4.4
Clock and reset Requirements
24</p>
<p class="tM_2">4.5
Functional requirements
25</p>
<p class="tM_3">4.5.1
System Modes
25</p>
<p class="tM_4">4.5.1.1
Reset mode and forbidden programming
28</p>
<p class="tM_4">4.5.1.2
Initialization mode
30</p>
<p class="tM_4">4.5.1.3
Normal operation
31</p>
<p class="tM_4">4.5.1.4
Maintenance mode
39</p>
<p class="tM_5">4.5.1.4.1
RS232 management
41</p>
<p class="tM_5">4.5.1.4.2
EEPROM management
58</p>
<p class="tM_5">4.5.1.4.3
ADC calibration
65</p>
<p class="tM_3">4.5.2
Pilot/Copilot Configuration
70</p>
<p class="tM_3">4.5.3
COM/MON Configuration
71</p>
<p class="tM_3">4.5.4
ADCs presentation
72</p>
<p class="tM_4">4.5.4.1
ADC1
73</p>
<p class="tM_5">4.5.4.1.1
Operating modes
73</p>
<p class="tM_5">4.5.4.1.2
Data measurement
78</p>
<p class="tM_5">4.5.4.1.3
Data treatment
79</p>
<p class="tM_5">4.5.4.1.4
Gain treatment law
80</p>
<p class="tM_5">4.5.4.1.5
Offset treatment law
81</p>
<p class="tM_5">4.5.4.1.6
Data adjustment law
82</p>
<p class="tM_4">4.5.4.2
ADC2
84</p>
<p class="tM_5">4.5.4.2.1
Operating modes
84</p>
<p class="tM_5">4.5.4.2.2
Data measurement
90</p>
<p class="tM_5">4.5.4.2.3
Data treatment
92</p>
<p class="tM_5">4.5.4.2.4
Gain treatment law
93</p>
<p class="tM_5">4.5.4.2.5
Offset treatment law
94</p>
<p class="tM_5">4.5.4.2.6
Data adjustment law
95</p>
<p class="tM_4">4.5.4.3
ADC3
97</p>
<p class="tM_5">4.5.4.3.1
Operating modes
97</p>
<p class="tM_5">4.5.4.3.2
Channels configuration
103</p>
<p class="tM_3">4.5.5
CAN controller management
104</p>
<p class="tM_4">4.5.5.1
Supported CAN frames
104</p>
<p class="tM_4">4.5.5.2
BPTU Frame content
108</p>
<p class="tM_4">4.5.5.3
BPTU CAN Bus Configuration Parameters
116</p>
<p class="tM_4">4.5.5.4
Error Management
118</p>
<p class="tM_5">4.5.5.4.1
Error Recognition
118</p>
<p class="tM_5">4.5.5.4.2
Error Treatment
119</p>
<p class="tM_5">4.5.5.4.3
Error Containment
119</p>
<p class="tM_4">4.5.5.5
CAN controller performance
124</p>
<p class="tM_3">4.5.6
Built In Tests
125</p>
<p class="tM_4">4.5.6.1
PBIT
125</p>
<p class="tM_4">4.5.6.2
CBIT
128</p>
<p class="tM_5">4.5.6.2.1
CBIT definition
129</p>
<p class="tM_5">4.5.6.2.2
CBIT ADC1 definition
131</p>
<p class="tM_5">4.5.6.2.3
CBIT ADC2 definition
133</p>
<p class="tM_5">4.5.6.2.4
CBIT ADC3 definition
135</p>
<p class="tM_5">4.5.6.2.5
CBIT EEPROM definition
140</p>
<p class="tM_2">4.6
Packaging and Technology requirements
141</p>
<p class="tM_2">4.7
Environmental requirements
142</p>
<p class="tM_2">4.8
Safety requirements
144</p>
<p class="tM_2">4.9
Deleted requirements
146</p>
<p class="tM_1"><b>5</b>
<b>Traceability Matrix
152</b></p>
<p class="tM_1"><b>6</b>
<b>TECHNICAL NOTES
154</b></p>
<p class="tM_2">6.1
EEPROM memory map
154</p>
<p class="tM_2">6.2
Frame description
160</p>
<p class="tM_3">6.2.1
BPTU self-test Frame
160</p>
<p>
</p>
<p class="sECTION1:_Title"><b>Table of Illustrations</b></p>
<p class="table_des_illustrations">Figure 1‑1: Physical BPTU view
9</p>
<p class="table_des_illustrations">Figure 1‑2: Board architecture
10</p>
<p class="table_des_illustrations">Figure 4‑1: BPTU FPGA block diagram
21</p>
<p class="table_des_illustrations">Figure 4‑2: BPTU FPGA operational modes
26</p>
<p class="table_des_illustrations">Figure 4‑3: BPTU FPGA Messages transmission sequence
32</p>
<p class="table_des_illustrations">Figure 4‑4: BPTU FPGA Main sequences description
33</p>
<p class="table_des_illustrations">Figure 4‑5: BPTU FPGA Re-transmission examples
37</p>
<p class="table_des_illustrations">Figure 4‑6: FPGA/Board/Computer links view
39</p>
<p class="table_des_illustrations">Figure 4‑7: Examples of ADC1 data in order frame adjusted value format
83</p>
<p class="table_des_illustrations">Figure 4‑8: Examples of ADC2 data in the order frame adjusted value format
96</p>
<p class="table_des_illustrations">Figure 4‑9: CAN Extended Data frame
104</p>
<p class="table_des_illustrations">Figure 4‑10: CAN Bus level during an Active error frame transmission.
106</p>
<p class="table_des_illustrations">Figure 4‑11: CAN Bus level during a Passive error frame transmission.
107</p>
<p class="table_des_illustrations">Figure 4‑12: Bit timing
116</p>
<p class="table_des_illustrations">Figure 4‑13: Fault confinement
120</p>
<p class="table_des_illustrations">Figure 4‑14: Bus BIT message format
122</p>
<p class="sECTION1:_Title"><b>

</b></p>
<p class="sECTION1:_Title"><b>Table of Tables</b></p>
<p class="table_des_illustrations">Table 3‑1: Numbers convention
19</p>
<p class="table_des_illustrations">Table 4‑1: Bit timing configuration
116</p>
<p class="table_des_illustrations">Table 6‑1: Memory map
159</p>
<p class="table_des_illustrations">Table 6‑2: Self-Test Frame description
160</p>
<p class="sECTION1:_Title"><b>

</b></p>
<p class="titre_1">1 <b>Scope
</b></p>
<p class="titre_2">1.1 <b>Identification
</b></p>
<p class="corps_de_texte">This document is the Hardware Requirement Data (<b>HRD</b>) of the two independent FPGA components used in the BPTU system. This document deals with the both FPGA components. It will be developed according to the activities agreed in the HDP. This product will be developed according to DO-254 standards. As described in the [IAD3]   

 REF _Ref387245207 \h 
BPTU <b>C</b>ommon <b>M</b>ode <b>A</b>nalysis (<b>CMA</b>), the Design Assurance Level (DAL) of this development will be level B. </p>
<p class="titre_2">1.2 <b>Hardware Item Overview
</b></p>
<p class="titre_3">1.2.1 <b>System presentation 
</b></p>
<p>The <b>BPTU</b> is the system which measures and sends the brake orders of the left and the right brake pedals of the X4 helicopter. It also provides a proportional load feeling on the brake pedals. It is linked to the helicopter rudder pedals mechanism. The brake pedal mechanism is illustrated by the figure below:
</p>
<p class="corps_de_texte"> <img src="embedded:image1.png" alt="image1.png" /></p>
<p class="légende">Figure 1‑1: Physical BPTU view</p>
<p class="titre_3">1.2.2 <b>System functions 
</b></p>
<p class="corps_de_texte">The BPTU offers the following functions: 
</p>
<p class="paragraphe_de_liste">· Measures and sends brake orders (pedal angles) of the left and right brake pedals, 
</p>
<p class="paragraphe_de_liste">· Provides a proportional load feeling on each one of the brake pedals to the Pilots, 
</p>
<p class="paragraphe_de_liste">· Integrates an adjustable (during development) preload mechanism, 
</p>
<p class="paragraphe_de_liste">· Provides a local monitoring with CBIT and PBIT.
</p>
<p class="paragraphe_de_liste">· Equipment localization (Pilot or Co-Pilot),
</p>
<p class="paragraphe_de_liste">· Digital filtering of pedal deflections,
</p>
<p class="paragraphe_de_liste">· Emission of data through CAN1 (COM channel) and CAN2 buses (MON channel),
</p>
<p class="paragraphe_de_liste">· Provide a mechanical zero,
</p>
<p class="paragraphe_de_liste">· Provide a mechanical stop, when the pedal is released
</p>
<p class="figure">The BPTU integrates two independent and dissymmetrical acquisition electronic modules on the same board, these modules provide information on two segregated CAN Buses. The figure below provides a synoptic of BPTU architecture (‘α’ is the angle resulting from the rotation of the Left pedal and ‘β’ is the angle resulting from the rotation of the right pedal): </p>
<p class="corps_de_texte"><img src="embedded:image2.emf" alt="image2.emf" /><p>ADC 1</p>

<p>ProASIC3</p>

<p>A3P1000</p>

<p>CAN BUS 1</p>

<p>IGLOO2</p>

<p>M2GL050</p>

<p>CAN </p>

<p>transceiver 1</p>

<p>CAN </p>

<p>transceiver 2</p>

<p>ADC 2</p>

<p>ADC 1ADC 2</p>

<p>CAN BUS 2</p>

<p>COM ChannelMON Channel</p>

<p>Hall effect </p>

<p>sensor 1</p>

<p>Hall effect </p>

<p>sensor 2</p>

<p>Hall effect </p>

<p>sensor 2</p>

<p>Hall effect </p>

<p>sensor 1</p>

<p>α1 and β1  </p>

<p>α2 and β2  </p>

<p>α1  (0 –3.3V) </p>

<p>α2  (0 -3.3V) </p>

<p>β1  (0 –3.3V)   </p>

<p>β2  (0 –3.3V)  </p>

<p>α1  α2</p>

<p>sent on a 8 bits word</p>

<p>12 bits value</p>

<p>12 bits value </p>

<p>β1  </p>

<p>sent on a 8 bits word</p>

<p>β2  </p>

<p>12 bits value </p>

<p>12 bits value</p>

<p>MON </p>

<p>Power </p>

<p>Supply</p>

<p>COM</p>

<p>Power</p>

<p>Supply</p>

<p>Monitoring</p>

<p>Monitoring</p>

<p>28V</p>

<p>BPTU BOARD</p>

<p>Filter &amp; </p>

<p>Lignhtning </p>

<p>protection</p>

<p>Left PedalRight Pedal</p>

</p>
<p class="légende">Figure 1‑2: Board architecture</p>
<p>As shown in the figure 2 the COM and MON channels are performed using with different components, for example the COM channel uses a PROASIC3 FPGA and the MON channel uses an IGLOO2 FPGA family component. The same treatment is applied for the ADC, hall-effect sensors, CAN transceivers and power supply components, in order to avoid common mode failures.</p>
<p class="titre_3">1.2.3 <b>Mission profile</b></p>
<table><tbody><tr>	<td><p><b>Phase</b></p>
</td>	<td><p><b>Duration phase per year</b></p>
</td>	<td><p><b>Mean temperature</b></p>
</td></tr>
<tr>	<td><p>In flight operating</p>
</td>	<td><p>tARW = 1200h</p>
</td>	<td><p>50°C</p>
</td></tr>
<tr>	<td><p>On ground Operating</p>
</td>	<td><p>tGF = 100h</p>
</td>	<td><p>40°C</p>
</td></tr>
<tr>	<td><p>On ground not operating</p>
</td>	<td><p>tNO = 7460h</p>
</td>	<td><p>40°C</p>
</td></tr>
</tbody></table>
<p>5 flights = 1 FH (6000 flights/year)
</p>
<p class="titre_2">1.3 <b>Document Overview</b></p>
<p class="corps_de_texte">The Hardware Requirement Data (according to recommendation <b>DO-254 </b>[EAD1]    sections 10.2.1 and 10.3.1.) is the definition of the Hardware Requirements including the derived requirements. It includes:
</p>
<p class="l1:_Liste_1">· The system design, robustness and safety requirements allocated to the hardware.
</p>
<p class="l1:_Liste_1">· Identification of applicable standards for the hardware.
</p>
<p class="l1:_Liste_1">· Hardware functional and performance requirements, including derived requirements and stress limits for normal use.
</p>
<p class="l1:_Liste_1">· Hardware reliability and quality requirements, including requirements related to failure rates, exposure times and design constraints.
</p>
<p class="l1:_Liste_1">· Hardware maintenance and repair requirements throughout the hardware item service life.
</p>
<p class="l1:_Liste_1">· Hardware manufacturability and assembly requirements.
</p>
<p class="l1:_Liste_1">· Hardware testability requirements.
</p>
<p class="l1:_Liste_1">· Hardware storage and handling requirements.
</p>
<p class="l1:_Liste_1">· Installation requirements.
</p>
<p class="corps_de_texte">This document is written according to the Hardware Requirements Standards (<b>HRS</b>) [IAD1]   </p>
<p class="titre_2">1.4 <b>Identification of requirements
</b></p>
<p class="corps_de_texte">Each requirement is identified as follows:
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-Num-Type  </b></p>
</td>	<td><p class="reqIdent"><b>Title</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>« mother requirement », derived or N/A when no upper level specification exists.</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">Requirement definition 
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">Requirement justification if required (derived requirements or additional information) 
</p>
<p class="reqTexte">or
</p>
<p class="reqTexte">This requirement is justified at upper level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Notes:</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">Where the “HRD-BPTU-Num” is the capability to be specified:
</p>
<p class="l1:_Liste_1">“Num” is a 4 digits numbers that uniquely identifies the requirement in the document.
</p>
<p class="l1:_Liste_1">“Type” is a single letter that represents special requirements 
</p>
<p class="l1:_Liste_1">· D for Derived requirements
</p>
<p class="l1:_Liste_1">· S for Safety requirements</p>
<p class="l1:_Liste_1">· R for Robustness requirements </p>
<p class="l1:_Liste_1">“Version” is the release number of that requirement.
</p>
<p class="l1:_Liste_1">“Verification” is the proposed qualification method used to verify that requirement: analysis, review or test. It may be changed by the verification responsible.</p>
<p class="l1:_Liste_1">“Covers” is the mother requirement from which that requirement depends. If none, that requirement is “derived” and “N/A” if not applicable. Coverage can be partial.</p>
<p class="l1:_Liste_1">Example:
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-XXXX</b></p>
</td>	<td><p class="reqIdent"><b>Input clock</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-XXXX partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">The design shall be synchronous to one 1MHz (±100ppm) clock which is provided as an input.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">Upper level requirement is refined by design decision to store data received from the ARINC 825 CAN Bus and destined to be sent through the APB interface.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Notes: This clock will further be referred as CLK</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">The first requirement is numbered: 0010.
</p>
<p class="corps_de_texte"><u>New Requirement</u>: each time a new requirement is added the number “Num” shall be incremented by 10 and the “version” set to 1.
</p>
<p class="corps_de_texte"><u>Requirement insertion</u>: an additional requirement can be inserted, using the last digit for numbering (e.g. _0015 between _0010 and _0020).
</p>
<p class="corps_de_texte"><u>Requirement deletion</u>: each time a requirement is deleted the number “Num” shall not be reused and the “text” shall be to “deleted”.
</p>
<p class="titre_2">1.5 <b>Interpretation
</b></p>
<p>“Shall”, the imperative form of the verb, is used throughout this HRD whenever a requirement is intended to express a provision that is mandatory. Deviation from a “shall” requirement may be considered if sufficient data is supplied to justify the exception.
</p>
<p>The words “should” and “may” are used whenever it is necessary to express non-mandatory provisions. “Will” is used to express a declaration of purpose.</p>
<p class="titre_1">2 <b>Applicable and Reference Documents
</b></p>
<p class="corps_de_texte">This chapter gives the list of documents referenced in this document. Projects documents are referred to without their issue number. Applicable revisions are identified in the corresponding Hardware Configuration Index (<b>HCI</b>) for a given software version. Other documents are referred to with their issue number.
</p>
<p class="titre_2">2.1 <b>External Applicable Documents
</b></p>
<table><tbody><tr>	<td><p class="hISTORY:_Title"><b>Title</b></p>
</td>	<td><p class="hISTORY:_Title"><b>Reference</b></p>
</td>	<td><p class="hISTORY:_Title"><b>Origin</b></p>
</td></tr>
<tr>	<td><p class="références_2">[EAD1]    Design Assurance Guidance for Airborne Electronic Hardware</p>
</td>	<td><p class="hISTROY:_Date">DO-254 / ED-80</p>
</td>	<td><p class="hSITORY:_Author">RTCA / EUROCAE</p>
</td></tr>
<tr>	<td><p class="références_2">[EAD2]    EASA CM-SWCEH-001 Development Assurance of Airborne Electronic Hardware issue 01</p>
</td>	<td><p class="hISTROY:_Date">EASA CEH memo</p>
</td>	<td><p class="hSITORY:_Author">EASA</p>
</td></tr>
<tr>	<td><p class="références_2">[EAD3]    General Standardization of CAN (Controller Area Network) bus protocol for airborne use</p>
</td>	<td><p class="hISTROY:_Date">ARINC SPECIFICATION 825-1 
</p>
<p class="hISTROY:_Date">May 10, 2010</p>
</td>	<td><p class="hSITORY:_Author">AERONAUTICAL RADIO, INC.</p>
</td></tr>
<tr>	<td><p class="références_2">[EAD4]    CAN 2.0 Specification v2.0</p>
</td>	<td><p class="hISTROY:_Date">Bosch CAN2.0A and CAN2.0B </p>
</td>	<td><p class="hSITORY:_Author">BOSCH</p>
</td></tr>
<tr>	<td><p class="références_2">[EAD5]    CAN - Part 1: Data link layer and physical signaling </p>
</td>	<td><p class="hISTROY:_Date">ISO 11898-1 </p>
</td>	<td><p class="hSITORY:_Author">ISO </p>
</td></tr>
</tbody></table>
<p class="titre_2">2.2 <b>Internal Applicable Documents</b></p>
<table><tbody><tr>	<td><p class="hISTORY:_Title"><b>Title</b></p>
</td>	<td><p class="hISTORY:_Title"><b>Reference</b></p>
</td></tr>
<tr>	<td><p class="références_3">[IAD1]    <b>H</b>ardware <b>R</b>equirement <b>S</b>tandards (<b>HRS</b>)</p>
</td>	<td><p class="hISTROY:_Date">HRS_BPTU_0106</p>
</td></tr>
<tr>	<td><p class="références_3">[IAD2]    <b>B</b>oard <b>R</b>equirement <b>D</b>ata (<b>BRD</b>)</p>
</td>	<td><p class="hISTROY:_Date">BRD_BPTU_0110</p>
</td></tr>
<tr>	<td><p class="références_3">[IAD3]    BPTU <b>C</b>ommon <b>M</b>ode <b>A</b>nalysis (<b>CMA</b>)</p>
</td>	<td><p class="hISTROY:_Date">A4154-1403-D16</p>
</td></tr>
<tr>	<td><p class="références_3">[IAD4]    <b>H</b>ardware <b>T</b>raceability <b>M</b>atrixes (<b>HTM</b>)</p>
</td>	<td><p class="hISTROY:_Date">HTM-BPTU-0113</p>
</td></tr>
</tbody></table>
<p class="titre_2">2.3 <b>Reference Documents
</b></p>
<table><tbody><tr>	<td><p class="hISTORY:_Title"><b>Title</b></p>
</td>	<td><p class="hISTORY:_Title"><b>Reference</b></p>
</td>	<td><p class="hISTORY:_Title"><b>Origin</b></p>
</td></tr>
<tr>	<td><p class="références_1">[RD1]    X4 BPTU: Equipment Technical Specification</p>
</td>	<td><p class="corps_de_texte">DR74645_issue 2</p>
</td>	<td><p class="hSITORY:_Author">MBD</p>
</td></tr>
<tr>	<td><p class="références_1">[RD2]    General Requirements for Equipment using CAN Technology</p>
</td>	<td><p>SPX880AZ130E10 Issue B</p>
</td>	<td><p class="hSITORY:_Author">AH</p>
</td></tr>
<tr>	<td><p class="références_1">[RD3]    CAN Bus Message Format Specification</p>
</td>	<td><p>SPX880AZ129E10 Issue A</p>
</td>	<td><p class="hSITORY:_Author">AH</p>
</td></tr>
<tr>	<td><p class="références_1">[RD4]    ADC_AD7091</p>
</td>	<td><p>ADC_AD7091 Rev. A</p>
</td>	<td><p class="hSITORY:_Author">AD</p>
</td></tr>
<tr>	<td><p class="références_1">[RD5]    ADC_ads7229 </p>
</td>	<td><p>ADC_ads7229  SBAS437A – may 2008 – Revised June 2009</p>
</td>	<td><p class="hSITORY:_Author">TI</p>
</td></tr>
<tr>	<td><p class="références_1">[RD6]    ADC_AD7922</p>
</td>	<td><p>AD7912_7922 Rev.0 2004</p>
</td>	<td><p class="hSITORY:_Author">AD</p>
</td></tr>
<tr>	<td><p class="références_1">[RD7]    EEPROM_ST</p>
</td>	<td><p>M24C64, 2005</p>
</td>	<td><p class="hSITORY:_Author">ST</p>
</td></tr>
<tr>	<td><p class="références_1">[RD8]    EEPROM_MIC</p>
</td>	<td><p>DS21189F, 2002</p>
</td>	<td><p class="hSITORY:_Author">Mic</p>
</td></tr>
</tbody></table>
<p class="pAGE_BLANK:_Title"><b>This page is left blank intentionally.</b></p>
<p class="titre_1">3 <b>Terminology</b></p>
<p class="titre_2">3.1 <b>Definitions
</b></p>
<p class="corps_de_texte">Some terms shall be defined:
</p>
<p class="r1:_Retrait_1"><b>ARINC 825 
</b></p>
<p class="corps_de_texte">General Standardization of CAN (Controller Area Network) Bus Protocol for Airborne Use.</p>
<p class="corps_de_texte"><b>CAN
</b></p>
<p>The <b>C</b>ontroller <b>A</b>rea <b>N</b>etwork is a serial communications protocol which efficiently supports distributed real-time control with a very high level of security. Its domain of application ranges from high speed networks to low cost multiplex wiring.</p>
<p class="corps_de_texte"><b>DOMINANT</b></p>
<p class="corps_de_texte">A dominant bit in the CAN protocol is equivalent to a 0b logic value bit on the CAN bus. </p>
<p class="corps_de_texte"><b>RECESSIVE
</b></p>
<p class="corps_de_texte">A recessive bit in the CAN protocol is equivalent to a 1b logic value bit on the CAN bus.</p>
<p class="corps_de_texte"><b>FPGA</b></p>
<p class="corps_de_texte"><b> </b>A <b>F</b>ield <b>P</b>rogrammable <b>G</b>ate <b>A</b>rray is an integrated circuit designed to be configured by the customer or designer after manufacturing.</p>
<p class="titre_2">3.2 <b>List of acronyms
</b></p>
<table><tbody><tr>	<td><p class="tAB:_Corps"><b>ACK</b></p>
</td>	<td><p class="tAB:_Corps"><b>ACK</b>nowledge <b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>AD</b></p>
</td>	<td><p class="tAB:_Corps"><b>A</b>nalog <b>D</b>evices</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>ADC</b></p>
</td>	<td><p class="tAB:_Corps"><b>A</b>nalog to <b>D</b>igital <b>C</b>onverter</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>AH</b></p>
</td>	<td><p class="tAB:_Corps"><b>A</b>irbus<b> H</b>elicopter<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>BPTU</b></p>
</td>	<td><p class="tAB:_Corps"><b>B</b>rake <b>P</b>edal <b>T</b>ransmitter <b>U</b>nit</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>CBIT </b></p>
</td>	<td><p class="tAB:_Corps"><b>C</b>ontinuous <b>B</b>uilt-<b>I</b>n <b>T</b>est</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>CMOS</b></p>
</td>	<td><p class="tAB:_Corps"><b>C</b>omplementary <b>M</b>etal–<b>O</b>xide–<b>S</b>emiconductor</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>Copil</b></p>
</td>	<td><p class="tAB:_Corps"><b>Co-pil</b>ot<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>COM</b></p>
</td>	<td><p class="tAB:_Corps"><b>Com</b>mand<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>CRC</b></p>
</td>	<td><p class="tAB:_Corps"><b>C</b>yclic<b> R</b>edundancy<b> C</b>heck<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>EOF</b></p>
</td>	<td><p class="tAB:_Corps"><b>E</b>nd<b> O</b>f <b>F</b>rame<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>EOS</b></p>
</td>	<td><p class="tAB:_Corps"><b>E</b>nd<b> O</b>f <b>S</b>ampling<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>FPGA</b></p>
</td>	<td><p class="tAB:_Corps"><b>F</b>ield <b>P</b>rogrammable <b>G</b>ate <b>A</b>rray</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>FH</b></p>
</td>	<td><p class="tAB:_Corps"><b>F</b>light<b> H</b>our<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>HCI</b></p>
</td>	<td><p class="tAB:_Corps"><b>H</b>ardware <b>C</b>onfiguration <b>I</b>ndex</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>IDE</b></p>
</td>	<td><p class="tAB:_Corps"><b>Ide</b>ntifier extension bit<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>IFS</b></p>
</td>	<td><p class="tAB:_Corps"><b>I</b>nter<b> F</b>rame<b> S</b>pacing<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>IF</b></p>
</td>	<td><p class="tAB:_Corps"><b>I</b>nter<b>f</b>ace</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>LSB</b></p>
</td>	<td><p class="tAB:_Corps"><b>L</b>east <b>S</b>ignificant<b> B</b>yte<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>MBD</b></p>
</td>	<td><p class="tAB:_Corps"><b>M</b>essier <b>B</b>ugatti <b>D</b>owty</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>MON</b></p>
</td>	<td><p class="tAB:_Corps"><b>Mon</b>itoring<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>PBIT</b></p>
</td>	<td><p class="tAB:_Corps"><b>P</b>ower up <b>B</b>uilt-<b>I</b>n <b>T</b>est</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>Pil</b></p>
</td>	<td><p class="tAB:_Corps"><b>Pil</b>ot<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>REC</b></p>
</td>	<td><p class="tAB:_Corps"><b>R</b>eceive <b>E</b>rror <b>C</b>ounter</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>Rx</b></p>
</td>	<td><p class="tAB:_Corps"><b>R</b>eceive channel</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>SEU</b></p>
</td>	<td><p class="tAB:_Corps"><b>S</b>ingle<b> E</b>vent<b> U</b>pset<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>SOF</b></p>
</td>	<td><p class="tAB:_Corps"><b>S</b>tart<b> O</b>f<b> F</b>rame<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>TBC</b></p>
</td>	<td><p class="tAB:_Corps"><b>T</b>o <b>B</b>e <b>C</b>onfirmed</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>TBD</b></p>
</td>	<td><p class="tAB:_Corps"><b>T</b>o <b>B</b>e <b>D</b>etermined</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>TEC</b></p>
</td>	<td><p class="tAB:_Corps"><b>T</b>ransmit <b>E</b>rror <b>C</b>ounter</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>TI</b></p>
</td>	<td><p class="tAB:_Corps"><b>T</b>exas <b>I</b>nstruments</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>MEU</b></p>
</td>	<td><p class="tAB:_Corps"><b>M</b>ultiple<b> E</b>vent<b> U</b>psets<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>Mic</b></p>
</td>	<td><p class="tAB:_Corps"><b>Mic</b>roship<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>ONS</b></p>
</td>	<td><p class="tAB:_Corps"><b>ON S</b>emiconductor</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>OOR</b></p>
</td>	<td><p class="tAB:_Corps"><b>O</b>ut<b> O</b>f<b> R</b>ange<b /></p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>Tx</b></p>
</td>	<td><p class="tAB:_Corps"><b>T</b>ransmit channel</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>T</b></p>
</td>	<td><p class="tAB:_Corps">CAN time frame</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>Tr</b></p>
</td>	<td><p class="tAB:_Corps">CAN time re-transmission frame</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><b>MSB</b></p>
</td>	<td><p class="tAB:_Corps"><b>M</b>ost <b>S</b>ignificant<b> B</b>yte<b /></p>
</td></tr>
</tbody></table>
<p class="titre_2">3.3 <b>Convention
</b></p>
<p class="corps_de_texte">The following table details number convention
</p>
<table><tbody><tr>	<td><p class="sIGN:_Title"><b>Number type</b></p>
</td>	<td><p class="sIGN:_Title"><b>Convention</b></p>
</td></tr>
<tr>	<td><p class="sIGN:_Function">Decimal </p>
</td>	<td><p class="sIGN:_Date">The decimal number followed by “d”. <i>Ex: 15d</i></p>
</td></tr>
<tr>	<td><p class="sIGN:_Function">Hexadecimal </p>
</td>	<td><p class="sIGN:_Date">The hexadecimal number followed by “h”. <i>Ex: Fh</i></p>
</td></tr>
<tr>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Date">The hexadecimal address after “0x”. <i>Ex: 0xF</i></p>
</td></tr>
<tr>	<td><p class="sIGN:_Function">Binary </p>
</td>	<td><p class="sIGN:_Date">The binary number followed by “b”. <i>Ex: 1111b</i></p>
</td></tr>
</tbody></table>
<p class="figure">Table 3‑1: Numbers convention
</p>
<p class="corps_de_texte">In the document, “_X” is used to explain that multiple signals with the same name are concerned: SILKAN_PROG_X is used for SILKAN_PROG_1 and SILKAN_PROG_2 and DEVICE_ID_X is used for DEVICE_ID_1, DEVICE_ID_2 and DEVICE_ID_3.</p>
<p class="sans_interligne">For the CAN frame description, the following convention is used:</p>
<p class="sans_interligne">For example, the frame that gives the brake order information is called BPTU_xxx_Order_CANi with xxx = pil/copil and i = 1 or 2.</p>
<p class="pAGE_BLANK:_Title"><b>This page is left blank intentionally.
</b></p>
<p class="titre_1">4 <b>Hardware Requirements</b></p>
<p class="titre_2">4.1 <b>Scope</b></p>
<p class="corps_de_texte">This development specification (hereafter referred to as HRD) defines the requirements for BPTU FPGA. These requirements are grouped as functional, performance, environmental, test and safety requirements.
</p>
<p class="corps_de_texte">The figure below describes the FPGA architecture.</p>
<p class="corps_de_texte"><div class="embedded" id="_1479123100" />
<img src="embedded:image3.emf" alt="image3.emf" /><p>ADC1 interfaceADC2 interfaceADC3 interface</p>

<p>ARINC825 interface</p>

<p>CBIT </p>

<p>manager</p>

<p>Reference time </p>

<p>counters</p>

<p>Frames </p>

<p>generation</p>

<p>ARINC825 interface </p>

<p>manager</p>

<p>Main controller</p>

<p>FPGA</p>

<p>Data from </p>

<p>ADC 1</p>

<p>Data from </p>

<p>ADC 3</p>

<p>Data from </p>

<p>ADC 2Control</p>

<p>Control</p>

<p>Transmit</p>

<p>channel</p>

<p>Receive</p>

<p>channel </p>

<p>(monitoring)</p>

<p>ControlControlControlDataDataDataStatusStatusStatus</p>

<p>Status/InterrupData</p>

<p>Pin Programming</p>

<p>Device ID</p>

<p>Silkan Prog</p>

<p>Control</p>

<p>RS232</p>

<p>Interface</p>

<p>EEPROM </p>

<p>interface</p>

<p>Data out</p>

<p>Data in</p>

<p>Data/</p>

<p>Control</p>

<p>PBIT </p>

<p>manager</p>

</p>
<p class="légende">Figure 4‑1: BPTU FPGA block diagram</p>
<p class="corps_de_texte">The BPTU FPGA is interfaced with 3 Analog to Digital Converter (ADC):
</p>
<p class="corps_de_texte">· ADC1 providing BPTU left pedal sensor data
</p>
<p class="corps_de_texte">· ADC2 providing BPTU right pedal sensor data
</p>
<p class="corps_de_texte">· ADC3 providing data from the external power supply (28Vdc) and the internal (3.3Vdc) power supply.</p>
<p class="corps_de_texte">ADC data are centralized in the FPGA Controller which manages the ADCs, an ARINC825 controller, a RS232 controller and an EEPROM controller.</p>
<p class="corps_de_texte">Upper level requirement are located in the [IAD2]   

 REF _Ref387236670 \h 
<b>B</b>oard <b>R</b>equirement <b>D</b>ata (<b>BRD</b>).
</p>
<p class="titre_2">4.2 <b>Hardware Interface description</b></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0005</b></p>
</td>	<td><p class="reqIdent"><b>FPGA pinout</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0680-D partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0690-D partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition: </u></b></p>
<p class="reqTexte">The pinout for the both FPGA shall be compliant with:</p>
<p><b>Function
</b></p>
<p><b>Signal name
</b></p>
<p><b>Description</b></p>
<p><b>I
</b></p>
<p><b>O
</b></p>
<p><b>Reset state</b></p>
<p><b>Synchronization
</b></p>
<p><b>Pin COM
</b></p>
<p><b>Pin MON
</b></p>
<p><b>Global signals
</b></p>
<p>RESET_N
</p>
<p>Reset
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>async
</p>
<p>G10
</p>
<p>H20
</p>
<p>SYS_CLK
</p>
<p>System clock 16 MHz
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p> -
</p>
<p>H3 
</p>
<p>J19
</p>
<p><b>CAN
</b></p>
<p>CAN_TX
</p>
<p>CAN transmission
</p>
<p>-
</p>
<p>X
</p>
<p>1
</p>
<p>sys_clk
</p>
<p>C6 
</p>
<p>M16
</p>
<p>CAN_RX
</p>
<p>CAN reception
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>sys_clk
</p>
<p>C7 
</p>
<p>M15
</p>
<p><b>ADC 1
(AD7091)
</b></p>
<p>ADC1_SDO
</p>
<p>Data from ADC 1
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>sys_clk
</p>
<p>A3 
</p>
<p>R17
</p>
<p>ADC1_SCLK
</p>
<p>Serial clock 
</p>
<p>-
</p>
<p>X
</p>
<p>1
</p>
<p>sys_clk
</p>
<p>A10
</p>
<p>P18
</p>
<p>ADC1_CS_N
</p>
<p>Chip select
</p>
<p>-
</p>
<p>X
</p>
<p>1
</p>
<p>sys_clk
</p>
<p>B1 
</p>
<p>R16
</p>
<p>ADC1_CONVST_N
</p>
<p>Conversion start
</p>
<p>-
</p>
<p>X
</p>
<p>1
</p>
<p>sys_clk
</p>
<p>B4 
</p>
<p>N20
</p>
<p><b>ADC 2
(ADS7229)
</b></p>
<p>ADC2_SDO
</p>
<p>Data from ADC 2
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>sys_clk
</p>
<p>E11
</p>
<p>T18
</p>
<p>ADC2_SDI
</p>
<p>Data to ADC 2
</p>
<p>-
</p>
<p>X
</p>
<p>0
</p>
<p>sys_clk
</p>
<p>E3 
</p>
<p>U18
</p>
<p>ADC2_EOC
</p>
<p>Status output
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>sys_clk
</p>
<p>D8 
</p>
<p>N16
</p>
<p>ADC2_SCLK
</p>
<p>Serial clock 
</p>
<p>-
</p>
<p>X
</p>
<p>1
</p>
<p>sys_clk
</p>
<p>F3 
</p>
<p>T20
</p>
<p>ADC2_CS_N
</p>
<p>Chip select
</p>
<p>-
</p>
<p>X
</p>
<p>1
</p>
<p>sys_clk
</p>
<p>D12
</p>
<p>P15
</p>
<p>ADC2_CONVST_N
</p>
<p>Conversion start
</p>
<p>-
</p>
<p>X
</p>
<p>1
</p>
<p>sys_clk
</p>
<p>D6 
</p>
<p>V19
</p>
<p><b>ADC 3 (AD7922)
</b></p>
<p>ADC3_DOUT
</p>
<p>Data from ADC 3</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>sys_clk
</p>
<p>A5 
</p>
<p>C1
</p>
<p>ADC3_DIN
</p>
<p>Data to ADC 3</p>
<p>-
</p>
<p>X
</p>
<p>0
</p>
<p>sys_clk
</p>
<p>C9 
</p>
<p>F5
</p>
<p>ADC3_SCLK
</p>
<p>Serial clock 
</p>
<p>-
</p>
<p>X
</p>
<p>1
</p>
<p>sys_clk
</p>
<p>A9 
</p>
<p>E2
</p>
<p>ADC3_CS_N
</p>
<p>Chip select
</p>
<p>-
</p>
<p>X
</p>
<p>1
</p>
<p>sys_clk
</p>
<p>B6 
</p>
<p>F1
</p>
<p><b>EEPROM (I²C)
</b></p>
<p>MEMORY_SCL
</p>
<p>Serial Clock
</p>
<p>-
</p>
<p>X
</p>
<p>1</p>
<p>sys_clk
</p>
<p>D3 
</p>
<p>K20
</p>
<p>MEMORY_WP
</p>
<p>Write-Protect Input
</p>
<p>-
</p>
<p>X
</p>
<p>0</p>
<p>sys_clk
</p>
<p>F4 
</p>
<p>K17
</p>
<p>MEMORY_SDA
</p>
<p>Serial Address/Data I/O
</p>
<p>X
</p>
<p>X
</p>
<p>Hi-Z
</p>
<p>sys_clk</p>
<p>J2 
</p>
<p>K18
</p>
<p><b>Discrete
</b></p>
<p>PIN_PROG_1
</p>
<p>Pilot BPTU
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>sys_clk
</p>
<p>C11
</p>
<p>C20
</p>
<p>PIN_PROG_2
</p>
<p>Copilot BPTU
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>sys_clk
</p>
<p>G9 
</p>
<p>E16
</p>
<p>DEVICE_ID_1
</p>
<p>COM / MON FPGA ID
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>sys_clk
</p>
<p>G11
</p>
<p>H15
</p>
<p>DEVICE_ID_2
</p>
<p>COM / MON FPGA ID
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>sys_clk
</p>
<p>H11
</p>
<p>J15
</p>
<p>DEVICE_ID_3
</p>
<p>COM / MON FPGA ID
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>sys_clk
</p>
<p>H7 
</p>
<p>F14
</p>
<p>SILKAN_PROG_1
</p>
<p>Maintenance/initialization signal
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>sys_clk
</p>
<p>K8 
</p>
<p>A19</p>
<p>SILKAN_PROG_2
</p>
<p>Maintenance/initialization signal
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>sys_clk
</p>
<p>J5 
</p>
<p>A20</p>
<p><b>Serial link
</b></p>
<p>RX_DATA
</p>
<p>Serial data reception
</p>
<p>X
</p>
<p>-
</p>
<p>-
</p>
<p>-
</p>
<p>M7 
</p>
<p>C19</p>
<p>TX_DATA
</p>
<p>Serial data transmission
</p>
<p>-
</p>
<p>X
</p>
<p>1
</p>
<p>sys_clk
</p>
<p>M3 
</p>
<p>B19</p>
<p class="reqSection"><b><u>Rationale:</u></b></p>
<p>This requirement is justified at upper level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: </p>
</td></tr>
</tbody></table>
<p class="titre_2">4.3 <b>Anti-metastability mechanisms 
</b></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0008-DR</b></p>
</td>	<td><p class="reqIdent"><b>Input anti metastability</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived </b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">Following inputs of BPTU FPGA shall be protected by an anti metastability mechanism:
</p>
<p><b>Function
</b></p>
<p><b>Signal name
</b></p>
<p><b>Description</b></p>
<p><b>CAN</b></p>
<p>CAN_RX
</p>
<p>CAN reception
</p>
<p><b>ADC 1
(AD7091)
</b></p>
<p>ADC1_SDO
</p>
<p>Data from ADC 1
</p>
<p><b>ADC 2
(ADS7229)
</b></p>
<p>ADC2_SDO
</p>
<p>Data from ADC 2
</p>
<p>ADC2_EOC
</p>
<p>Status output
</p>
<p><b>ADC 3 (AD7922)
</b></p>
<p>ADC3_DOUT
</p>
<p>Data from ADC 3</p>
<p><b>EEPROM (I²C)
</b></p>
<p>MEMORY_SDA
</p>
<p>Serial Address/Data I/O
</p>
<p><b>Discrete
</b></p>
<p>PIN_PROG_1
</p>
<p>Pilot BPTU
</p>
<p>PIN_PROG_2
</p>
<p>Copilot BPTU
</p>
<p>DEVICE_ID_1
</p>
<p>COM / MON FPGA ID
</p>
<p>DEVICE_ID_2
</p>
<p>COM / MON FPGA ID
</p>
<p>DEVICE_ID_3
</p>
<p>COM / MON FPGA ID
</p>
<p>SILKAN_PROG_1
</p>
<p>Maintenance/initialization signal
</p>
<p>SILKAN_PROG_2
</p>
<p>Maintenance/initialization signal
</p>
<p><b>Serial link
</b></p>
<p>RX_DATA
</p>
<p>Serial data reception
</p>
<p class="reqSection"><b><u>Rationale:</u></b></p>
<p>This requirement is justified by the need of increasing the equipment robustness.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: all FPGA BPTU inputs are listed except reset and clock signals.</p>
</td></tr>
</tbody></table>
<p class="titre_2">4.4 <b>Clock and reset Requirements</b></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0010</b></p>
</td>	<td><p class="reqIdent"><b>Clock</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-1110-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">The BPTU FPGA shall be able to operate with only one clock of 16 MHz ± 800Hz (50ppm), with a duty cycle of 50% ± 5% coming from a BPTU FPGA input called SYS_CLK.</p>
<p class="reqSection"><b><u>Rationale:</u></b></p>
<p>This requirement is justified at upper level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0020</b></p>
</td>	<td><p class="reqIdent"><b>Internal reset activation</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-1010-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">The BPTU FPGA shall be initialized with a RESET_N signal active low, asynchronously asserted and synchronously deasserted regards to SYS_CLK.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified at upper level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: </p>
</td></tr>
</tbody></table>
<p class="titre_2">4.5 <b>Functional requirements</b></p>
<p class="titre_3">4.5.1 <b>System Modes
</b></p>
<p class="sans_interligne">This chapter defines the expected behavior of the equipment during the different modes. 
</p>
<p class="sans_interligne">· In the <b>Reset</b> mode, the BPTU FPGA is powered but inactive. No communication on the CAN bus and no data processing are performed. </p>
<p class="sans_interligne">· After reset and powering up, BPTU checks COM/MON and Maintenance/Initialization configurations’ pins. The pins used by the maintenance operator to choose the behavior mode (SILKAN_PROG_X pins) are checked to choose <b>Maintenance</b> or <b>Initialization</b> modes. The identification component pins (DEVICE_ID_X pins) are checked to know if BPTU FPGA is used in COM or MON configuration.</p>
<p class="sans_interligne">· The <b>Maintenance</b> mode is used load the EEPROM data and to execute the calibration process.</p>
<p class="sans_interligne">· During the <b>Initialization</b> mode, the equipment initializes the CAN interface and performs the PBIT.</p>
<p class="sans_interligne">· The equipment switches to <b>Normal</b> mode automatically as soon as PBIT is finished and successful:
</p>
<p class="sans_interligne">· PinProg settings are OK</p>
<p class="sans_interligne">· CAN controller self-test is OK</p>
<p class="sans_interligne">· Threshold on 28V power supply is reached 
</p>
<p class="sans_interligne">· EEPROM CRC check is OK 
</p>
<p class="sans_interligne">· In the <b>Normal</b> mode, the equipment sends periodically on the CAN bus 1 or CAN bus 2 (see chapter 4.4.3 COM/MON Configuration) the 9 predefined Pilot or Copilot frames (see chapter 4.4.2 Pilot/Copilot Configuration)</p>
<p class="sans_interligne">· In this mode, BPTU performs CBIT tests periodically (every 50 ms)</p>
<p class="sans_interligne">· As long as BPTU is powered, its behavior does not change except in the following cases detected during CBIT tests:
</p>
<p class="sans_interligne">· ADC3 3.3V power supplies monitoring test failed: in this case BPTU does not send the corresponding CAN frames during the next 50 ms interval.
</p>
<p class="sans_interligne">· ADC3 28V power supplies monitoring test failed: in this case BPTU does not send the corresponding CAN frames on the bus during the next 200 ms interval.
</p>
<p class="sans_interligne">· ADC1 and/or ADC2 test failed: in this case OOR values are sent into xxx_Order_CANy frames, other frames are not affected.
</p>
<p class="sans_interligne">The mode sequence is depicted in the figure below “Figure 4‑2: BPTU FPGA operational modes”:
</p>
<p class="sans_interligne"><div class="embedded" id="_1475327181" />
<img src="embedded:image4.emf" alt="image4.emf" /><p>Reset</p>

<p>Initialization(*)</p>

<p>Normal(*)</p>

<p>RESET_N = 1 AND no errors detected</p>

<p>PBIT OK</p>

<p>Maintenance(*)</p>

<p>SILKAN_PROG_x = 00</p>

<p>SILKAN_PROG_x = 11</p>

<p>Errors detected on </p>

<p>SILKAN_PROG_x signals OR DEVICE_ID_x signals</p>

<p>PBIT KO</p>

<p>(*)if RESET_N=0, return to reset mode</p>

</p>
<p class="légende">Figure 4‑2: BPTU FPGA operational modes</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0040</b></p>
</td>	<td><p class="reqIdent"><b>Operation mode transition from Reset mode to Initialization mode</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0555-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU FPGA operational modes shall go from Reset mode to Initialization mode when SILKAN_PROG_X = 11b and RESET_N = ‘1’.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to secure the system’s behavior.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: cf. [GRECT-184] in General Requirements for Equipment using CAN Technology [RD2]   and figure BPTU FPGA operational modes</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0050</b></p>
</td>	<td><p class="reqIdent"><b>Operation mode transition from Reset mode to Maintenance mode</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0550-D partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0570-D partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0575-D partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU FPGA operational modes shall go from Reset mode to Maintenance mode when SILKAN_PROG_X = 00b and RESET_N = ‘1’.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified at upper level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: cf. [GRECT-184] in General Requirements for Equipment using CAN Technology [RD2]    and figure Modes operation</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0060-S</b></p>
</td>	<td><p class="reqIdent"><b>Operation mode transition from Initialization mode to Normal operation mode</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0770-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0780-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0790-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU FPGA operational modes shall go from Initialization mode to Normal mode when the initialization operations are done and PBIT is OK.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to secure the system’s behavior.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
<p class="sans_interligne">· cf. [GRECT-184] in General Requirements for Equipment using CAN Technology [RD2]   and figure BPTU FPGA operational modes</p>
<p class="sans_interligne">· See PBIT chapter for more details.</p>
</td></tr>
</tbody></table>
<p class="titre_4">4.5.1.1 <b>Reset mode and forbidden programming
</b></p>
<p class="corps_de_texte">The following programming pins’ combinations are not allowed:</p>
<p class="corps_de_texte">· SILKAN_PROG_X pins different from (11) or (00)
</p>
<p class="corps_de_texte">· DEVICE_ID_X pins different from (101) or (010)</p>
<p class="corps_de_texte">If one of these combinations is detected, the BPTU FPGA stays in reset mode: the normal mode and the maintenance mode can’t be activated. </p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0070</b></p>
</td>	<td><p class="reqIdent"><b>SILKAN_PROG forbidden combinations</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0550-D partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0570-D partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0575-D partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU FPGA shall remain in Reset mode in the following configuration of SILKAN_PROG_X pins:</p>
<p class="sIGN:_Title"><b>BPTU MODE
</b></p>
<p class="sIGN:_Title"><b>SILKAN_PROG_2 value</b></p>
<p class="sIGN:_Title"><b>SILKAN_PROG_1 value</b></p>
<p class="sIGN:_Function">Forbidden mode</p>
<p class="sIGN:_Date">0b</p>
<p class="sIGN:_Date">1b</p>
<p class="sIGN:_Function">Forbidden mode</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Date">0b
</p>
<p class="légende">BPTU SILKAN_PROG forbidden combinations</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to secure BPTU behavior.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0080</b></p>
</td>	<td><p class="reqIdent"><b>Forbidden DEVICE_ID_X pins combinations</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0540 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU FPGA shall remain in Reset mode in the following configuration of DEVICE_ID_x pins:</p>
<p class="sIGN:_Title"><b>BPTU Channel
</b></p>
<p class="sIGN:_Title"><b>Device_ID_3 value </b></p>
<p class="sIGN:_Title"><b>Device_ID_2 value
</b></p>
<p class="sIGN:_Title"><b>Device_ID_1 value
</b></p>
<p class="sIGN:_Function">Forbidden channel</p>
<p class="sIGN:_Date">0b
</p>
<p class="sIGN:_Date">0b
</p>
<p class="sIGN:_Date">0b
</p>
<p class="sIGN:_Function">Forbidden channel</p>
<p class="sIGN:_Date">0b
</p>
<p class="sIGN:_Date">0b
</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Function">Forbidden channel</p>
<p class="sIGN:_Date">0b
</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Function">Forbidden channel</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Date">0b
</p>
<p class="sIGN:_Date">0b
</p>
<p class="sIGN:_Function">Forbidden channel</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Date">0b
</p>
<p class="sIGN:_Function">Forbidden channel</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Date">1b
</p>
<p class="légende">BPTU forbidden COM/MON programming
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to secure BPTU behavior.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<p class="titre_4">4.5.1.2 <b>Initialization mode
</b></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0090</b></p>
</td>	<td><p class="reqIdent"><b>Initialization mode for CAN interface</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">CAN interface output shall be in recessive state during the Initialization mode.</p>
<p class="reqTexte">· CAN_TX = ‘1b’</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure there are no perturbation of the communication on the CAN Bus.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note:
</p>
<p class="sans_interligne">· cf. [GRECT-011], [GRECT-014],  in General Requirements for Equipment using CAN Technology [RD2]   </p>
<p class="sans_interligne">· CAN self-test frame which is checked during PBIT is not sent on the bus.</p>
<p class="sans_interligne">· See “PBIT definition” requirement for more details.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0100-S</b></p>
</td>	<td><p class="reqIdent"><b>Initialization mode operations</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0640-D partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0760-S partial
</b></p>
<p class="reqMother"><b>BRD-BPTU-0770-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0780-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0790-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">During the Initialization mode, the BPTU FPGA shall execute:
</p>
<p class="reqTexte">· PBIT </p>
<p class="reqTexte">· 8 ADC1 acquisitions</p>
<p class="reqTexte">· 8 ADC2 acquisitions
</p>
<p class="reqTexte">· 16 acquisitions on the ADC3 3.3V channel</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure correct initialization and failure detection at system level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - See “PBIT definition” requirement for more details.
</p>
<p class="sans_interligne">· See figure BPTU FPGA Main sequences description for more information.</p>
</td></tr>
</tbody></table>
<p class="titre_4">4.5.1.3 <b>Normal operation</b></p>
<p class="sans_interligne">The following figures show respectively the CAN message transmission sequence, according to their refresh time (Figure 4‑3: BPTU FPGA Messages transmission sequence) and a general sequence description of the BPTU operation (Figure 4‑4: BPTU FPGA Main sequences description).</p>
<p class="sans_interligne">The general BPTU FPGA sequence is:</p>
<p class="sans_interligne">· After RESET_N deactivation, PBIT sequence starts</p>
<p class="sans_interligne">· Acquisitions on ADC1, ADC2 and ADC3 are performed</p>
<p class="sans_interligne">· If PBIT activity successes, CAN frames can be transmitted in accordance with the messages transmission sequence. This time is called t0 time.</p>
<p class="sans_interligne">· The normal operation mode is started.</p>
<p class="sans_interligne">· CBIT activity is done every 50 ms cycle.
</p>
<p class="sans_interligne">The Figure 4‑4: BPTU FPGA Main sequences description presents an example of a BPTU sequence implementation. It means that the timings presented in the figure are for example and do not present requirements to be verified.</p>
<p class="sans_interligne">The requirements that are written in the rest of the document and that needs to be checked are listed below:</p>
<p class="sans_interligne">· 8 acquisitions done on ADC1 in Initialization mode and each 50 ms window during normal mode. An average on these 8 acquisitions is performed.
</p>
<p class="sans_interligne">· 8 acquisitions done on ADC2 in Initialization mode and each 50 ms window during normal mode. An average on these 8 acquisitions is performed.</p>
<p class="sans_interligne">· 16 acquisitions done on ADC3 channel 1 in Initialization mode and each 50 ms window during normal mode. These values are used for 3.3V monitoring.</p>
<p class="sans_interligne">· 2 acquisitions done on ADC3 channel 0 in Initialization mode and each 50 ms window during normal mode. It means that 8 acquisitions are performed each 200 ms in normal mode. The 2 acquisitions acquired during Initialization mode are used in PBIT and CBIT first frames.</p>
<p class="corps_de_texte"><div class="embedded" id="_1479121278" />
<img src="embedded:image5.emf" alt="image5.emf" /><p>&lt; 100 ms</p>

<p>Transfert frame rate : 500 kbits/s</p>

<p>t0</p>

<p>BPTU_xxx_Order_CANi</p>

<p>BPTU_xxx_PBIT_CANi</p>

<p>BPTU_xxx_CBIT_CANi</p>

<p>BPTU_xxx_BusBit_CANi</p>

<p>BPTU_xxx_PN_MSB_CANi</p>

<p>BPTU_xxx_PN_LSB_CANi</p>

<p>BPTU_xxx_SWPN_MSB_CANi</p>

<p>BPTU_xxx_SWPN_LSB_CANi</p>

<p>BPTU_xxx_SN_CANi</p>

<p>t1 = t0 + 50 mst2t3t4 = t0 + 200 ms</p>

<p>T</p>

<p>Initialization </p>

<p>mode success</p>

<p>Reset_n </p>

<p>disabled</p>

<p>t0</p>

<p>t0</p>

<p>t0</p>

<p>t0</p>

<p>t0</p>

<p>t0</p>

<p>t0</p>

<p>t0</p>

<p>t5t20 = t0 + 1000 mst40 = t0 + 2000 ms</p>

<p>t6t7t8 = t0 + 400 ms</p>

<p>T = Time slot = 0.5 ms </p>

</p>
<p class="corps_de_texte">Figure 4‑3: BPTU FPGA Messages transmission sequence</p>
<p class="corps_de_texte"><div class="embedded" id="_1483359249" />
<img src="embedded:image6.emf" alt="image6.emf" /><p>50 ms</p>

<p>Transfert frame rate : 500 kbits/s</p>

<p>t0</p>

<p>Acquisition order</p>

<p>t1=t0 + 50 mst3=t2 + 50 ms</p>

<p>Reset_n </p>

<p>disabled</p>

<p>Init mode</p>

<p>&lt; 100 ms</p>

<p>Normal mode</p>

<p>EEPROM readEEPROM read</p>

<p>Send of CAN frame</p>

<p>Power supply </p>

<p>monitoring</p>

<p>EEPROM values bufferEEPROM values buffer</p>

<p>EEPROM </p>

<p>management</p>

<p>CAN busses</p>

<p>Send of CAN frames</p>

<p>1</p>

<p>3.3V CBIT arbitration</p>

<p>EEPROM read</p>

<p>Send of CAN frames</p>

<p>Monitoring done in comparison between a min and max threshold on each 8 samples acquired</p>

<p>t4=200 ms</p>

<p>ADC1</p>

<p>ADC2</p>

<p>C</p>

<p>O</p>

<p>N</p>

<p>F</p>

<p>Monitoring done in comparison between a min and max threshold on each 16 samples acquired</p>

<p>28V CBIT arbitration</p>

<p>50 ms</p>

<p>Mean value done on the 8 acquisitions </p>

<p>sent in the order frame</p>

<p>4 ms</p>

<p>18</p>

<p>4 ms</p>

<p>C</p>

<p>O</p>

<p>N</p>

<p>F</p>

<p>12</p>

<p>2 ms</p>

<p>5678</p>

<p>4 ms</p>

<p>234567</p>

<p>18234567</p>

<p>12345678910111213141516</p>

<p>2 ms</p>

<p>8</p>

<p>8</p>

<p>2 ms</p>

<p>8</p>

<p>8</p>

<p>2 ms</p>

<p>8</p>

<p>8</p>

<p>1</p>

<p>1</p>

<p>1</p>

<p>1</p>

<p>1</p>

<p>C</p>

<p>O</p>

<p>N</p>

<p>F</p>

<p>C</p>

<p>O</p>

<p>N</p>

<p>F</p>

<p>Mean value done on the 8 acquisitions </p>

<p>sent in the order frame</p>

<p>Mean value done on the 8 acquisitions </p>

<p>sent in the order frame</p>

<p>Mean value done on the 8 acquisitions </p>

<p>sent in the order frame</p>

<p>ADC3 channel 1</p>

<p>ADC3 channel 0</p>

<p>116116116</p>

<p>12</p>

<p>4 ms4 ms4 ms</p>

<p>4 ms4 ms4 ms</p>

<p>4 ms4 ms4 ms</p>

<p>4 ms4 ms4 ms</p>

<p>4 ms4 ms4 ms</p>

<p>4 ms4 ms4 ms</p>

<p>4 ms4 ms4 ms</p>

<p>2 ms</p>

</p>
<p class="corps_de_texte">Figure 4‑4: BPTU FPGA Main sequences description</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0110</b></p>
</td>	<td><p class="reqIdent"><b>CAN Messages periodicity (refresh periods)</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0720</b></p>
<p class="reqMother"><b>BRD-BPTU-0725
</b></p>
<p class="reqMother"><b>BRD-BPTU-0730</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">Period of the cyclic message transmissions shall be:</p>
<p class="sIGN:_Title">Frame Name
</p>
<p class="sIGN:_Title">Refresh period
</p>
<p class="sIGN:_Title">Tolerance
</p>
<p class="sans_interligne">BPTU_xxx_Order_CANi     
</p>
<p class="sans_interligne">50 ms
</p>
<p class="sans_interligne">+/- 1 ms 
</p>
<p class="sans_interligne">BPTU_xxx_PBIT_CANi      
</p>
<p class="sans_interligne">200 ms
</p>
<p class="sans_interligne">BPTU_xxx_CBIT_CANi      
</p>
<p class="sans_interligne">200 ms
</p>
<p class="sans_interligne">BPTU_xxx_BusBIT_CANi    
</p>
<p class="sans_interligne">1000 ms
</p>
<p class="sans_interligne">BPTU_xxx_PN_MSB_CANi    
</p>
<p class="sans_interligne">2000 ms
</p>
<p class="sans_interligne">BPTU_xxx_PN_LSB_CANi    
</p>
<p class="sans_interligne">2000 ms
</p>
<p class="sans_interligne">BPTU_xxx_SWPN_MSB_CANi  
</p>
<p class="sans_interligne">2000 ms
</p>
<p class="sans_interligne">BPTU_xxx_SWPN_LSB_CANi  
</p>
<p class="sans_interligne">2000 ms
</p>
<p class="sans_interligne">BPTU_xxx_SN_CANi      
</p>
<p class="sans_interligne">2000 ms
</p>
<p class="sans_interligne">xxx = pil/copil
</p>
<p class="sans_interligne">i = 1 or 2
</p>
<p class="légende">Refresh periods
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to improve predictability of the system.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - See the figure “BPTU FPGA Messages transmission sequence”
</p>
<p class="sans_interligne">· cf. [GRECT-022] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0120-D</b></p>
</td>	<td><p class="reqIdent"><b>CAN Messages transmission sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">Each CAN message shall be transmitted according the figure BPTU FPGA Messages transmission sequence, except if the CAN Controller is in Bus Off mode.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to avoid conflict between transmitted frames.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: cf. [GRECT-022] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
<tr>	<td><p class="reqIdent"><b>HRD-BPTU-0130-S</b></p>
</td>	<td><p class="reqIdent"><b>CAN frame start</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0760-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0770-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0780-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0790-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU FPGA shall start CAN frame transmission when PBIT definition is successful and when acquisitions on ADC1, ADC2 and ADC3 channels are performed. </p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure no data loss.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - See PBIT requirements for more details</p>
<p class="sans_interligne">· See the figure BPTU FPGA Main sequences description</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0140</b></p>
</td>	<td><p class="reqIdent"><b>CAN Frame re-transmission</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">If there is a transmission error or a priority loss on a frame, then this frame shall be repeated:
</p>
<p class="reqTexte">· while the transmission problem persists</p>
<p class="reqTexte">· until its next refresh period
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure no data loss.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: - cf. [GRECT-029], [GRECT-030], [GRECT-076] in General Requirements for Equipment using CAN Technology [RD2]   </p>
<p class="corps_de_texte">An example is given Figure 4‑5: BPTU FPGA Re-transmission examples</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0142</b></p>
</td>	<td><p class="reqIdent"><b>CAN Frame re-transmission schedule</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">If there is a re-transmitted frame R and another scheduled frame S to transmit in the same time slot (T), then the scheduled frame S shall be transmitted first.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure no data loss.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0146-D</b></p>
</td>	<td><p class="reqIdent"><b>CAN Frame re-transmission sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived </b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">If more than one frame gets a transmission problem, then the re-transmission priority shall be: </p>
<p class="reqTexte">· BPTU_xxx_Order_CANi</p>
<p class="reqTexte">· BPTU_xxx_PBIT_CANi</p>
<p class="reqTexte">· BPTU_xxx_CBIT_CANi</p>
<p class="reqTexte">· BPTU_xxx_BusBIT_CANi</p>
<p class="reqTexte">· BPTU_xxx_PN_MSB_CANi</p>
<p class="reqTexte">· BPTU_xxx_PN_LSB_CANi</p>
<p class="reqTexte">· BPTU_xxx_SWPN_MSB_CANi</p>
<p class="reqTexte">· BPTU_xxx_SWPN_LSB_CANi</p>
<p class="reqTexte">· BPTU_xxx_SN_CANi</p>
<p class="sans_interligne">xxx = pil/copil
</p>
<p class="sans_interligne">i = 1 or 2
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure no data loss.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<p class="corps_de_texte"><div class="embedded" id="_1478089659" />
<img src="embedded:image7.emf" alt="image7.emf" /><p>&lt; 100 ms</p>

<p>Transfert frame rate : 500 kbits/s</p>

<p>t0</p>

<p>BPTU_xxx_Order_CANi</p>

<p>BPTU_xxx_PBIT_CANi</p>

<p>BPTU_xxx_CBIT_CANi</p>

<p>BPTU_xxx_BusBit_CANi</p>

<p>BPTU_xxx_PN_MSB_CANi</p>

<p>BPTU_xxx_PN_LSB_CANi</p>

<p>BPTU_xxx_SWPN_MSB_CANi</p>

<p>BPTU_xxx_SWPN_LSB_CANi</p>

<p>BPTU_xxx_SN_CANi</p>

<p>t1 = t0 + 50 mst2t3t4 = t0 + 200 ms</p>

<p>T</p>

<p>Initialization </p>

<p>mode success</p>

<p>Reset_n </p>

<p>disabled</p>

<p>T = Time slot = 0.5 ms </p>

<p>t0</p>

<p>t0</p>

<p>t0</p>

<p>t0</p>

<p>t0</p>

<p>t0</p>

<p>t0</p>

<p>t0</p>

<p>t5t20 = t0 + 1000 mst40 = t0 + 2000 ms</p>

<p>t6t7t8 = t0 + 400 ms</p>

<p>Transmission error </p>

<p>Order CAN frame</p>

<p>Max re-transmission </p>

<p>time Order CAN frame</p>

<p>Transmission error </p>

<p>CBIT CAN frame</p>

<p>Max re-transmission </p>

<p>CBIT CAN frame</p>

<p>Transmission error </p>

<p>Order CAN frame</p>

<p>Max re-transmission </p>

<p>time Order CAN frame</p>

<p>Transmission error </p>

<p>SWPN MSB CAN frame</p>

<p>Max re-transmission </p>

<p>SWPN MSB CAN frame</p>

</p>
<p class="figure">Figure 4‑5: BPTU FPGA Re-transmission examples
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0147-D</b></p>
</td>	<td><p class="reqIdent"><b>BPTU CAN Frame time slot</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived </b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">An effective 50 ms window shall be split into 100 time slots.
</p>
<p class="reqTexte">Only one scheduled or re-transmitted frame shall be sent within one time slot.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure no data loss.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<p class="titre_4">4.5.1.4 <b>Maintenance mode
</b></p>
<p class="corps_de_texte">To guarantee correct measurements from ADC devices, a calibration step must be performed. This calibration is done for each BPTU system after production. </p>
<p class="corps_de_texte">An external EEPROM is used to store the calibration data and the below-mentioned BPTU system configuration data:</p>
<p class="corps_de_texte">· Hardware Serial Number (SN), Hardware Part Number (PN) and PLD Part
 
Number (SWPN) values</p>
<p class="corps_de_texte">· All CAN frames identifiers</p>
<p class="corps_de_texte">· Thresholds of acquisition data</p>
<p class="corps_de_texte">EEPROM memory map is given in § 6.1.</p>
<p class="corps_de_texte">The figure below presents a global links view of the system FPGA / Board / Computer
</p>
<p class="corps_de_texte"><div class="embedded" id="_1476702318" />
<img src="embedded:image8.emf" alt="image8.emf" /><p>RS232 </p>

<p>MON link</p>

<p>RS232 </p>

<p>COM link</p>

<p>FPGA </p>

<p>MON</p>

<p>FPGA </p>

<p>COM</p>

<p>EEPROMEEPROM</p>

<p>I2C link</p>

<p>I2C link</p>

</p>
<p class="figure">Figure 4‑6: FPGA/Board/Computer links view</p>
<p class="corps_de_texte">This EEPROM is programmed by the operator through an EEPROM program file. This file is sent to the FPGA through an EEPROM manager application using a RS232 link. The BPTU FPGA is in charge to store the data in the EEPROM component via an I2C link. (Refer to § 4.4.1.4.1 for detailed information). This operation is done for both FPGAs COM and MON. So two different EEPROM files, one file for COM and another one for MON channel, are used for the configuration.</p>
<p class="corps_de_texte">The maintenance mode is dedicated to these operations:
</p>
<p class="corps_de_texte">· EEPROM programming (§4.4.1.4.2)
</p>
<p class="corps_de_texte">· ADCs calibration (§4.4.1.4.3)
</p>
<p class="corps_de_texte">To avoid any unintentional switch to this mode, two configuration input pins (SILKAN_PROG_1&amp;2) are tested after reset. Only one combination allows BPTU to go into Maintenance mode.</p>
<p class="corps_de_texte">In the following chapters, flowcharts are used to describe RS232 commands processes. The following convention is used:</p>
<p class="corps_de_texte">· Bubble forms define activity</p>
<p class="corps_de_texte">· Diamonds forms define decision </p>
<p class="corps_de_texte">The following legend specifies which link is used:
</p>
<p class="corps_de_texte"><div class="embedded" id="_1477120468" />
<img src="embedded:image9.emf" alt="image9.emf" /><p>RS232</p>

 To represents action in relation with RS232</p>
<p class="corps_de_texte"><div class="embedded" id="_1477725135" />
<img src="embedded:image10.emf" alt="image10.emf" /><p>EEPROM</p>

 To represents action in relation with EEPROM
</p>
<p class="titre_5,NIV_5,TITLE5">4.5.1.4.1 <u>RS232 management</u></p>
<p class="titre_6,Annexe_1,Legal_Level_1.,H6,h6,Annexe1,Ref_Heading_3,rh3,Ref_Heading_31,rh31,H61,Third_Subheading,Bullet_list,6,Normal_décalé_bullet,(Shift_Ctrl_6),T6,heading_6,Bullet_list1,Bullet_list2,Bullet_list11,Bullet_list3,Bullet_list12,Bullet_l">4.5.1.4.1.1 <u>RS232 link layer</u></p>
<p class="corps_de_texte">The BPTU FPGA has one RS232 receiver and transmitter line capable of receiving and sending frames of 8 bit serial data.</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0160</b></p>
</td>	<td><p class="reqIdent"><b>RS232 activation condition</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0560-D</b></p>
<p class="reqMother"><b>BRD-BPTU-0580-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The RS232 link shall be used only in Maintenance mode.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to secure maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0170-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 characteristics</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The RS232 link used in BPTU shall be able to operate in the following modes:</p>
<p class="sIGN:_Title"><b>Baud rate
</b></p>
<p class="sIGN:_Title"><b>Start bit
</b></p>
<p class="sIGN:_Title"><b>Data
</b></p>
<p class="sIGN:_Title"><b>Parity bit
</b></p>
<p class="sIGN:_Title"><b>Stop bit
</b></p>
<p>115.2 kb/s +/- 4%</p>
<p>0b
</p>
<p>8 bits (lsb transmitted first)
</p>
<p>even
</p>
<p>1b
</p>
<p class="légende">RS232 link parameters
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0180-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 byte organization</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="corps_de_texte">A byte transmitted or received on the RS232 link shall have the following organization:</p>
<p class="sans_interligne"><div class="embedded" id="_1480854037" />
<img src="embedded:image11.emf" alt="image11.emf" /><p>bus idle</p>

<p>start </p>

<p>bit</p>

<p>lsb bit</p>

<p>1 stop </p>

<p>bit</p>

<p>bus idle</p>

<p>msb bit</p>

<p>sampling points</p>

<p>1 parity </p>

<p>bit</p>

<p>bit0bit1bit2bit3bit4bit5bit6bit7Parity bit</p>

<p>8 data bits</p>

<p>T = 8.68 µs +/-0.35 µs</p>

<p>T</p>

</p>
<p>RS232 byte organization
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0185-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 protocol error</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="corps_de_texte">The BPTU FPGA shall return a FPGA_error command if a parity error occurs or if a stop bit fails.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<p class="titre_6,Annexe_1,Legal_Level_1.,H6,h6,Annexe1,Ref_Heading_3,rh3,Ref_Heading_31,rh31,H61,Third_Subheading,Bullet_list,6,Normal_décalé_bullet,(Shift_Ctrl_6),T6,heading_6,Bullet_list1,Bullet_list2,Bullet_list11,Bullet_list3,Bullet_list12,Bullet_l">4.5.1.4.1.2 <u>RS232 application layer
</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0190-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 commands</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived </b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p>The BPTU FPGA shall manage following commands
</p>
<p class="sIGN:_Title"><b>Command
</b></p>
<p class="sIGN:_Title"><b>Transfer way
</b></p>
<p class="sIGN:_Title"><b>ASCII Symbol
</b></p>
<p class="sIGN:_Title"><b>Value
</b></p>
<p>write_data</p>
<p>Rx
</p>
<p>0
</p>
<p>30h
</p>
<p>write_start 
</p>
<p>Rx
</p>
<p>1
</p>
<p>31h
</p>
<p>FPGA_error
</p>
<p>Tx
</p>
<p>2
</p>
<p>32h
</p>
<p>FPGA_ready 
</p>
<p>Tx
</p>
<p>3
</p>
<p>33h
</p>
<p>FPGA_command_ok
</p>
<p>Tx
</p>
<p>4
</p>
<p>34h
</p>
<p>read_data
</p>
<p>Rx
</p>
<p>5
</p>
<p>35h
</p>
<p>read_start
</p>
<p>Rx
</p>
<p>6
</p>
<p>36h
</p>
<p>read_ready
</p>
<p>Rx
</p>
<p>7
</p>
<p>37h
</p>
<p>calibration_command
</p>
<p>Rx
</p>
<p>8
</p>
<p>38h
</p>
<p>calibration_offset_start
</p>
<p>Rx
</p>
<p>9
</p>
<p>39h
</p>
<p>calibration_gain_start
</p>
<p>Rx
</p>
<p>A
</p>
<p>41h
</p>
<p>read_calibration_data
</p>
<p>Rx
</p>
<p>B
</p>
<p>42h
</p>
<p>write_gain_data
</p>
<p>Rx
</p>
<p>C
</p>
<p>43h
</p>
<p>FPGA_ID_error
</p>
<p>Tx
</p>
<p>D
</p>
<p>44h
</p>
<p>FPGA_CRC_error
</p>
<p>Tx
</p>
<p>E
</p>
<p>45h
</p>
<p>reset_command
</p>
<p>Rx
</p>
<p>a
</p>
<p>61h
</p>
<p>reset_configuration_data
</p>
<p>Rx
</p>
<p>b
</p>
<p>62h
</p>
<p>RS232 commands with Rx is the PC to FPGA way and Tx is the FPGA to PC way</p>
<p class="reqSection"><b><u>Rationale:</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0195-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 commands response time</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived </b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p>The BPTU FPGA shall answer to all the RS232 commands in less than 1 s +/- 1 ms.</p>
<p class="reqSection"><b><u>Rationale:</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0200-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 full write data</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">The write sequence shall be compliant with the following figure:
</p>
<p class="reqTexte"><div class="embedded" id="_1482063037" />
<img src="embedded:image12.emf" alt="image12.emf" /><p>FPGA_ready </p>

<p>send</p>

<p>write_data ?</p>

<p>yes</p>

<p>FPGA_error send</p>

<p>yes</p>

<p>One data byte </p>

<p>reception</p>

<p>no</p>

<p>yes</p>

<p>no</p>

<p>yes</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>write_start </p>

<p>?</p>

<p>Last byte</p>

<p>written ?</p>

<p>Reset EEPROM </p>

<p>address</p>

<p>no</p>

<p>reset_</p>

<p>command ?</p>

<p>no</p>

<p>yes</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>Check </p>

<p>ID EEPROM</p>

<p>OK</p>

<p>?</p>

<p>FPGA_ID_error </p>

<p>send</p>

<p>no</p>

<p>IDLE</p>

<p>no</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>ID EEPROM byte </p>

<p>reception</p>

<p>yes</p>

<p>CRC check</p>

<p>needed?</p>

<p>no</p>

<p>Reset EEPROM </p>

<p>address</p>

<p>FPGA_CRC_error </p>

<p>send</p>

<p>Write in</p>

<p>EEPROM </p>

<p>success ?</p>

<p>CRC Check</p>

<p>Ok?</p>

<p>yes</p>

<p>no</p>

<p>CRC is done</p>

<p>when N modulo 12 equals 0</p>

<p>with N the number of bytes </p>

<p>received </p>

</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: IDLE state is the initial state after reset and is the same for all rs232 sequences</p>
</td></tr>
<tr>	<td><p class="reqIdent"><b>HRD-BPTU-0210-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 data order during a full write sequence </b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="sans_interligne">The write sequence shall be Byte[0],Byte[1],..,Byte[N-1] with :
 - Byte[i] the byte number i
 - Byte[i] is written at address[i]
 - N equals to the bytes number of all the memory map</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: see EEPROM memory map</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0220-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 full read sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">The read sequence shall be compliant with the following figure:
</p>
<p class="reqTexte"><div class="embedded" id="_1477811695" />
<img src="embedded:image13.emf" alt="image13.emf" /><p>FPGA_ready </p>

<p>send</p>

<p>read_data ?</p>

<p>yes</p>

<p>FPGA_error send</p>

<p>no</p>

<p>no</p>

<p>yes</p>

<p>no</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>yes</p>

<p>read_start </p>

<p>?</p>

<p>read in</p>

<p>EEPROM </p>

<p>success ?</p>

<p>read_ready ?</p>

<p>no</p>

<p>yes</p>

<p>Read one </p>

<p>EEPROM byte</p>

<p>EEPROM byte </p>

<p>send</p>

<p>Last byte</p>

<p>read?</p>

<p>yes</p>

<p>yes</p>

<p>reset_</p>

<p>command ?</p>

<p>no</p>

<p>yes</p>

<p>reset_</p>

<p>command ?</p>

<p>no</p>

<p>Reset EEPROM </p>

<p>address</p>

<p>Reset EEPROM </p>

<p>address</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>IDLE</p>

<p>no</p>

</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: IDLE state is the initial state after reset and is the same for all rs232 sequences</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0230-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 data order during a full read sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="sans_interligne">The read sequence shall be Byte[0],Byte[1],..,Byte[N-1] with :
 - Byte[i] the byte number i
 - Byte[i] is written at address[i]
 - N equals to the bytes number of all the memory map</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: see EEPROM memory map</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">When entering in maintenance mode, the RS232 manager is in an IDLE state and waits for a command reception to perform one of the following sequences:</p>
<p class="corps_de_texte">· A write data sequence,
</p>
<p class="corps_de_texte">· A write gain data sequence,
</p>
<p class="corps_de_texte">· A read data sequence,
</p>
<p class="corps_de_texte">· A read calibration data sequence,
</p>
<p class="corps_de_texte">· An ADC 1 &amp; 2 calibration offset and gain sequence
</p>
<p class="corps_de_texte">· A reset EEPROM sequence.
</p>
<p class="corps_de_texte">Following requirements detail each RS232 sequence.
</p>
<p class="corps_de_texte">For the BPTU FPGA, all these sequences can be executed in any order. A come back to IDLE state shall be done before starting a new process. The global sequence is controlled and imposed by the BPTU EEPROM manager application. In order to ensure that coherent values for the system are evaluated and stored in the EEPROM, the calibration sequence is the following:
</p>
<p class="corps_de_texte">· ADC 1 &amp; 2 calibration offset sequence at 0° for system pedals left and right </p>
<p class="corps_de_texte">· ADC 1 &amp; 2 calibration gain sequence at 10° for system pedals left and right,
</p>
<p class="corps_de_texte">· read calibration data sequence,
</p>
<p class="corps_de_texte">· the application evaluate a new gain value using the offset and gain values previously read,
</p>
<p class="corps_de_texte">· write gain sequence.
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0240-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 offset calibration sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">The offset calibration sequence shall be compliant with the following figure:
</p>
<p class="reqTexte"><div class="embedded" id="_1477811883" />
<img src="embedded:image14.emf" alt="image14.emf" /><p>FPGA_ready </p>

<p>send</p>

<p>calibration_</p>

<p>command ?</p>

<p>yes</p>

<p>FPGA_error send</p>

<p>yes</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>calibration_</p>

<p>offset_start </p>

<p>?</p>

<p>ADC 1 &amp; 2</p>

<p>Acquisition</p>

<p>Success ?</p>

<p>no</p>

<p>Reset_</p>

<p>command ?</p>

<p>no</p>

<p>yes</p>

<p>yes</p>

<p>write in</p>

<p>EEPROM </p>

<p>success ?</p>

<p>no</p>

<p>no</p>

<p>ADC 1 &amp; 2 </p>

<p>calibration</p>

<p>Calibration data </p>

<p>offset EEPROM </p>

<p>write</p>

<p>yes</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>IDLE</p>

<p>no</p>

</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: IDLE state is the initial state after reset and is the same for all rs232 sequences</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0250-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 data address in offset  calibration sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="sans_interligne">During the calibration offset data write process, the data bytes, acquired on ADC1 and ADC2, shall be respectively stored in EEPROM at addresses of CALIB_OFFSET_ADC1 and CALIB_OFFSET_ADC2 of the EEPROM memory map.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: see EEPROM memory map</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0260-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 calibration gain sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">The gain calibration sequence shall be compliant with the following figure:
</p>
<p class="reqTexte"><div class="embedded" id="_1477811931" />
<img src="embedded:image15.emf" alt="image15.emf" /><p>FPGA_ready </p>

<p>send</p>

<p>calibration_</p>

<p>command ?</p>

<p>yes</p>

<p>FPGA_error send</p>

<p>yes</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>calibration_</p>

<p>gain_start </p>

<p>?</p>

<p>ADC 1 &amp; 2</p>

<p>Acquisition</p>

<p>Success ?</p>

<p>no</p>

<p>Reset_</p>

<p>command ?</p>

<p>no</p>

<p>yes</p>

<p>yes</p>

<p>write in</p>

<p>EEPROM </p>

<p>success ?</p>

<p>no</p>

<p>no</p>

<p>ADC 1 &amp; 2 </p>

<p>calibration</p>

<p>yes</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>Calibration data </p>

<p>gain EEPROM </p>

<p>write</p>

<p>IDLE</p>

<p>no</p>

</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: IDLE state is the initial state after reset and is the same for all rs232 sequences</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0270-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 data address in gain calibration sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="sans_interligne">During the gain calibration sequence, the data bytes, acquired on ADC1 and ADC2, shall be respectively stored in EEPROM at addresses of CALIB_GAIN_ADC1 and CALIB_GAIN_ADC2 of the EEPROM memory map. </p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: see EEPROM memory map</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0280-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 calibration read sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">The calibration read sequence shall be compliant with the following figure:
</p>
<p class="reqTexte"><div class="embedded" id="_1477811983" />
<img src="embedded:image16.emf" alt="image16.emf" /><p>FPGA_ready </p>

<p>send</p>

<p>read_data ?</p>

<p>yes</p>

<p>FPGA_error send</p>

<p>no</p>

<p>no</p>

<p>yes</p>

<p>no</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>yes</p>

<p>read_</p>

<p>calibration_</p>

<p>data</p>

<p>?</p>

<p>read in</p>

<p>EEPROM </p>

<p>success ?</p>

<p>Read_ready ?</p>

<p>no</p>

<p>yes</p>

<p>Read one </p>

<p>EEPROM byte</p>

<p>EEPROM byte </p>

<p>send</p>

<p>Last byte</p>

<p>read?</p>

<p>yes</p>

<p>yes</p>

<p>Reset_</p>

<p>command ?</p>

<p>no</p>

<p>yes</p>

<p>Reset_</p>

<p>command ?</p>

<p>no</p>

<p>Reset EEPROM </p>

<p>address</p>

<p>Reset EEPROM </p>

<p>address</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>IDLE</p>

<p>no</p>

</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: IDLE state is the initial state after reset and is the same for all rs232 sequences</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0290-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 data order in read calibration sequence </b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="sans_interligne">The read calibration sequence shall be Byte[0],Byte[1],..,Byte[N-1] with :
 - Byte[i] the byte number i
 - Byte[i] corresponds to address [i+B]
</p>
<p class="sans_interligne"> - B equals to the start address of calibration section
</p>
<p class="sans_interligne"> - N equals to the byte number being in the calibration section of the memory map</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: see EEPROM memory map</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0300-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 gain write sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">The gain write sequence shall be compliant with the following figure:
</p>
<p class="reqTexte"><div class="embedded" id="_1477987095" />
<img src="embedded:image17.emf" alt="image17.emf" /><p>FPGA_ready </p>

<p>send</p>

<p>write_data ?</p>

<p>yes</p>

<p>FPGA_error send</p>

<p>yes</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>One data byte </p>

<p>reception</p>

<p>no</p>

<p>no</p>

<p>yes</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>write_gain</p>

<p>_data </p>

<p>?</p>

<p>Write in</p>

<p>EEPROM </p>

<p>success ?</p>

<p>Last byte</p>

<p>written ?</p>

<p>Reset EEPROM </p>

<p>address</p>

<p>no</p>

<p>Reset_</p>

<p>command ?</p>

<p>no</p>

<p>yes</p>

<p>FPGA_command</p>

<p>_ok send</p>

<p>IDLE</p>

<p>no</p>

<p>yes</p>

<p>yes</p>

<p>Check CRC</p>

<p>OK ?</p>

<p>no</p>

<p>Reset EEPROM </p>

<p>address</p>

<p>FPGA_CRC_error </p>

<p>send</p>

</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: IDLE state is the initial state after reset and is the same for all rs232 sequences</p>
</td></tr>
<tr>	<td><p class="reqIdent"><b>HRD-BPTU-0310-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 data order in gain write sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="sans_interligne">During the gain write sequence, the data bytes received from RS232 link shall be respectively stored in EEPROM at addresses of CALIB_GAIN_ADC1, CALIB_GAIN_ADC2, CALIB_OFFSET_ADC1, CALIB_OFFSET_ADC2 and the corresponding CRC bytes in the EEPROM memory map.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: see EEPROM memory map</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0320-D</b></p>
</td>	<td><p class="reqIdent"><b>Reset configuration data command</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">At reset_configuration_data command reception, the BPTU FPGA shall write 00h at all EEPROM addresses. </p>
<p class="reqTexte">It shall send a FPGA_command_ok if the operation succeed.</p>
<p class="reqTexte">It shall send a FPGA_error if the operation failed in case of wrong write EEPROM process.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0330-D</b></p>
</td>	<td><p class="reqIdent"><b>Reset command</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">At reset_command command reception, the BPTU FPGA shall go to the idle state and shall answer with the command_ok command.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: This command is used by the operator to return in a known state in case of error or wrong handle. </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0340-D</b></p>
</td>	<td><p class="reqIdent"><b>RS232 start commands</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">From idle state, only write_data, read_data, calibration_command, reset_configuration_data and reset_command shall be allowed, otherwise the BPTU shall send the FPGA_error command.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.1.4.2 <u>EEPROM management
</u></p>
<p>An external EEPROM is used to store all critical data for the system such as:
</p>
<p class="corps_de_texte">· HW Part Number
</p>
<p class="corps_de_texte">· PLD Part Number
</p>
<p class="corps_de_texte">· HW Serial Number
</p>
<p class="corps_de_texte">· Frames’ IDs
</p>
<p class="corps_de_texte">· ADCs Calibration data (offset and gain)</p>
<p class="corps_de_texte">· Thresholds of acquisition data</p>
<p class="corps_de_texte">Refer to § 6.1 for the details about EEPROM memory map.
</p>
<p class="corps_de_texte">In order to guarantee a complete segregation of the two channels (COM/MON), two different EEPROM references are used: one for each channel. An EEPROM ID is stored in the EEPROM and checked first when writing during the maintenance mode.</p>
<p class="corps_de_texte">The chosen devices are:
</p>
<p class="sans_interligne">· M24C64: 64K I2C EEPROM from ST ([RD7]   

 REF _Ref399162888 \h 
EEPROM_ST)
</p>
<p class="corps_de_texte">· 24LC64: 64K I2C EEPROM from Microship ([RD8]   

 REF _Ref386010634 \h 
 \* MERGEFORMAT EEPROM_MIC)
</p>
<p class="corps_de_texte">These two devices are selected not only because they use the same protocol (I2C) but also because basic transactions (read and write) have the same timings.
</p>
<p class="corps_de_texte">This point is crucial as the same BPTU controller has to work for both EEPROM devices (same function is implemented on both FPGAs: refer to 1.2.2 System presentation chapter for more details).
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0350</b></p>
</td>	<td><p class="reqIdent"><b>EEPROM programming condition</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0600-D</b></p>
<p class="reqMother"><b>BRD-BPTU-0620-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The EEPROM shall be programmed only in Maintenance mode.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to secure maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0355</b></p>
</td>	<td><p class="reqIdent"><b>EEPROM memory map</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0670</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The EEPROM memory map shall be compliant with the memory map table presented in the technical notes chapter.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to execute maintenance operations.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0360-D</b></p>
</td>	<td><p class="reqIdent"><b>EEPROM Serial Interface</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The interface of EEPROM shall have the following signals:</p>
<p class="reqTexte">· A serial clock output memory_scl</p>
<p class="reqTexte">· A serial data input-output memory_sda</p>
<p class="reqTexte">· A write protect output memory_wp</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure compatibility with the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0365-D</b></p>
</td>	<td><p class="reqIdent"><b>EEPROM ID</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The EEPROM ID shall be compliant with the following values:</p>
<p class="reqTexte">· COM: 0x5C</p>
<p class="reqTexte">· MON: 0xAA</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure that BPTU starts with safe components states.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0370-D</b></p>
</td>	<td><p class="reqIdent"><b>EEPROM I2C protocol</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The EEPROM I2C protocol (read/write access) shall be compliant with the following figure and table:</p>
<p class="corps_de_texte"><div class="embedded" id="_1478007134" />
<img src="embedded:image18.emf" alt="image18.emf" /><p>memory_SDA </p>

<p>OUT</p>

<p>memory_SCL</p>

<p>t8</p>

<p>t9</p>

<p>memory_SDA </p>

<p>IN</p>

<p>t13</p>

<p>t14</p>

<p>t10</p>

<p>t3</p>

<p>t2</p>

<p>t7</p>

<p>t6</p>

<p>memory_WP</p>

<p>t12</p>

<p>t11</p>

<p>START </p>

<p>condition</p>

<p>STOP </p>

<p>condition</p>

</p>
<p class="corps_de_texte">EEPROM I2C protocol
</p>
<p class="sIGN:_Title"><b>EEPROM I2C timing parameter
</b></p>
<p class="sIGN:_Title"><b>Description
</b></p>
<p class="sIGN:_Title"><b>value (ns)
</b></p>
<p class="sIGN:_Title"><b>min/</b></p>
<p class="sIGN:_Title"><b>max
</b></p>
<p class="sIGN:_Function">t2
</p>
<p class="sIGN:_Function">Clock high time</p>
<p class="sIGN:_Date">4000
</p>
<p class="sIGN:_Date">(min)
</p>
<p class="sIGN:_Function">t3
</p>
<p class="sIGN:_Function">Clock low time</p>
<p class="sIGN:_Date">4700
</p>
<p class="sIGN:_Date">(min)
</p>
<p class="sIGN:_Function">t6
</p>
<p class="sIGN:_Function">Start condition hold time</p>
<p class="sIGN:_Date">4000
</p>
<p class="sIGN:_Date">(min)
</p>
<p class="sIGN:_Function">t7
</p>
<p class="sIGN:_Function">Start condition setup time</p>
<p class="sIGN:_Date">4700
</p>
<p class="sIGN:_Date">(min)
</p>
<p class="sIGN:_Function">t8
</p>
<p class="sIGN:_Function">Data input hold time</p>
<p class="sIGN:_Date">200</p>
<p class="sIGN:_Date">(min)
</p>
<p class="sIGN:_Function">t9
</p>
<p class="sIGN:_Function">Data input setup time</p>
<p class="sIGN:_Date">250
</p>
<p class="sIGN:_Date">(min)
</p>
<p class="sIGN:_Function">t10
</p>
<p class="sIGN:_Function">Stop condition setup time</p>
<p class="sIGN:_Date">4000
</p>
<p class="sIGN:_Date">(min)
</p>
<p class="sIGN:_Function">t11
</p>
<p class="sIGN:_Function">WP setup time</p>
<p class="sIGN:_Date">600
</p>
<p class="sIGN:_Date">(min)
</p>
<p class="sIGN:_Function">t12
</p>
<p class="sIGN:_Function">WP hold time</p>
<p class="sIGN:_Date">2500</p>
<p class="sIGN:_Date">(min)
</p>
<p class="sIGN:_Function">t13
</p>
<p class="sIGN:_Function">Output valid from clock</p>
<p class="sIGN:_Date">3500</p>
<p class="sIGN:_Date">(max)
</p>
<p class="sIGN:_Function">t14
</p>
<p class="sIGN:_Function">Bus free time: time the bus must be free before a new transmission can start</p>
<p class="sIGN:_Date">4700
</p>
<p class="sIGN:_Date">(min)
</p>
<p class="légende">EEPROM I2C protocol timings
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure compatibility with the devices.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: See [RD7]    EEPROM_ST and [RD8]    EEPROM_MIC for further details</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0380-D</b></p>
</td>	<td><p class="reqIdent"><b>EEPROM Serial Clock</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The value of the serial clock frequency shall be 100 KHz ± 5Hz (50 ppm).</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the devices.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See [RD7]    EEPROM_ST and [RD8]    EEPROM_MIC for further details</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">EEPROM serial protocol allows the controller to write more than one byte in the same transaction. Such process is also allowed for read operations.
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0400</b></p>
</td>	<td><p class="reqIdent"><b>EEPROM chip address bits</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0678-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The EEPROM chip address bits (A2, A1, A0) shall be set to 101b.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure compatibility with the device on the board and to set an address for the chip.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0410-D</b></p>
</td>	<td><p class="reqIdent"><b>EEPROM byte write sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">A byte write sequence shall be compliant with the following figure:
</p>
<p class="reqTexte"><img src="embedded:image19.emf" alt="image19.emf" /></p>
<p class="reqTexte">Byte write sequence</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure compatibility with the devices.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - See [RD7]    EEPROM_ST and [RD8]    EEPROM_MIC for further details</p>
<p class="sans_interligne">· MASTER = FPGA
</p>
<p class="sans_interligne">· SLAVE = EEPROM
</p>
<p class="sans_interligne">· CONTROL BYTE = SLAVE ADDRESS </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0420-D</b></p>
</td>	<td><p class="reqIdent"><b>EEPROM sequential write sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">A sequential write sequence shall be compliant with the following figure:
</p>
<p class="reqTexte"><img src="embedded:image20.emf" alt="image20.emf" /></p>
<p class="reqTexte">Sequential write sequence</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure compatibility with the devices.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - See [RD7]    EEPROM_ST and [RD8]    EEPROM_MIC for further details</p>
<p class="sans_interligne">· MASTER = FPGA
</p>
<p class="sans_interligne">· SLAVE = EEPROM </p>
<p class="sans_interligne">· CONTROL BYTE = SLAVE ADDRESS</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0430-D</b></p>
</td>	<td><p class="reqIdent"><b>EEPROM selective read sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">A selective read sequence shall be compliant with the following figure:
</p>
<p class="reqTexte"><img src="embedded:image21.emf" alt="image21.emf" /></p>
<p class="reqTexte">Selective read sequence</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure compatibility with the devices.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - See [RD7]    EEPROM_ST and [RD8]    EEPROM_MIC for further details</p>
<p class="sans_interligne">· MASTER = FPGA
</p>
<p class="sans_interligne">· SLAVE = EEPROM</p>
<p class="sans_interligne">· CONTROL BYTE = SLAVE ADDRESS</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0440-D</b></p>
</td>	<td><p class="reqIdent"><b>EEPROM sequential read sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">A sequential read sequence shall be compliant with the following figure:
</p>
<p class="reqTexte"><img src="embedded:image22.emf" alt="image22.emf" /></p>
<p class="reqTexte">Sequential read sequence</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure compatibility with the devices.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - See [RD7]    EEPROM_ST and [RD8]    EEPROM_MIC for further details</p>
<p class="sans_interligne">· MASTER = FPGA
</p>
<p class="sans_interligne">· SLAVE = EEPROM</p>
<p class="sans_interligne">· CONTROL BYTE = SLAVE ADDRESS</p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.1.4.3 <u>ADC calibration
</u></p>
<p class="corps_de_texte">The calibration of the BPTU system is done in Maintenance mode.
</p>
<p class="corps_de_texte">The operator point of view of maintenance process is:</p>
<p class="corps_de_texte">Set pedals (right and left) to 0° positions 
</p>
<p class="corps_de_texte">· Send to FPGA BPTU a calibration_command through rs232 link</p>
<p class="corps_de_texte">· Receive a FPGA_ready command from FPGA BPTU through rs232 link</p>
<p class="corps_de_texte">· Send to FPGA BPTU a calibration_offset_start command through rs232 link</p>
<p class="corps_de_texte">· Receive a FPGA_command_ok command from FPGA BPTU through rs232 link</p>
<p class="corps_de_texte">Set pedals (right and left) to 10° positions 
</p>
<p class="corps_de_texte">· Send to FPGA BPTU a calibration_command through rs232 link</p>
<p class="corps_de_texte">· Receive a FPGA_ready command from FPGA BPTU through rs232 link
</p>
<p class="corps_de_texte">· Send to FPGA BPTU a calibration_gain_start command through rs232 link
</p>
<p class="corps_de_texte">· Receive a FPGA_command_ok command from FPGA BPTU through rs232 link
</p>
<p class="corps_de_texte">Using the EEPROM application, the maintenance operator needs to execute the following sequence to end the calibration operation:
</p>
<p class="corps_de_texte">Read of the values stored in EEPROM during the 2 previous sequences
</p>
<p class="corps_de_texte">· Send to FPGA BPTU a read_data command through rs232 link</p>
<p class="corps_de_texte">· Receive a FPGA_ready command from FPGA BPTU through rs232 link
</p>
<p class="corps_de_texte">· Send to FPGA BPTU a read_calibration_data command through rs232 link
</p>
<p class="corps_de_texte">· Receive from FPGA BPTU through rs232 link the 8 bytes of calibration data stored previously in EEPROM</p>
<p class="corps_de_texte">· Receive a FPGA_command_ok command from FPGA BPTU through rs232 link</p>
<p class="corps_de_texte">Write the values in EEPROM calculated by the EEPROM application</p>
<p class="corps_de_texte">· Send to FPGA BPTU a write_data command through rs232 link</p>
<p class="corps_de_texte">· Receive a FPGA_ready command from FPGA BPTU through rs232 link
</p>
<p class="corps_de_texte">· Send to FPGA BPTU a write_gain_data command through rs232 link
</p>
<p class="corps_de_texte">· Receive a FPGA_command_ok command from FPGA BPTU through rs232 link</p>
<p class="corps_de_texte">The BPTU FPGA point of view of maintenance process is: (the rs232 commands protocol is not repeated in this part and is like described in maintenance operator point of view)</p>
<p class="corps_de_texte">On reception of calibration_offset_start, the BPTU FPGA performs the following actions:</p>
<p class="corps_de_texte">· Perform 8 acquisitions on ADC1 &amp; ADC 2</p>
<p class="corps_de_texte">· Calculate the average of these 8 values
</p>
<p class="corps_de_texte">· Store the results in the EEPROM as the CALIB_OFFSET_ADC1 and CALIB_OFFSET_ADC2 values</p>
<p class="corps_de_texte">On reception of calibration_gain_start, the BPTU FPGA performs the following actions:</p>
<p class="corps_de_texte">· Perform 8 acquisitions on ADC1 &amp; ADC 2
</p>
<p class="corps_de_texte">· Calculate the average of these 8 values
</p>
<p class="corps_de_texte">· Store the results in the EEPROM as the CALIB_GAIN_ADC1 and CALIB_GAIN_ADC2 values
</p>
<p class="corps_de_texte">On reception of read_calibration_data, the BPTU FPGA performs the following actions:</p>
<p class="corps_de_texte">· Read in EEPROM the calibration data CALIB_OFFSET_ADCx and CALIB_GAIN_ADCx
</p>
<p class="corps_de_texte">· Send through rs232 link the 8 bytes of data</p>
<p class="corps_de_texte">On reception of write_gain_data, the BPTU FPGA performs the following actions:</p>
<p class="corps_de_texte">· Store the 8 bytes of data received through rs232 link in the EEPROM as the CALIB_OFFSET_ADCx and CALIB_ GAIN _ADCx values
</p>
<p class="corps_de_texte">These values are used in ADC1 and ADC2 data treatment for gain treatment laws and offset treatment laws steps.
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0450</b></p>
</td>	<td><p class="reqIdent"><b>Calibration condition</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0560-D
</b></p>
<p class="reqMother"><b>BRD-BPTU-0580-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The calibration operation shall be performed only in Maintenance mode.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to adjust ADCs measurement.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0455</b></p>
</td>	<td><p class="reqIdent"><b>Calibration offset acquisition sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0590-D</b></p>
<p class="reqMother"><b>BRD-BPTU-0610-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">Upon calibration_offset_start commands, the BPTU FPGA shall perform the following sequence:
</p>
<p class="reqTexte">· Acquire 8 values from each ADC1 and ADC2 device</p>
<p class="reqTexte">· Calculate the average of the 8 acquired ADC1 valid values: ADC1_offset_average
</p>
<p class="reqTexte">· Calculate the average of the 8 acquired ADC2 valid values: ADC2_offset_average
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to adjust ADCs measurement.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - Refer to 4.4.1.4.2  for more details about EEPROM management 
</p>
<p class="sans_interligne">· Valid means timeout OK</p>
<p class="sans_interligne">· If one timeout KO, a FPGA_error command is sent</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0460</b></p>
</td>	<td><p class="reqIdent"><b>Calibration gain acquisition sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0590-D</b></p>
<p class="reqMother"><b>BRD-BPTU-0610-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">Upon calibration_gain_start commands, the BPTU FPGA shall perform the following sequence:</p>
<p class="reqTexte">· Acquire 8 values from each ADC1 and ADC2 device</p>
<p class="reqTexte">· Calculate the average of the 8 acquired ADC1 valid values: ADC1_gain_average
</p>
<p class="reqTexte">· Calculate the average of the 8 acquired ADC2 valid values: ADC2_gain_average</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to adjust ADCs measurement.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - Refer to 4.4.1.4.2  for more details about EEPROM management </p>
<p class="sans_interligne">· Valid means timeout OK
</p>
<p class="sans_interligne">· If one timeout KO, a FPGA_error command is sent</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0470-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 Calibration value storage</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The one complement of the 12 bits ADC1 calibration offset value (not ADC1_offset_average) shall be calculated and shall be stored at the CALIB_ OFFSET_ADC1 address.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to adjust ADCs measurement.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - see EEPROM memory plan
</p>
<p class="sans_interligne">· Not ADC1_offset_average is the one complement calculation of the ADC1_offset_average value</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0475-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 Gain value storage</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The one complement of the 12 bits ADC1 calibration gain value (not ADC1_gain_average) shall be calculated and shall be stored at the CALIB_GAIN_ADC1 address
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to adjust ADCs measurement.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - see EEPROM memory plan
</p>
<p class="sans_interligne">· Not ADC1_offset_average is the one complement calculation of the ADC1_offset_average value</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0480-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 Calibration value storage</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The 12 bits ADC2 calibration offset value ADC2_offset_average shall be stored at the CALIB_OFFSET_ADC2 address.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to adjust ADCs measurement.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: see EEPROM memory plan</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0485-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 Gain value storage</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The 12 bits ADC2 calibration gain value ADC2_gain_average shall be stored at the CALIB_GAIN_ADC2 address.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to adjust ADCs measurement.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: see EEPROM memory plan</p>
</td></tr>
</tbody></table>
<p class="titre_3">4.5.2 <b>Pilot/Copilot Configuration
</b></p>
<p class="corps_de_texte">BPTU allows Pilot/Copilot frames transmission through pin programming configuration.</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0490</b></p>
</td>	<td><p class="reqIdent"><b>Pilot/Copilot programming</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0530</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU CAN frames shall be programmable for Pilot or Copilot position according to the PIN_PROG_x value configuration in the following table:</p>
<p class="sIGN:_Title"><b>BPTU Frame 
</b></p>
<p class="sIGN:_Title"><b>PIN_PROG_2 value
</b></p>
<p class="sIGN:_Title"><b>PIN_PROG_1 value
</b></p>
<p class="sIGN:_Function">Pilot 
</p>
<p class="sIGN:_Date">0b
</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Function">Co-pilot 
</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Date">0b
</p>
<p class="légende">BPTU pilot/copilot programming
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified at upper level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<p class="titre_3">4.5.3 <b>COM/MON Configuration
</b></p>
<p class="corps_de_texte">As explained in §1.2.2 System functions, BPTU board has two FPGAs which are FPGA ProASIC3 on COM channel (CAN1 bus) or FPGA IGLOO2 on MON channel (CAN2 bus).
</p>
<p class="corps_de_texte">In order to differentiate frames to send on bus CAN1 or CAN2, each BPTU FPGA is configured as FPGA COM or FPGA MON channel through Device ID configuration pins.
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0500</b></p>
</td>	<td><p class="reqIdent"><b>COM/MON programming</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0540 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU CAN frames shall be programmable for COM or MON channel according to the following DEVICE_ID PIN configuration:</p>
<p class="sIGN:_Title"><b>BPTU Channel
</b></p>
<p class="sIGN:_Title"><b>CAN bus  number</b></p>
<p class="sIGN:_Title"><b>DEVICE_ID_3 value </b></p>
<p class="sIGN:_Title"><b>DEVICE_ID_2 value
</b></p>
<p class="sIGN:_Title"><b>DEVICE_ID_1 value
</b></p>
<p class="sIGN:_Function">COM ProASIC3</p>
<p class="sIGN:_Date">1</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Date">0b
</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Function">MON IGLOO2</p>
<p class="sIGN:_Date">2</p>
<p class="sIGN:_Date">0b
</p>
<p class="sIGN:_Date">1b
</p>
<p class="sIGN:_Date">0b
</p>
<p class="légende">BPTU COM/MON programming</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified at upper level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<p class="titre_3">4.5.4 <b>ADCs presentation</b></p>
<p class="corps_de_texte">In order to convert analog data from angular sensors, BPTU FPGAs acquire information from two ADCs. Another 2 channels ADC component is used to monitor the 28V and 3.3V power supplies.</p>
<p class="corps_de_texte">Used devices are AD7091 [RD4] (hereafter referred to as ADC1), ADS7229 [RD5] (hereafter referred to as ADC2) and AD7922 [RD6]   (hereafter referred to as ADC3).</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0505</b></p>
</td>	<td><p class="reqIdent"><b>ADCs sample rate</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0458-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">System acquisition sample rate shall be lower than 22 kHz.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified at upper level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<p class="titre_4">4.5.4.1 <b>ADC1
</b></p>
<p class="corps_de_texte">The ADC_AD7091 component is used to convert:
</p>
<p class="corps_de_texte">· left pedal sensor values in COM configuration
</p>
<p class="corps_de_texte">· right pedal sensor values in MON configuration.</p>
<p class="corps_de_texte">The ADC1 serial interface uses the following signals:
</p>
<p class="corps_de_texte">- A serial clock output adc1_sclk</p>
<p class="corps_de_texte">- A start conversion output adc1_convst_n</p>
<p class="corps_de_texte">- A chip select output adc1_cs_n</p>
<p class="corps_de_texte">- A serial data input adc1_sdo</p>
<p class="titre_5,NIV_5,TITLE5">4.5.4.1.1 <u>Operating modes </u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0510-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 Serial Clock</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC serial clock frequency ADC1_SCLK shall be 2 MHz ± 100Hz (50 ppm).</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_AD7091

 REF _Ref377374940 \n \h 
[RD4]   for further details</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0520-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 interface timings</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="légende">ADC1 SPI interface timings shall be compliant with the following figure and table<b> </b>:</p>
<p class="corps_de_texte"><div class="embedded" id="_1480769381" />
<img src="embedded:image23.emf" alt="image23.emf" /><p>ADC1_CONVST_N</p>

<p>ADC1_CS_N</p>

<p>ADC1_SDO</p>

<p>ADC1_SCLK</p>

<p>Busy indicator</p>

</p>
<p class="légende">ADC1 Interface Serial Port Timing (with Busy Indicator function enabled)</p>
<p class="sIGN:_Title"><b>ADC1 timing parameters
</b></p>
<p class="sIGN:_Title"><b>Description
</b></p>
<p class="sIGN:_Title"><b>Value (ns)
</b></p>
<p class="sIGN:_Title"><b>min/max
</b></p>
<p class="sIGN:_Function">t1</p>
<p>Delay from the end of a conversion until SDO exits the three-state condition </p>
<p class="sIGN:_Function">8
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">t2</p>
<p>Data access time after SCLK falling edge </p>
<p class="sIGN:_Function">7
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">t3</p>
<p>SCLK high pulse width </p>
<p class="sIGN:_Function">0.4 x tSCLK</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t4</p>
<p>SCLK to data valid hold time </p>
<p class="sIGN:_Function">3
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t5</p>
<p>SCLK low pulse width </p>
<p class="sIGN:_Function">0.4 x tSCLK</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t6</p>
<p>SCLK falling edge to SDO high impedance </p>
<p class="sIGN:_Function">15
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">t7</p>
<p>CONVST pulse width </p>
<p class="sIGN:_Function">10
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t8</p>
<p>Conversion time </p>
<p class="sIGN:_Function">650
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">t9</p>
<p>CS low time before the end of a conversion </p>
<p class="sIGN:_Function">6
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">tQUIET</p>
<p>Time between the last SCLK edge and the next CONVST pulse </p>
<p class="sIGN:_Function">50
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="reqTexte">ADC1 Interface timings
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: the figure is extracted from ADC_AD7091

 REF _Ref377374940 \n \h 
 \* MERGEFORMAT [RD4]   .</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0530-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 reset sequence </b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived </b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">ADC1 SPI interface reset sequence timings shall be compliant with the following figure:</p>
<p class="reqTexte"><div class="embedded" id="_1480769836" />
<img src="embedded:image24.emf" alt="image24.emf" /><p>ADC1_CONVST_N</p>

<p>ADC1_CS_N</p>

<p>ADC1_SDO</p>

<p>ADC1_SCLK</p>

</p>
<p class="reqTexte">ADC1 Interface initialization sequence timings
</p>
<p class="sIGN:_Title"><b>ADC1 timing parameters
</b></p>
<p class="sIGN:_Title"><b>Description
</b></p>
<p class="sIGN:_Title"><b>Value (ns)
</b></p>
<p class="sIGN:_Title"><b>min/max
</b></p>
<p class="sIGN:_Function">t3</p>
<p>SCLK high pulse width 
</p>
<p class="sIGN:_Function">0.4 x tSCLK</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t5</p>
<p>SCLK low pulse width 
</p>
<p class="sIGN:_Function">0.4 x tSCLK</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t7</p>
<p>CONVST pulse width 
</p>
<p class="sIGN:_Function">10
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t8</p>
<p>Conversion time 
</p>
<p class="sIGN:_Function">650
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">t9</p>
<p>CS low time before the end of a conversion 
</p>
<p class="sIGN:_Function">6
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t10</p>
<p>Delay from CS falling edge until SDO exits the three-state condition 
</p>
<p class="sIGN:_Function">18
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">t12</p>
<p>Delay from the end of a conversion until the CS falling edge 
</p>
<p class="sIGN:_Function">8
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="reqTexte">ADC1 Interface timings
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure proper functioning of the devices.<b /></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_AD7091 [RD4]   </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0535-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 initialization sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">After a reset sequence, the first data received shall not be used.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure compatibility with the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_AD7091

 REF _Ref377374940 \n \h 
[RD4]   for further details</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0540-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 data reception </b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">Data received from ADC1_SDO signal shall be sampled on the rising edge of the ADC1_SCLK signal.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure compatibility with the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_AD7091

 REF _Ref377374940 \n \h 
[RD4]   for further details</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0550-S</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 timeout</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0810-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">A timeout event shall occur if:
</p>
<p class="reqTexte">· The ADC1_SDO signal is ‘0’ at 250ns +/- 250ns before ADC1_CONVST_N falling edge.
</p>
<p class="reqTexte">or
</p>
<p class="reqTexte">· The ADC1_SDO signal is ‘1’ (busy indicator feature) at 2µs +/- 500ns after ADC1_CONVST_N falling edge.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to define the status of the effective acquisition and to ensure a valid data from the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: - See ADC_AD7091

 REF _Ref377374940 \n \h 
[RD4]   for further details</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">The data sheet of the device shows how to achieve the optimum power performance by a combination of normal mode and power-down mode. </p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0560-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 conversion sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The conversion sequence of the ADC1 shall be compliant with the following figure:</p>
<p class="corps_de_texte"><div class="embedded" id="_1480770060" />
<img src="embedded:image25.emf" alt="image25.emf" /><p>ADC1_CONVST_N</p>

<p>ADC1_SDO</p>

<p>ADC1_CS_N</p>

</p>
<p class="corps_de_texte">ADC1 Conversion sequence with normal mode and power-down mode</p>
<p class="sIGN:_Title"><b>ADC1 timing parameters
</b></p>
<p class="sIGN:_Title"><b>Description
</b></p>
<p class="sIGN:_Title"><b>Value (ns)
</b></p>
<p class="sIGN:_Title"><b>min/max
</b></p>
<p class="sIGN:_Function">t8</p>
<p>Conversion time 
</p>
<p class="sIGN:_Function">650
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">t10</p>
<p>Delay from CS falling edge until SDO exits the three-state condition 
</p>
<p class="sIGN:_Function">18
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">t12</p>
<p>Delay from the end of a conversion until the CS falling edge 
</p>
<p class="sIGN:_Function">8
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t13</p>
<p>Power-up time
</p>
<p class="sIGN:_Function">100 µs
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="reqTexte">ADC1 Interface timings</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to reduce power consumption of the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_AD7091

 REF _Ref377374940 \n \h 
[RD4]   for further details about this mode.</p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.4.1.2 <u>Data measurement 
</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1180-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 acquisition</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived </b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">During an effective 50 ms window, the BPTU shall perform ADC1 data measurement.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure a valid data acquisition in all cases. </p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note:</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0570</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 data measurement</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0640-D partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">For ADC1, BPTU_xxx_RH_BrakeOrderj and BPTU_xxx_LH_BrakeOrderj values located in the Order frame shall be computed as follows:</p>
<p class="reqTexte">· Acquire 8 valid measurements (12 bits each)</p>
<p class="reqTexte">· Calculate the average value of these 8 values (12 bits)</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note:
</p>
<p class="sans_interligne">· The average value is calculated on the 8 measurements taken from each device.</p>
<p class="sans_interligne">· Valid means timeout and threshold OK</p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.4.1.3 <u>Data treatment </u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0580-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 data treatment</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">For each Order frame data acquisition, for ADC1, the data treatment shall be compliant with the following flow chart</p>
<p class="reqTexte"><div class="embedded" id="_1482679308" />
<img src="embedded:image26.emf" alt="image26.emf" /><p>Offset treatment </p>

<p>law</p>

<p>ADC1</p>

<p>Bundaries </p>

<p>check</p>

<p>&gt;= Thres_max_ADC1 </p>

<p>OR</p>

<p>&lt;= Thres_min_ADC1</p>

<p>&lt; Thres_max_ADC1 </p>

<p>AND</p>

<p>&gt; Thres_min_ADC1</p>

<p>ADC1 data </p>

<p>adjustment</p>

<p>law</p>

<p>OOR on CAN </p>

<p>order frame</p>

<p>ADC1 data </p>

<p>measurement </p>

<p>average value</p>

<p>8 bits of data </p>

<p>sent on CAN </p>

<p>order frames </p>

<p>field</p>

<p>ADC1_average[11:0]</p>

<p>12 bits data</p>

<p>Gain treatment </p>

<p>law</p>

<p>IDLE</p>

<p>1</p>

<p>2</p>

<p>3</p>

<p>4</p>

<p>5</p>

<p>result_gain[11:0]</p>

<p>12 bits data</p>

<p>result_offset[11:0]</p>

<p>12 bits data</p>

<p>adjust_value[7:0]</p>

<p>8 bits data</p>

<p>ADC1_value[11:0]</p>

<p>12 bits data</p>

</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note:
</p>
<p class="sans_interligne">· The ADC1_average value is calculated on the 8 measurements taken from AC1 device.</p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.4.1.4 <u>Gain treatment law
</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0610</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 Gain treatment law</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0630-D
</b></p>
<p class="reqMother"><b>BRD-BPTU-0650-D partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC1 gain treatment law shall be equal to the following law:</p>
<p class="reqTexte"><div class="embedded" id="_1479723743" />
<img src="embedded:image27.emf" alt="image27.emf" /><p>IDLE</p>

<p>Not(ADC1[11:0]) x CALIB_GAIN_ADC1[15:0]</p>

<p>result_gain = resul_mult[22:11]</p>

<p>result_mult[27:0]</p>

<p>result_mult[10] = 0</p>

<p>?</p>

<p>no</p>

<p>yes</p>

<p>result_gain = resul_mult[22:11] + 1</p>

</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to adjust ADCs measurement.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: The gain treatment law is the step 3 of the flowchart described in the ADC1 data treatment</p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.4.1.5 <u>Offset treatment law
</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0600</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 Offset treatment law</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0650-D partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC1 offset treatment shall be compliant with the following law:
</p>
<p class="reqTexte">result_offset[11:0] = result_gain[11:0] - CALIB_OFFSET_ADC1 [11:0]</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to adjust ADCs measurement.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - The offset treatment law is the step 4 of the flowchart described in the ADC1 data treatment</p>
<p class="sans_interligne">· Result_offset is a two-complement value</p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.4.1.6 <u>Data adjustment law</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0620</b></p>
</td>	<td><p class="reqIdent"><b>ADC1 data adjustment law</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0732 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The data value in the order frame from ADC1 acquisition shall be compliant to the following flow chart:</p>
<p class="reqTexte"><div class="embedded" id="_1477144020" />
<img src="embedded:image28.emf" alt="image28.emf" /><p>result_offset[11:0]</p>

<p>result_offset[3] = 0</p>

<p>?</p>

<p>no</p>

<p>yes</p>

<p>adjust_value[7:0] = result_offset[11:4]</p>

<p>IDLE</p>

<p>adjust_value[7:0] = result_offset[11:4] + 1</p>

</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: The data adjustment law is the step 5 of the flowchart described in the ADC1 data treatment</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">The 8 bits sent on the CAN bus are signed with two’s complement representation.
</p>
<table><tbody><tr>	<td><p class="sIGN:_Title">Angle(°)</p>
</td>	<td><p class="sIGN:_Title">ADC value (12 bits)</p>
</td>	<td><p class="sIGN:_Title">CAN bus value (8 bits)</p>
</td></tr>
<tr>	<td><p>+15,825</p>
</td>	<td><p>FFFh</p>
</td>	<td><p>7Fh</p>
</td></tr>
<tr>	<td><p>0</p>
</td>	<td><p>800h</p>
</td>	<td><p>00h</p>
</td></tr>
<tr>	<td><p>-1</p>
</td>	<td><p>7FFh</p>
</td>	<td><p>FFh</p>
</td></tr>
<tr>	<td><p>-16</p>
</td>	<td><p>000h</p>
</td>	<td><p>80h</p>
</td></tr>
<tr>	<td><p>0.125</p>
</td>	<td><p>010h</p>
</td>	<td><p>01h</p>
</td></tr>
</tbody></table>
<p class="figure">Figure 4‑7: Examples of ADC1 data in order frame adjusted value format</p>
<p class="corps_de_texte">These 8 bits correspond to angle measures between -16° and +15.875 with a resolution of 0.125° (lsb).
</p>
<table><tbody><tr>	<td><p class="sIGN:_Title">Angle(°)</p>
</td>	<td><p class="sIGN:_Title">CAN value (8 bits)</p>
</td></tr>
<tr>	<td><p>+15,825</p>
</td>	<td><p>7Fh</p>
</td></tr>
<tr>	<td><p>0</p>
</td>	<td><p>00h</p>
</td></tr>
<tr>	<td><p>-1</p>
</td>	<td><p>FFh</p>
</td></tr>
<tr>	<td><p>-16</p>
</td>	<td><p>80h</p>
</td></tr>
<tr>	<td><p>0.125</p>
</td>	<td><p>01h</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">ADC1 Data length is 12 bits: [bit11(MSB) : bit0 (LSB)]
</p>
<p class="corps_de_texte">The ADC1 “zero” set during calibration process is an offset applied on the measuring range.
</p>
<table><tbody><tr>	<td><p class="sIGN:_Title" />
</td>	<td><p class="sIGN:_Title">Angle(°)</p>
</td>	<td><p class="sIGN:_Title">ADC1 data Value  (12 bits)</p>
</td></tr>
<tr>	<td><p>ADC1</p>
<p>measuring
</p>
<p>range</p>
</td>	<td><p>+15,825</p>
</td>	<td><p>FFFh</p>
</td></tr>
<tr>	<td><p />
</td>	<td><p>0</p>
</td>	<td><p>800h</p>
</td></tr>
<tr>	<td><p />
</td>	<td><p>-16</p>
</td>	<td><p>000h</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">The law of data adjustment is applied on the average value calculated from the 8 acquired ADC1 data.
</p>
<p class="reqTexte">Here are some examples:
</p>
<p class="reqTexte">Example:</p>
<p class="reqTexte">· CALIB_GAIN_ADC1 = 0x0850 and CALIB_OFFSET_ADC1 = 0x9BE
</p>
<p class="reqTexte">· ADC1_average = 0xAA0 </p>
<p class="reqTexte">· result_gain = 0xB0A</p>
<p class="reqTexte">· result_offset = 0xB0A - 0x9BE = 0x14C</p>
<p class="reqTexte">· adjust_value = 0x15
</p>
<p class="titre_4">4.5.4.2 <b>ADC2
</b></p>
<p class="corps_de_texte">The ADC_ads7229 component is used to convert:
</p>
<p class="corps_de_texte">· right pedal sensor values in COM configuration
</p>
<p class="corps_de_texte">· left pedal sensor values in MON configuration.
</p>
<p class="corps_de_texte">The ADC2 serial interface uses the following signals:
</p>
<p class="corps_de_texte">- A serial clock output adc2_sclk</p>
<p class="corps_de_texte">- A serial data input adc2_sdo</p>
<p class="corps_de_texte">- A serial data output adc2_sdi</p>
<p class="corps_de_texte">- A conversion start output adc2_convst_n</p>
<p class="corps_de_texte">- A chip select output adc2_cs_n</p>
<p class="corps_de_texte">- An end of conversion input adc2_eoc</p>
<p class="titre_5,NIV_5,TITLE5">4.5.4.2.1 <u>Operating modes </u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0630-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 Serial Clock</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC serial clock frequency ADC2_SCLK shall be 2 MHz ± 100Hz (50ppm).</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_ads7229 [RD5]   for further details</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">The device has several built-in modes feature. There are one normal mode and three power-down modes: Deep power-down mode, Nap power-down mode, and Auto nap power-down mode. The only one that shall be used is the normal mode.
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0640-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 operation mode</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC2 mode of operation shall be: 
</p>
<p class="reqTexte">· Normal mode
</p>
<p class="reqTexte">· Read While Converting
</p>
<p class="reqTexte">· Manual trigger
</p>
<p class="reqTexte">· External conversion clock
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: - For further details on operation mode, see ADC_ads7229 [RD5]   </p>
<p class="corps_de_texte">· The corresponding CFR to this operating mode is 101111111101b</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0650-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 SPI interface timings</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="légende">ADC2 SPI interface timings shall be compliant with the following figure and table:<b> 
</b></p>
<p class="légende"><b>
</b></p>
<p class="reqTexte">
ADC2 Interface timings figure
</p>
<p class="sIGN:_Title"><b>ADC2 timing parameters
</b></p>
<p class="sIGN:_Title"><b>Description</b></p>
<p class="sIGN:_Title"><b>Value (ns)
</b></p>
<p class="sIGN:_Title"><b>min/max
</b></p>
<p class="sIGN:_Function">tSCLK</p>
<p class="sIGN:_Function">Clock period</p>
<p class="sIGN:_Function">500</p>
<p class="sIGN:_Function">± 0.5 ns</p>
<p class="sIGN:_Function">tCL</p>
<p class="sIGN:_Function">Pulse duration, CONVST low</p>
<p class="sIGN:_Function">40
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t6</p>
<p class="sIGN:_Function">Setup time, falling edge of CS to first falling SCLK</p>
<p class="sIGN:_Function">5
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">tSCLKL</p>
<p class="sIGN:_Function">Pulse duration, SCLK low</p>
<p class="sIGN:_Function">8
</p>
<p class="sIGN:_Function">tSCLK-8
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">tSCLKH</p>
<p class="sIGN:_Function">Pulse duration, SCLK high</p>
<p class="sIGN:_Function">8 
</p>
<p class="sIGN:_Function">tSCLK-8
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">tH2</p>
<p class="sIGN:_Function">Hold time, falling edge of SCLK to SDO invalid</p>
<p class="sIGN:_Function">7.5
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">tD1</p>
<p class="sIGN:_Function">Delay time, falling edge of SCLK to SDO valid</p>
<p class="sIGN:_Function">16
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">tD2</p>
<p class="sIGN:_Function">Delay time, falling edge of CS to SDO valid, SDO MSB output</p>
<p class="sIGN:_Function">11
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">tS1</p>
<p class="sIGN:_Function">Setup time, SDI to falling edge of SCLK</p>
<p class="sIGN:_Function">8
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">tH1</p>
<p class="sIGN:_Function">Hold time, SDI to falling edge of SCLK</p>
<p class="sIGN:_Function">4
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">tD3</p>
<p class="sIGN:_Function">Delay time, rising edge of CS/FS to SDO tD3 3-state</p>
<p class="sIGN:_Function">8
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">t7</p>
<p class="sIGN:_Function">Setup time, 16th falling edge of SCLK before rising edge of CS/FS</p>
<p class="sIGN:_Function">10
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="reqTexte">ADC2 Interface timings table
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: the timing figure is extracted from ADC_ads7229 [RD5]   .</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0660-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 data reception</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">Data received from ADC2_SDO signal shall be sampled on the falling edge of the ADC2_SCLK signal.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure compatibility with the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_ads7229 [RD5]   for further details</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0670-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 data transmission</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">Data transmitted through ADC2_SDI signal shall be presented on output at the rising edge of the ADC2_SCLK signal.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure compatibility with the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_ads7229 [RD5]   for further details</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0680-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 reset sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived </b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">At power up, a software reset operation shall be initiated on ADC2 device using the configuration register CFR [11:0] set to 111111111100b.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure proper functioning of the devices.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_ads7229 [RD5]   .</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0690-S</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 timeout</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0810-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">A timeout event shall occur if:
</p>
<p class="reqTexte">· The ADC2_EOC is ‘0’ at 250ns +/- 250ns before ADC2_CONVST_N falling edge.</p>
<p class="reqTexte">or
</p>
<p class="reqTexte">· The ADC2_EOC is ‘1’ at 2µs +/- 500ns after ADC2_CONVST_N falling edge.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure compatibility with the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_ads7229 [RD5]   for further details</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0700-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 timings for conversion and acquisition cycles</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="légende">ADC2 conversion and acquisition cycles timings shall be compliant with the following figure:<div class="embedded" id="_1450189479" />
</p>
<p class="légende"><b>
<div class="embedded" id="_1482568285" />
<img src="embedded:image30.emf" alt="image30.emf" /><p>Tacquisition</p>

</b>ADC2 conversion and acquisition cycles timings</p>
<p class="sIGN:_Title"><b>ADC2 timing parameters
</b></p>
<p class="sIGN:_Title"><b>Description</b></p>
<p class="sIGN:_Title"><b>Value (ns)
</b></p>
<p class="sIGN:_Title"><b>min/max
</b></p>
<p class="sIGN:_Function">tCL</p>
<p class="sIGN:_Function">Pulse duration, CONVST low</p>
<p class="sIGN:_Function">40
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t3</p>
<p class="sIGN:_Function">Hold time, falling edge of CS to EOS</p>
<p class="sIGN:_Function">20
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t4</p>
<p class="sIGN:_Function">Setup time, rising edge of CS to EOS</p>
<p class="sIGN:_Function">20
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="légende">ADC2 Interface timings table
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: - This figure is interpreted from explanations of ADC_ads7229 [RD5]   </p>
<p class="corps_de_texte">· For more explanation of the external SCLK use, read the “converter operation” chapter of ADC_ads7229 [RD5]   .</p>
<p class="corps_de_texte">· The ADC ads7229 component is used in READ While Converting mode with an external SCLK clock.</p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.4.2.2 <u>Data measurement 
</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1230-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 acquisition</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived </b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">During an effective 50 ms window, the BPTU shall perform the ADC2 data measurement.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure a valid data acquisition in all cases. </p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note:</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0705-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 flush access</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived </b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC2 shall be flushed before the 8 effective acquisitions. The flush access shall be a conversion and acquisition cycle with the ADC2_SDO value not used.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure a valid data acquisition in all cases. </p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: - The timeout event sanction is performed on this first access</p>
<p class="reqTexte">· A second flush access is performed in case of first flush access failure.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0710</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 data measurement</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0640-D partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">For ADC2, BPTU_xxx_RH_BrakeOrderj and BPTU_xxx_LH_BrakeOrderj values located in the Order frame shall be computed as follows:
</p>
<p class="reqTexte">· Acquire 8 valid measurements (12 bits each)
</p>
<p class="reqTexte">· Calculate the average value (12 bits)</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note:
</p>
<p class="sans_interligne">· The average value is calculated on the 8 measurements taken from each device.</p>
<p class="sans_interligne">· Valid means timeout and threshold OK</p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.4.2.3 <u>Data treatment </u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0720-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 data treatment</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">For each Order frame data acquisition, for ADC2, the data treatment shall be compliant with the following flow chart</p>
<p class="reqTexte"><div class="embedded" id="_1482679475" />
<img src="embedded:image31.emf" alt="image31.emf" /><p>Offset treatment </p>

<p>law</p>

<p>ADC2</p>

<p>Bundaries </p>

<p>check</p>

<p>&gt;= Thres_max_ADC2 </p>

<p>OR</p>

<p>&lt;= Thres_min_ADC2</p>

<p>&lt; Thres_max_ADC2 </p>

<p>AND</p>

<p>&gt; Thres_min_ADC2</p>

<p>ADC2 data </p>

<p>adjustment</p>

<p>law</p>

<p>OOR on CAN </p>

<p>order frame</p>

<p>ADC2 data </p>

<p>measurement </p>

<p>average value</p>

<p>8 bits of data </p>

<p>sent on CAN </p>

<p>order frames </p>

<p>field</p>

<p>ADC2_average[11:0]</p>

<p>12 bits data</p>

<p>Gain treatment </p>

<p>law</p>

<p>IDLE</p>

<p>1</p>

<p>2</p>

<p>3</p>

<p>4</p>

<p>5</p>

<p>result_gain[11:0]</p>

<p>12 bits data</p>

<p>result_offset[11:0]</p>

<p>12 bits data</p>

<p>adjust_value[7:0]</p>

<p>8 bits data</p>

<p>ADC2_value[11:0]</p>

<p>12 bits data</p>

</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note:
</p>
<p class="sans_interligne">· The ADC2_average value is calculated on the 8 measurements taken from ADC2 device</p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.4.2.4 <u>Gain treatment law
</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0750</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 Gain treatment law</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0650-D partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC2 gain treatment law shall be equal to the following law:
</p>
<p class="reqTexte"><div class="embedded" id="_1479723804" />
<img src="embedded:image32.emf" alt="image32.emf" /><p>IDLE</p>

<p>ADC2[11:0] x CALIB_GAIN_ADC2[15:0]</p>

<p>result_gain = resul_mult[22:11]</p>

<p>result_mult[27:0]</p>

<p>result_mult[10] = 0</p>

<p>?</p>

<p>no</p>

<p>yes</p>

<p>result_gain = resul_mult[22:11] + 1</p>

</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to adjust ADCs measurement.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: The gain treatment law is the step 3 of the flowchart described in the ADC2 data treatment </p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.4.2.5 <u>Offset treatment law</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0740</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 Offset treatment law</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0650-D partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC2 offset treatment shall be compliant with the following law:
</p>
<p class="reqTexte">result_offset[11:0] = result_gain[11:0] - CALIB_OFFSET_ADC2 [11:0]
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to adjust ADCs measurement.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - The offset treatment law is the step 4 of the flowchart described in the ADC2 data treatment</p>
<p class="sans_interligne">· Result_offset is a two-complement value</p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.4.2.6 <u>Data adjustment law</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0760</b></p>
</td>	<td><p class="reqIdent"><b>ADC2 data adjustment law</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0732 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The data value in the order frame from ADC2 acquisition shall be compliant to the following flow chart:
</p>
<p class="reqTexte"><div class="embedded" id="_1477144020" />
<img src="embedded:image33.emf" alt="image33.emf" /><p>result_offset[11:0]</p>

<p>result_offset[3] = 0</p>

<p>?</p>

<p>no</p>

<p>yes</p>

<p>adjust_value[7:0] = result_offset[11:4]</p>

<p>IDLE</p>

<p>adjust_value[7:0] = result_offset[11:4] + 1</p>

</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: The data adjustment law is the step 5 of the flowchart described in the ADC2 data treatment</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">The 8 bits sent on the CAN bus are signed with two’s complement representation.
</p>
<table><tbody><tr>	<td><p class="sIGN:_Title">Angle(°)</p>
</td>	<td><p class="sIGN:_Title">ADC value (12 bits)</p>
</td>	<td><p class="sIGN:_Title">CAN bus value (8 bits)</p>
</td></tr>
<tr>	<td><p>+15,825</p>
</td>	<td><p>000h</p>
</td>	<td><p>7Fh</p>
</td></tr>
<tr>	<td><p>0</p>
</td>	<td><p>7FFh</p>
</td>	<td><p>00h</p>
</td></tr>
<tr>	<td><p>-1</p>
</td>	<td><p>800h</p>
</td>	<td><p>FFh</p>
</td></tr>
<tr>	<td><p>-16</p>
</td>	<td><p>FFFh</p>
</td>	<td><p>80h</p>
</td></tr>
<tr>	<td><p>0.125</p>
</td>	<td><p>010h</p>
</td>	<td><p>01h</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">Figure 4‑8: Examples of ADC2 data in the order frame adjusted value format</p>
<p class="corps_de_texte">These 8 bits correspond to angle measures between -16° and +15.875 with a resolution of 0.125° (lsb).
</p>
<table><tbody><tr>	<td><p class="sIGN:_Title">Angle(°)</p>
</td>	<td><p class="sIGN:_Title">Value (8 bits)</p>
</td></tr>
<tr>	<td><p>+15,825</p>
</td>	<td><p>7Fh</p>
</td></tr>
<tr>	<td><p>0</p>
</td>	<td><p>00h</p>
</td></tr>
<tr>	<td><p>-1</p>
</td>	<td><p>FFh</p>
</td></tr>
<tr>	<td><p>-16</p>
</td>	<td><p>80h</p>
</td></tr>
<tr>	<td><p>0.125</p>
</td>	<td><p>01h</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">ADC2 Data length is 12 bits: [bit11(msb) : bit0 (lsb)]
</p>
<p class="corps_de_texte">The ADC2 “zero” set during calibration process is an offset applied on the measuring range.
</p>
<table><tbody><tr>	<td><p class="sIGN:_Title" />
</td>	<td><p class="sIGN:_Title">Angle(°)</p>
</td>	<td><p class="sIGN:_Title">ADC data Value  (12 bits)</p>
</td></tr>
<tr>	<td><p>ADC
</p>
<p>measuring
</p>
<p>range</p>
</td>	<td><p>+15,825</p>
</td>	<td><p>000h</p>
</td></tr>
<tr>	<td><p />
</td>	<td><p>0</p>
</td>	<td><p>7FFh</p>
</td></tr>
<tr>	<td><p />
</td>	<td><p>-16</p>
</td>	<td><p>FFFh</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">The law of data adjustment is applied on the average value calculated from the 8 acquired ADC2 data.</p>
<p class="reqTexte">Here are some examples:
</p>
<p class="reqTexte">Example:</p>
<p class="reqTexte">· CALIB_GAIN_ADC2 = 0x0946 and CALIB_OFFSET_ADC2 = 0xAA6</p>
<p class="reqTexte">· ADC2_average = 0x60F
</p>
<p class="reqTexte">· Not ADC2_average = 0x9F0 </p>
<p class="reqTexte">· result_gain = 0xB85</p>
<p class="reqTexte">· result_offset = 0xB85 - 0xAA6 = 0x0DF</p>
<p class="reqTexte">· adjust_value = 0x0E</p>
<p class="titre_4">4.5.4.3 <b>ADC3
</b></p>
<p class="corps_de_texte">The ADC_AD7922 component is used only for power supplies monitoring.
</p>
<p class="corps_de_texte">This device is selected because it has two analog inputs. This allows the monitoring of the two power supplies of the system:
</p>
<p class="corps_de_texte">· The external power supply (28 Vdc)
</p>
<p class="paragraphe_de_liste">· The internal power supply (3.3 Vdc)
</p>
<p class="corps_de_texte">The analog input channel to be converted is selected through the digital interface.
</p>
<p class="corps_de_texte">Power supply monitoring is used in CBIT (§ 4.4.6.2).</p>
<p class="corps_de_texte">The ADC3 serial interface uses the following signals:
</p>
<p class="corps_de_texte">- A serial clock output adc3_sclk</p>
<p class="corps_de_texte">- A serial data output adc3_DIN</p>
<p class="corps_de_texte">- A chip select output adc3_cs_n</p>
<p class="corps_de_texte">- A serial data input adc3_doUT</p>
<p class="titre_5,NIV_5,TITLE5">4.5.4.3.1 <u>Operating modes 
</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0770-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC3 Serial Clock</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC serial clock frequency ADC3_SCLK shall be 2 MHz ± 100Hz (50ppm).</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_AD7922 [RD6]   for further details</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">The data sheet of the device shows how to use normal mode and power-down mode.
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0780-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC3 mode operation</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC3 mode of operation shall be normal mode operation and compliant with the following figure:
</p>
<p class="reqTexte"><div class="embedded" id="_1480772492" />
<img src="embedded:image34.emf" alt="image34.emf" /><p>ADC3_CS_N</p>

<p>ADC3_DOUT</p>

<p>ADC3_SCLK</p>

<p>ADC3_DIN</p>

</p>
<p class="légende">ADC3 normal mode operation
</p>
<p class="corps_de_texte">During a conversion result acquisition, the channel for the next conversion is set using the ADC3_DIN signal. </p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note:
</p>
<p class="corps_de_texte">· 16 serial clock cycles are required to complete the conversion and access the complete conversion result.</p>
<p class="reqTexte">· See ADC_AD7922 [RD6]   , chapter normal mode for further details about this mode.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0790-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC3 normal mode DIN word format</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC3_DIN 16 bit word shall be compliant with the following table:</p>
<p>MSB
</p>
<p>LSB
</p>
<p>0
</p>
<p>0
</p>
<p>CHN
</p>
<p>STY
</p>
<p>0
</p>
<p>0
</p>
<p>0
</p>
<p>0
</p>
<p>0
</p>
<p>0
</p>
<p>0
</p>
<p>0
</p>
<p>0
</p>
<p>0
</p>
<p>0
</p>
<p>0
</p>
<p class="reqTexte">ADC3_DIN word
</p>
<p class="reqTexte">With CHN = STY
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the system.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_AD7922 [RD6]   , chapter DIN Input for further details about this mode.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0800-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC3 interface Timings</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="légende">ADC3 SPI interface timings shall be compliant with the following figure and table : 
</p>
<p class="légende"><b>
</b></p>
<p class="légende"><b>
</b> ADC3 Interface Serial Port Timings</p>
<p class="sIGN:_Title"><b>ADC3 timing parameters</b></p>
<p class="sIGN:_Title"><b>Description</b></p>
<p class="sIGN:_Title"><b>Value (ns)
</b></p>
<p class="sIGN:_Title"><b>min/max
</b></p>
<p class="sIGN:_Function">tCONVERT</p>
<p class="sIGN:_Function">Conversion time</p>
<p class="sIGN:_Function">16 x tSCLK</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">tQUIET</p>
<p class="sIGN:_Function">Minimum quiet time required between bus relinquish and start of next conversion</p>
<p class="sIGN:_Function">30
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t1</p>
<p class="sIGN:_Function">Minimum CS pulse width</p>
<p class="sIGN:_Function">15
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t2</p>
<p class="sIGN:_Function">CS to SCLK setup time</p>
<p class="sIGN:_Function">10
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t3</p>
<p class="sIGN:_Function">Delay from CS until DOUT three-state is disabled</p>
<p class="sIGN:_Function">30
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">t4</p>
<p class="sIGN:_Function">DOUT access time after SCLK falling edge</p>
<p class="sIGN:_Function">45
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">t5</p>
<p class="sIGN:_Function">SCLK low pulse width</p>
<p class="sIGN:_Function">0.4 x tSCLK</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t6</p>
<p class="sIGN:_Function">SCLK high pulse width</p>
<p class="sIGN:_Function">0.4 x tSCLK</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t7</p>
<p class="sIGN:_Function">SCLK to DOUT valid hold time</p>
<p class="sIGN:_Function">10
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t8</p>
<p class="sIGN:_Function">DIN setup time prior to SCLK falling edge</p>
<p class="sIGN:_Function">5
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t9</p>
<p class="sIGN:_Function">DIN hold time after SCLK falling edge</p>
<p class="sIGN:_Function">6
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="sIGN:_Function">t10</p>
<p class="sIGN:_Function">SCLK falling edge to DOUT three-state</p>
<p class="sIGN:_Function">30
</p>
<p class="sIGN:_Function">10
</p>
<p class="sIGN:_Function">(max)
</p>
<p class="sIGN:_Function">(min)
</p>
<p class="légende">ADC3 Interface timings
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: the figure is extracted from ADC_AD7922 [RD6]   .</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0810-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC3 initialization sequence</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">At power up, the first ADC3_DOUT value shall not be used. </p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to first configure the chosen channel.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: - See “power-up time” chapter of ADC_AD7922 [RD6]   for further details</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0820-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC3 data transmission </b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">Data transmitted through ADC3_DIN signal shall be presented on output at the rising edge of the ADC3_SCLK signal.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure compatibility with the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_AD7922 [RD6]   for further details</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0830-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC3 data reception</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived </b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:
</u></b></p>
<p class="reqTexte">Data received from ADC3_DOUT signal shall be sampled on the rising edge of the ADC3_SCLK signal.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure compatibility with the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_AD7922 [RD6]   for further details</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0840-S</b></p>
</td>	<td><p class="reqIdent"><b>ADC3 timeout</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0810-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">A timeout event shall occur if:
</p>
<p class="reqTexte">· The ADC3_DOUT is ‘0’ at 250ns +/- 250ns before ADC3_CS_N falling edge.</p>
<p class="reqTexte">or
</p>
<p class="reqTexte">· The ADC3_DOUT is ‘1’ at 2µs +/- 500ns after ADC3_CS_N falling edge.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to define the status of the effective acquisition and to ensure a valid data from the device.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: The timeout event sanction is performed on the initialization access</p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.4.3.2 <u>Channels configuration </u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0850</b></p>
</td>	<td><p class="reqIdent"><b>ADC3 channel 0</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0930-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC3 channel 0 (CHN=0) shall be used to 28V acquisition.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the system.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_AD7922 [RD6]   , chapter DIN Input for further details about this mode.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0860</b></p>
</td>	<td><p class="reqIdent"><b>ADC3 channel 1</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0930-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC3 channel 1 (CHN=1) shall be used to 3.3V acquisition.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the system.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_AD7922 [RD6]   , chapter DIN Input for further details about this mode.</p>
</td></tr>
</tbody></table>
<p class="titre_3">4.5.5 <b>CAN controller management</b></p>
<p class="titre_4">4.5.5.1 <b>Supported CAN frames</b></p>
<p class="corps_de_texte">Frames including an arbitration field can be used in Standard or Extended frame format. BPTU FPGA only uses Extended one. CAN is an MSB first protocol where “Start of Frame” field is sent first on the bus and “End of Frame” field sent last.
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0870</b></p>
</td>	<td><p class="reqIdent"><b>BPTU CAN Frame</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">All messages, including an arbitration field, sent on the CAN bus shall be CAN Extended frames (CAN 2.0 Specification v2.0 [EAD4]   ) according General Requirements for Equipment using CAN Technology [RD2]   .</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified by the necessity to ensure interoperability of units connected to the CAN Bus.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: For more details about the CAN frame format, see CAN Bus Message Format Specification [RD3]   .</p>
<p class="reqTexte">cf. [GRECT-025] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<p class="corps_de_texte"><div class="embedded" id="_1451303205" />
<img src="embedded:image36.emf" alt="image36.emf" /><p>MSB first transmission</p>

<p>CRC</p>

<p>delimiter</p>

<p>Data field</p>

<p>SOF</p>

<p>1 bit</p>

<p>11 bits identifier + 1 bit SRR</p>

<p>+ 1 bit IDE + 18 bits identifier</p>

<p>RTRControl field</p>

<p>11 bits6 bits1 bit1 bit18 bits1 bit</p>

<p>0 to 8 bytes15 bits1 bit</p>

<p>ACK</p>

<p>slot</p>

<p>1 bit</p>

<p>ACK</p>

<p>delimiter</p>

<p>1 bit</p>

<p>EOF</p>

<p>7 bits</p>

<p>CRC Sequence</p>



 EMBED Visio.Drawing.11  </p>
<p class="figure">
 Figure 4‑9: CAN Extended Data frame
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0880</b></p>
</td>	<td><p class="reqIdent"><b>BPTU CAN Data Frame format</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The CAN frame format shall be compliant with the “CAN Extended Data frame”.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified by the necessity to ensure interoperability of units connected to the CAN Bus.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: For more details about the CAN frame format, see CAN Bus Message Format Specification [RD3]   .</p>
<p class="reqTexte">cf. [GRECT-025], [GRECT-026], [GRECT-027], [GRECT-033] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0890</b></p>
</td>	<td><p class="reqIdent"><b>RTR bit</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">CAN frames shall have a dominant RTR bit.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified by the necessity to not use Remote Transmission Request.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: For more details about the CAN frame format, see CAN Bus Message Format Specification [RD3]   .
</p>
<p class="reqTexte">cf. [GRECT-024] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<p class="reqTexte">When equipment detects any of these errors, it sends an error frame. 
</p>
<p class="corps_de_texte"><div class="embedded" id="_1451305336" />
<img src="embedded:image37.emf" alt="image37.emf" /><p>Uncompleted frame</p>

<p>6 dominant bits</p>

<p>Error </p>

<p>delimiter</p>

<p>8 recessive bits</p>

<p>Error flag</p>

<p>Error condition</p>

<p>0 to 6 </p>

<p>dominant bits</p>

<p>Error flag</p>

<p>Send by the </p>

<p>node </p>

<p>detecting </p>

<p>the error</p>

<p>Send by </p>

<p>node(s) </p>

<p>detecting </p>

<p>the first </p>

<p>error flag, </p>

<p>viewed as a </p>

<p>stuff error</p>

<p>Send by the </p>

<p>transmitter</p>

<p>Send by the </p>

<p>transmitter</p>

</p>
<p class="figure">Figure 4‑10: CAN Bus level during an Active error frame transmission.
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0900</b></p>
</td>	<td><p class="reqIdent"><b>Active Error Frame</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">ARINC 825 Active Error frames shall consist of the two following fields:</p>
<p class="reqTexte">· Superposition of error flags (6 to 12 dominant bits)</p>
<p class="reqTexte">· Error delimiter (8 recessive bits)</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">To inform other equipment about error detection.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: cf. [GRECT-073] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<p class="corps_de_texte"><div class="embedded" id="_1451305363" />
<img src="embedded:image38.emf" alt="image38.emf" /><p>Send by the </p>

<p>node </p>

<p>detecting </p>

<p>the error</p>

<p>Send by </p>

<p>node(s) </p>

<p>detecting </p>

<p>the first </p>

<p>error flag, </p>

<p>viewed as a </p>

<p>stuff error</p>

<p>Send by the </p>

<p>transmitter</p>

<p>Send by the </p>

<p>transmitter</p>

<p>Uncompleted frame</p>

<p>6 recessive bits</p>

<p>Error </p>

<p>delimiter</p>

<p>8 recessive bits</p>

<p>Error flag</p>

<p>Error condition</p>

<p>0 to 6 recessive </p>

<p>bits</p>

<p>Error flag</p>

</p>
<p class="figure">Figure 4‑11: CAN Bus level during a Passive error frame transmission.</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0910</b></p>
</td>	<td><p class="reqIdent"><b>Passive Error Frame</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">ARINC 825 Passive Error frames shall consist of the two following fields:</p>
<p class="reqTexte">· Superposition of error flags (6 to 12 recessive bits)</p>
<p class="reqTexte">· Error delimiter (8 recessive bits)</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">To inform other equipment about error detection.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: cf. [GRECT-074] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<p class="titre_4">4.5.5.2 <b>BPTU Frame content </b></p>
<p class="corps_de_texte">BPTU Frames described below use the CAN Extended Data frame format.</p>
<p class="corps_de_texte">The BPTU channel (FPGA) handles the following data:</p>
<p class="corps_de_texte">· Brake order from left-hand pedal 
</p>
<p class="corps_de_texte">· Brake order from right-hand pedal 
</p>
<p class="corps_de_texte">· PBIT status 
</p>
<p class="corps_de_texte">· CBIT status</p>
<p class="corps_de_texte">· BPTU module total number of detected errors in reception
</p>
<p class="corps_de_texte">· BPTU module total number of detected errors in transmission
</p>
<p class="corps_de_texte">· BPTU module total number of software resets for the CAN protocol handler</p>
<p class="corps_de_texte">· BPTU module reception error counter value
</p>
<p class="corps_de_texte">· BPTU module transmission error counter value
</p>
<p class="corps_de_texte">· BPTU HW part number MSB
</p>
<p class="corps_de_texte">· BPTU HW part number LSB 
</p>
<p class="corps_de_texte">· BPTU module PLD part number MSB
</p>
<p class="corps_de_texte">· BPTU module PLD part number LSB
</p>
<p class="corps_de_texte">· BPTU HW serial number
</p>
<p class="corps_de_texte">These data are transmitted on CAN busses on specific frames.
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0920-S</b></p>
</td>	<td><p class="reqIdent"><b>BPTU modules transmission data frames</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0732 partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0735-S</b></p>
<p class="reqMother"><b>BRD-BPTU-0738-S</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The Pilot/Copilot BPTU CAN modules shall handle the following data frames:</p>
<p class="reqTexte">· BPTU_xxx_Order_CANi     </p>
<p class="reqTexte">· BPTU_xxx_PBIT_CANi      </p>
<p class="reqTexte">· BPTU_xxx_CBIT_CANi      </p>
<p class="reqTexte">· BPTU_xxx_BusBIT_CANi    </p>
<p class="reqTexte">· BPTU_xxx_PN_MSB_CANi    </p>
<p class="reqTexte">· BPTU_xxx_PN_LSB_CANi    </p>
<p class="reqTexte">· BPTU_xxx_SWPN_MSB_CANi  </p>
<p class="reqTexte">· BPTU_xxx_SWPN_LSB_CANi  </p>
<p class="reqTexte">· BPTU_xxx_SN_CANi      </p>
<p class="reqTexte">Where “xxx” is Pil or Copil and “i” is 1 or 2, in accordance with “chapter 6.2 Frame description” chapter.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure a correct functioning of the CAN bus.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0921</b></p>
</td>	<td><p class="reqIdent"><b>BPTU Order Frame description</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0732 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU order frame shall be compliant with the following table:</p>
<p class="sIGN:_Title">Frame Name
</p>
<p class="sIGN:_Title">Data Name
</p>
<p class="sIGN:_Title">Data Description
</p>
<p class="sIGN:_Title">Bit nb
</p>
<p class="sIGN:_Title">Comment
</p>
<p class="sIGN:_Function">BPTU_xxx_Order_CANj</p>
<p class="sIGN:_Function">N/A
</p>
<p class="sIGN:_Function">N/A
</p>
<p class="sIGN:_Function">[23:16]
</p>
<p class="sIGN:_Function">Provision, bits forced to 0</p>
<p class="sIGN:_Function">BPTU_xxx_RH_BrakeOrderj</p>
<p class="sIGN:_Function">Brake order from right- pedal
</p>
<p class="sIGN:_Function">[15:8]
</p>
<p class="sIGN:_Function">Range:
</p>
<p class="sIGN:_Function">min  = -16°  (80h)
</p>
<p class="sIGN:_Function">max =  +15,875° (7Fh)
</p>
<p class="sIGN:_Function">resolution = 0,125°
</p>
<p class="sIGN:_Function">BPTU_xxx_LH_BrakeOrderj</p>
<p class="sIGN:_Function">Brake order from left pedal
</p>
<p class="sIGN:_Function">[7:0]
</p>
<p class="reqTexte">Where “xxx” is Pil or Copil and “j” is 1 or 2.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure a correct functioning of the CAN bus.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0922</b></p>
</td>	<td><p class="reqIdent"><b>BPTU Brake Order pedal assignment</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0680-D partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0690-D partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU order frame payload field shall be compliant with the following table:</p>
<p class="sIGN:_Title">Data Name
</p>
<p class="sIGN:_Title">Data Description
</p>
<p class="sIGN:_Title">COM channel
</p>
<p class="sIGN:_Title">MON channel</p>
<p class="sIGN:_Function">BPTU_xxx_RH_BrakeOrderj</p>
<p class="sIGN:_Function">Brake order from right- pedal
</p>
<p class="sIGN:_Function">ADC2 </p>
<p class="sIGN:_Function">ADC1</p>
<p class="sIGN:_Function">BPTU_xxx_LH_BrakeOrderj</p>
<p class="sIGN:_Function">Brake order from left pedal
</p>
<p class="sIGN:_Function">ADC1</p>
<p class="sIGN:_Function">ADC2</p>
<p class="reqTexte">Where “xxx” is Pil or Copil and “j” is 1 or 2.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure a correct functioning of the CAN bus.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0923-S</b></p>
</td>	<td><p class="reqIdent"><b>BPTU PBIT frame description</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0732 partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0735-S</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU PBIT frame shall be compliant with the following table:</p>
<p class="sIGN:_Title">Frame Name
</p>
<p class="sIGN:_Title">Data Name
</p>
<p class="sIGN:_Title">Data Description
</p>
<p class="sIGN:_Title">Bit nb
</p>
<p class="sIGN:_Title">Comment
</p>
<p class="sIGN:_Function">BPTU_xxx_PBIT_CANj</p>
<p class="sIGN:_Function">BPTU_xxx_PBITj</p>
<p class="sIGN:_Function">BPTU module PBIT status
</p>
<p>63
</p>
<p class="corps_de_texte">Forced to 0 (PBIT succeed)</p>
<p class="sIGN:_Function">BPTU module PBIT progress
</p>
<p class="sIGN:_Function">62
</p>
<p class="sIGN:_Function">Forced to 0 (PBIT ended)
</p>
<p class="sIGN:_Function">N/A
</p>
<p class="sIGN:_Function">[61:0]
</p>
<p class="sIGN:_Function">Provision, bits forced to 0</p>
<p class="reqTexte">Where “xxx” is Pil or Copil and “j” is 1 or 2.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure a correct functioning of the CAN bus.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0924-S</b></p>
</td>	<td><p class="reqIdent"><b>BPTU CBIT frame description</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0732 partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0738-S</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU CBIT frame shall be compliant with the following table:</p>
<p class="sIGN:_Title">Frame Name
</p>
<p class="sIGN:_Title">Data Name
</p>
<p class="sIGN:_Title">Data Description
</p>
<p class="sIGN:_Title">Bit nb
</p>
<p class="sIGN:_Title">Comment
</p>
<p class="sIGN:_Function">BPTU_xxx_CBIT
</p>
<p class="sIGN:_Function">_CANj
</p>
<p class="sIGN:_Function">BPTU_xxx_CBITj
</p>
<p>BPTU module CBIT status
</p>
<p>63
</p>
<p>0 = BPTU module CBIT healthy
</p>
<p>1 = BPTU module CBIT failed
</p>
<p>CBIT is failed as soon as a CBIT failure is detected</p>
<p>BPTU ADC1 timeout 
</p>
<p>62
</p>
<p>0 = ADC1 Valid
</p>
<p>1 = order data is OOR as a result of timeout errors in one or more of the four 50ms windows
</p>
<p>BPTU ADC2 timeout
</p>
<p>61
</p>
<p>0 = ADC2 Valid
</p>
<p>1 = order data is OOR as a result of timeout errors in one or more of the four 50ms windows</p>
<p>BPTU ADC2 Configuration Register Error
</p>
<p>60
</p>
<p>0 = ADC2 Valid
</p>
<p>1 = order data is OOR as a result of Configuration Register errors in one or more of the four 50ms windows</p>
<p>LH pedal sensor acquisition out of range
</p>
<p>59
</p>
<p>0 = LH pedal sensor acquisition valid
</p>
<p>1 = order data is OOR as a result of boundary check errors (threshold min/max) in one or more of the four 50ms windows</p>
<p>RH pedal sensor acquisition out of range
</p>
<p>58
</p>
<p>0 = RH pedal sensor acquisition valid
</p>
<p>1 = order data is OOR as a result of boundary check errors (threshold min/max) in one or more of the four 50ms windows</p>
<p>FPGA Configuration Data
</p>
<p>(EEPROM CRC check)</p>
<p>57
</p>
<p>0 = configuration data valid
</p>
<p>1 = one configuration data corrupted occurs in one or more of the four 50ms windows</p>
<p>N/A
</p>
<p>[56:0]
</p>
<p>Provision, bits forced to 0
</p>
<p class="reqTexte">Where “xxx” is Pil or Copil and “j” is 1 or 2.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure a correct functioning of the CAN bus.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0925</b></p>
</td>	<td><p class="reqIdent"><b>BPTU BusBIT frame description</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0732 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU BusBIT frame shall be compliant with the following table:</p>
<p class="sIGN:_Title">Frame Name
</p>
<p class="sIGN:_Title">Data Name
</p>
<p class="sIGN:_Title">Data Description
</p>
<p class="sIGN:_Title">Bit nb
</p>
<p class="sIGN:_Title">Comment
</p>
<p class="sIGN:_Function">BPTU_xxx _BusBIT_CANj</p>
<p class="sIGN:_Function">BPTU_xxx_TEC_CANj</p>
<p class="sIGN:_Function">BPTU module transmission error counter value
</p>
<p class="sIGN:_Function">[63:56]
</p>
<p class="sIGN:_Function">-
</p>
<p class="sIGN:_Function">BPTU_xxx_REC_CANj</p>
<p class="sIGN:_Function">BPTU module reception error counter value
</p>
<p class="sIGN:_Function">[55:48]
</p>
<p class="sIGN:_Function">-
</p>
<p class="sIGN:_Function">BPTU_xxx_NbReset_CANj</p>
<p class="sIGN:_Function">BPTU module total number of software resets for the CAN protocol handler
</p>
<p class="sIGN:_Function">[47:32]
</p>
<p class="sIGN:_Function">-
</p>
<p class="sIGN:_Function">BPTU_xxx_NbErrTX_CANj</p>
<p class="sIGN:_Function">BPTU module total number of detected errors in transmission
</p>
<p class="sIGN:_Function">[31:16]
</p>
<p class="sIGN:_Function">-
</p>
<p class="sIGN:_Function">BPTU_xxx_NbErrRX_CANj</p>
<p class="sIGN:_Function">BPTU module total number of detected errors in reception
</p>
<p class="sIGN:_Function">[15:0]
</p>
<p class="sIGN:_Function">-
</p>
<p class="reqTexte">Where “xxx” is Pil or Copil and “j” is 1 or 2.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure a correct functioning of the CAN bus.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0926</b></p>
</td>	<td><p class="reqIdent"><b>BPTU Part Number frames description</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0732 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU Part number frames shall be compliant with the following tables:</p>
<p class="sans_interligne">· Part Number MSB</p>
<p class="sIGN:_Title">Frame Name
</p>
<p class="sIGN:_Title">Data Name
</p>
<p class="sIGN:_Title">Data Description
</p>
<p class="sIGN:_Title">Bit nb
</p>
<p class="sIGN:_Title">Comment
</p>
<p class="sIGN:_Function">BPTU_xxx _PN_MSB_CANj
</p>
<p class="sIGN:_Function">BPTU_xxx_PN_MSB
</p>
<p class="sIGN:_Function">HW part number MSB
</p>
<p class="sIGN:_Function">[63:0]
</p>
<p class="sIGN:_Function">8 ASCII
</p>
<p class="reqTexte">· Part Number LSB</p>
<p class="sIGN:_Title">Frame Name
</p>
<p class="sIGN:_Title">Data Name
</p>
<p class="sIGN:_Title">Data Description
</p>
<p class="sIGN:_Title">Bit nb
</p>
<p class="sIGN:_Title">Comment
</p>
<p class="sIGN:_Function">BPTU_xxx_PN_LSB_CANj</p>
<p class="sIGN:_Function">BPTU_xxx_PN_LSB 
</p>
<p class="sIGN:_Function">HW part number LSB
</p>
<p class="sIGN:_Function">[63:0]
</p>
<p class="sIGN:_Function">8 ASCII</p>
<p class="reqTexte">Where “xxx” is Pil or Copil and “j” is 1 or 2.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure a correct functioning of the CAN bus.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0927</b></p>
</td>	<td><p class="reqIdent"><b>BPTU PLD Part Number frames description</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0732 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU Part number frames shall be compliant with the following tables:</p>
<p class="sans_interligne">· PLD Part Number MSB</p>
<p class="sIGN:_Title">Frame Name
</p>
<p class="sIGN:_Title">Data Name
</p>
<p class="sIGN:_Title">Data Description
</p>
<p class="sIGN:_Title">Bit nb
</p>
<p class="sIGN:_Title">Comment
</p>
<p class="sIGN:_Function">BPTU_xxx_SWPN_MSB_CANj
</p>
<p class="sIGN:_Function">BPTU_xxx_SWPN_MSBj</p>
<p class="sIGN:_Function">PLD part number MSB 
</p>
<p class="sIGN:_Function">[63:0]
</p>
<p class="sIGN:_Function">8 ASCII
</p>
<p class="reqTexte">· PLD Part Number LSB
</p>
<p class="sIGN:_Title">Frame Name
</p>
<p class="sIGN:_Title">Data Name
</p>
<p class="sIGN:_Title">Data Description
</p>
<p class="sIGN:_Title">Bit nb
</p>
<p class="sIGN:_Title">Comment
</p>
<p class="sIGN:_Function">BPTU_xxx_SWPN_LSB_CANj
</p>
<p class="sIGN:_Function">BPTU_xxx_SWPN_LSBj</p>
<p class="sIGN:_Function">PLD part number LSB
</p>
<p class="sIGN:_Function">[63:0]
</p>
<p class="sIGN:_Function">8 ASCII</p>
<p class="reqTexte">Where “xxx” is Pil or Copil and “j” is 1 or 2.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure a correct functioning of the CAN bus.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0928</b></p>
</td>	<td><p class="reqIdent"><b>BPTU Serial Number frame description</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0732 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU Part number frames shall be compliant with the following tables:</p>
<p class="sIGN:_Title">Frame Name
</p>
<p class="sIGN:_Title">Data Name
</p>
<p class="sIGN:_Title">Data Description
</p>
<p class="sIGN:_Title">Bit nb
</p>
<p class="sIGN:_Title">Comment
</p>
<p class="sIGN:_Function">BPTU_xxx_SN_CANj</p>
<p class="sIGN:_Function">BPTU_xxx_SN
</p>
<p class="sIGN:_Function">HW serial number
</p>
<p class="sIGN:_Function">[15:0]
</p>
<p class="sIGN:_Function">2 ASCII</p>
<p class="reqTexte">Where “xxx” is Pil or Copil and “j” is 1 or 2.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure a correct functioning of the CAN bus.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<p class="titre_4">4.5.5.3 <b>BPTU CAN Bus Configuration Parameters
</b></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0930</b></p>
</td>	<td><p class="reqIdent"><b>CAN data bit rate</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The CAN interface shall operate at 500 Kbps (+/- 0.15%).</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified by the necessity to ensure interoperability of units connected on a CAN bus.
</p>
<p class="reqTexte">This requirement is justified by the necessity to ensure correct signaling.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: refer to CAN Bus Message Format Specification

 REF _Ref377560923 \r \h 
[RD3]    and General Requirements for Equipment using CAN Technology [RD2]   for further information.
</p>
<p class="reqTexte">cf. [GRECT-062] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<p class="corps_de_texte"><div class="embedded" id="_1476882158" />
<img src="embedded:image39.emf" alt="image39.emf" /><p>Internal </p>

<p>clock</p>

<p>Tq</p>

<p>Baud Rate Prescaler (BRP)</p>

<p>Sync</p>

<p>seg</p>

<p>Prop_segPhase_seg1Phase_seg2</p>

<p>Sample point</p>

<p>Nominal bit time</p>

<p>t</p>

<p>SYNCSEG = 1 Tq</p>

<p>t</p>

<p>TSEG1 = 11 Tq</p>

<p>t</p>

<p>TSEG2 = 4 Tq</p>

</p>
<p class="corps_de_texte">Figure 4‑12: Bit timing</p>
<table><tbody><tr>	<td><p><b>Bit rate
</b></p>
<p><b>(bit/s)</b></p>
</td>	<td><p><b>Bit period
</b></p>
<p><b>(us)</b></p>
</td>	<td><p><b>Tq
</b></p>
<p><b>(ns)</b></p>
</td>	<td><p><b>Number 
</b></p>
<p><b>of Tq/bit</b></p>
</td>	<td><p><b>TSEG1
</b></p>
<p><b>(Tq)</b></p>
</td>	<td><p><b>TSEG2
</b></p>
<p><b>(Tq)</b></p>
</td>	<td><p><b>SYNCSEG1
</b></p>
<p><b>(Tq)</b></p>
</td>	<td><p><b>Location of
</b></p>
<p><b>Sample point</b></p>
</td></tr>
<tr>	<td><p>500</p>
</td>	<td><p>2</p>
</td>	<td><p>125</p>
</td>	<td><p>16</p>
</td>	<td><p>11</p>
</td>	<td><p>4</p>
</td>	<td><p>1</p>
</td>	<td><p>75%</p>
</td></tr>
</tbody></table>
<p class="légende">Table 4‑1: Bit timing configuration</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0940</b></p>
</td>	<td><p class="reqIdent"><b>CAN bit timing</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test + Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">Bit timing (Tbit) at CAN bit rate shall be compliant with the table “Bit timing configuration”.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified by the necessity to ensure signal integrity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: refer to CAN Bus Message Format Specification

 REF _Ref377560923 \r \h 
[RD3]    and General Requirements for Equipment using CAN Technology [RD2]   for further information
</p>
<p class="reqTexte">cf. [GRECT-062] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0950</b></p>
</td>	<td><p class="reqIdent"><b>CAN sample point</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test+ Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">Only one sample point shall be used to sample a CAN bit at 75% (+/- 100ppm) of the bit time width.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified by the necessity to ensure interoperability of units connected on the CAN Bus.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: Sample point position is defined in the table “Bit timing configuration”.</p>
<p class="reqTexte">cf. [GRECT-066] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<p class="titre_4">4.5.5.4 <b>Error Management</b></p>
<p class="titre_5,NIV_5,TITLE5">4.5.5.4.1 <u>Error Recognition</u></p>
<p class="sans_interligne">During CAN communications, certain errors might occur such as:
</p>
<p class="sans_interligne">· A bit error happens when a transmitter detects that a transmitted bit has not been received with the same value as it was originally sent.
</p>
<p class="sans_interligne">Exception: there is no bit error during arbitration nor during acknowledgement.</p>
<p class="sans_interligne">· A Bit-Stuffing error happens when six or more consecutive bits with the same logic value have been detected during a message.
</p>
<p class="sans_interligne">Exception: The end of frame bit sequence with seven recessive bits which is not regarded as an error.
</p>
<p class="sans_interligne">· A CRC error is given when a transmitted CRC checksum does not match the value calculated by the receiver.</p>
<p class="sans_interligne">· A Format error means one or more of the pre-defined bits have been found to be incorrect. 
</p>
<p class="sans_interligne">Exception: A dominant last bit of the end of frame sequence is not recognized as format error.</p>
<p class="sans_interligne">· An acknowledgement error occurs when a transmitter has not received a dominant bit in the acknowledgement slot which means that a frame was not recognized by any CAN interface.
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0960</b></p>
</td>	<td><p class="reqIdent"><b>Error recognition</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The CAN interfaces shall recognize the following errors:</p>
<p class="reqTexte">· Bit error</p>
<p class="reqTexte">· Bit-Stuffing error</p>
<p class="reqTexte">· CRC error</p>
<p class="reqTexte">· Format error</p>
<p class="reqTexte">· Acknowledgment error</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure error detection</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: For more details about error type description, see General Standardization of CAN (Controller Area Network) bus protocol for airborne use [EAD3]   .</p>
<p class="corps_de_texte">cf. [GRECT-068], [GRECT-069], [GRECT-070], [GRECT-071], [GRECT-072] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.5.4.2 <u>Error Treatment
</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0970</b></p>
</td>	<td><p class="reqIdent"><b>Error treatment during Error Active mode</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">A CAN interface in error-active mode which detects an error shall send an error-active frame on the bus CAN.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure error treatment.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: cf. [GRECT-073], [GRECT-075] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0980</b></p>
</td>	<td><p class="reqIdent"><b>Error treatment during Error Passive mode</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">A CAN interface in error-passive mode which detects an error shall send an error-passive frame on the bus CAN.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure error treatment.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: cf. [GRECT-074], [GRECT-075] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.5.4.3 <u>Error Containment</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-0990</b></p>
</td>	<td><p class="reqIdent"><b>TEC/REC management</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The TEC and REC values shall be monitored by the CAN interface.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure error containment.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: cf. [GRECT-077] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<p class="corps_de_texte"><div class="embedded" id="_1451306358" />
<img src="embedded:image40.emf" alt="image40.emf" /><p>Error active mode</p>

<p>Bus off modeError passive mode</p>

<p>Reset and Configuration</p>

<p>Reset, configuration </p>

<p>and Reception of </p>

<p>128x11 consecutive </p>

<p>ressecive bits</p>

<p>TEC &gt; 255</p>

<p>REC &lt; 128 and </p>

<p>TEC &lt; 128</p>

<p>REC &gt; 127 or </p>

<p>TEC &gt; 127</p>

<p>Receive Error Counter (REC)</p>

<p>Transmit Error Counter (TEC)</p>

</p>
<p class="corps_de_texte">Figure 4‑13: Fault confinement
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1000</b></p>
</td>	<td><p class="reqIdent"><b>Error Passive mode conditions</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">If the TEC or REC value exceeds the limit of 127, the CAN interface shall switch from Error Active to Error Passive mode.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure error containment.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note:  See the figure “Fault confinement”.</p>
<p class="sans_interligne">cf. [GRECT-078] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1010</b></p>
</td>	<td><p class="reqIdent"><b>Error Active mode conditions</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">If the TEC and REC values &lt; 127, the CAN interface shall switch from Error Passive to Error Active mode.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure error containment.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: See the figure “Fault confinement”.</p>
<p class="sans_interligne">cf. [GRECT-079] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1020</b></p>
</td>	<td><p class="reqIdent"><b>Bus Off mode conditions</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The CAN interface shall switch from Error Passive to Bus Off mode when the TEC value exceeds 255.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure error containment.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: See the figure “Fault confinement”.</p>
<p class="sans_interligne">cf. [GRECT-080] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1030</b></p>
</td>	<td><p class="reqIdent"><b>Bus Off management</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">When CAN interface is in Bus Off mode, it shall return in active error state with the following re-attachment (software reset) process:</p>
<p class="reqTexte">· The CAN interface shall monitor 128 occurrences of 11 consecutive recessive bits</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure control on equipment re-attachment.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: See the figure “Fault confinement”.</p>
<p class="sans_interligne">cf. [GRECT-081] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1040</b></p>
</td>	<td><p class="reqIdent"><b>Re-attachments (software resets) maximum number</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The maximum number of re-attachments between a power-on and power-off cycle shall be 3. The BPTU FPGA shall remain in Bus Off until the next power off, if the maximum number is reached.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure no disconnection of equipment caused by external phenomenon.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: See the “Fault confinement”.</p>
<p class="sans_interligne">cf. [GRECT-084] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<p class="corps_de_texte"><img src="embedded:image41.png" alt="image41.png" /></p>
<p class="légende">Figure 4‑14: Bus BIT message format
</p>
<p class="sans_interligne">REC                 : Value of the Reception Error Counter. 
</p>
<p class="sans_interligne">TEC                 : Value of the Transmission Error Counter. 
</p>
<p class="sans_interligne">NB_ERR_RX : Total number of detected errors in reception. 
</p>
<p class="sans_interligne">NB_ERR_TX  : Total number of detected errors in transmission. 
</p>
<p class="corps_de_texte">NB_RST        : Total number of software resets for the CAN protocol handler (number of re-attachments).
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1050</b></p>
</td>	<td><p class="reqIdent"><b>Bus Off counters reset</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">Counters NB_ERR_RX, NB_ERR_TX and NB_RST shall keep their value when the CAN controller returns from Bus Off mode to Active Error mode.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure continuous health monitoring.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: See the figure “Bus BIT message format”.</p>
<p class="sans_interligne">cf. [GRECT-145] in General Requirements for Equipment using CAN Technology [RD2]   </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1060</b></p>
</td>	<td><p class="reqIdent"><b>NB_RST counter</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The total number of re-attachments (NB_RST) shall be incremented by one when the CAN controller returns from Bus Off mode to Active Error mode.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure continuous health monitoring.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: See the figure “Bus BIT message format”.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1070</b></p>
</td>	<td><p class="reqIdent"><b>NB_ERR_TX/NB_ERR_RX counters</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">NB_ERR_RX and NB_ERR_TX counters shall be respectively incremented by one when an error is detected in reception monitoring and transmission.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure continuous health monitoring.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: See the figure “Bus BIT message format”</p>
</td></tr>
</tbody></table>
<p class="titre_4">4.5.5.5 <b>CAN controller performance
</b></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1080</b></p>
</td>	<td><p class="reqIdent"><b>Inter Frame Space</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0715 partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">A CAN frame shall be separated from preceding frames by a minimum recessive IFS of 3 bits time.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">To improve predictability of the system.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<p class="titre_3">4.5.6 <b>Built In Tests
</b></p>
<p class="titre_4">4.5.6.1 <b>PBIT
</b></p>
<p class="corps_de_texte">Power-Up Built In Test (PBIT) is executed during Initialization mode. It includes the checks of the Pilot/Copilot programming pins, ADCs devices, the CAN controller self-test and EEPROM data CRC.</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1090-S</b></p>
</td>	<td><p class="reqIdent"><b>PBIT definition</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0760-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0770-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0780-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0790-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">PBIT shall be processed only one time, during the Initialization mode and shall include the following tests:</p>
<p class="reqTexte">· Pilot/Copilot configuration check</p>
<p class="reqTexte">· CAN self-test frame validity check</p>
<p class="reqTexte">· ADC3 channel 0 check </p>
<p class="reqTexte">· CRC check on data loaded from EEPROM</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure that BPTU starts safely.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: the PBIT status is failed if one of these checks is failed</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1120-S</b></p>
</td>	<td><p class="reqIdent"><b>PBIT behavior</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0760-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0770-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0780-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0790-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU FPGA shall not emit on the CAN bus if PBIT failed.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure that BPTU starts safely.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1130-S</b></p>
</td>	<td><p class="reqIdent"><b>PBIT CAN self-test</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0770-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis + test </p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">During PBIT, the BPTU shall generate the self-test frame and check its validity by looping it back internally on the reception channel.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure that BPTU starts safely.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: The self-test frame must not be transmitted on the CAN bus.</p>
<p class="reqTexte">This frame is defined in “Self-Test Frame description”.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1140-S</b></p>
</td>	<td><p class="reqIdent"><b>PBIT ADC3 channel 0 check</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0790-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">During PBIT, the BPTU FPGA shall read values from ADC3 channel 0 (CHN=0) until 2 consecutive values &lt; Thres_start_ADC3_28V value stored in the EEPROM.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure that no frame is sent on CAN bus when the system’s behavior is not guaranteed.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: - This threshold value corresponds to the start minimum voltage value acceptable on the 28V power supply.</p>
<p class="reqTexte">· The timeout and CHN shall be OK</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1150-S</b></p>
</td>	<td><p class="reqIdent"><b>Initialization mode duration</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0750-S</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test </p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The initialization mode shall be performed in less than 100 ms.
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="sans_interligne">This requirement is justified by the necessity to ensure correct initialization of the system.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: </p>
</td></tr>
</tbody></table>
<p class="titre_4">4.5.6.2 <b>CBIT
</b></p>
<p class="corps_de_texte">Continuous Built-In Test (CBIT) is executed during normal mode. It includes the checks of the ADCs devices, ADC1&amp;2 data (for boundary values) and ADC3 for Power supplies monitoring (28V and 3.3V).</p>
<p class="corps_de_texte">The thresholds checks on the 3 ADCs are:</p>
<p class="corps_de_texte">· ADC1</p>
<p class="corps_de_texte">· Thres_min_ADC1: minimum value of brake order threshold </p>
<p class="corps_de_texte">· Thres_max_ADC1: maximum value of brake order threshold </p>
<p class="corps_de_texte">· ADC2
</p>
<p class="corps_de_texte">· Thres_min_ADC2: minimum value of brake order threshold </p>
<p class="corps_de_texte">· Thres_max_ADC2: maximum value of brake order threshold </p>
<p class="corps_de_texte">· ADC3
</p>
<p class="corps_de_texte">· Thres_min_ADC3_3_3V: minimum value of 3.3V monitoring threshold </p>
<p class="corps_de_texte">· Thres_max_ADC3_3_3V: maximum value of 3.3V monitoring threshold</p>
<p class="corps_de_texte">· Thres_start_ADC3_28V: start value of 28V monitoring threshold used to start BPTU system. This value is checked during PBIT.</p>
<p class="corps_de_texte">· Thres_stop_min_ADC3_28V: minimum stop value of 28V monitoring threshold used to stop BPTU system. This value is checked during CBIT.</p>
<p class="corps_de_texte">· Thres_stop_max_ADC3_28V: maximum stop value of 28V monitoring threshold used to stop BPTU system. This value is checked during CBIT.</p>
<p class="titre_5,NIV_5,TITLE5">4.5.6.2.1 <u>CBIT definition</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1160-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT definition</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0800-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0810-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0820-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0830-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0840-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">CBIT shall be executed in initialization and normal mode, each 50 ms +/- 62.5 ns, and shall include:</p>
<p class="reqTexte">· ADC(1, 2 &amp; 3) devices test</p>
<p class="reqTexte">· ADC2 configuration read/write configuration register check
</p>
<p class="reqTexte">· ADC3 DOUT word format check
</p>
<p class="reqTexte">· Boundary check (min/max) on ADC1&amp;2 data</p>
<p class="reqTexte">· Boundary check (stop min/stop max) on ADC3 28V channel data (Only 2 acquisitions done in initialization mode are used, instead of 8 acquisitions in normal mode)</p>
<p class="reqTexte">· Boundary check (min/max) on ADC3 3.3V channel data
</p>
<p class="reqTexte">· CRC check on data loaded from EEPROM (in initialization mode, this check is already done in the PBIT definition)</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure failure detection.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
<p class="reqTexte">· The CBIT status is sent each 200 ms with the frame BPTU_xxx_CBIT_CANi. </p>
<p class="reqTexte">· The CBIT status is the “OR” of all these checks </p>
<p class="reqTexte">· BPTU parameters are HW&amp;PLD Part Numbers, HW Serial Number, all Frames’ IDs and ADCs Calibration data</p>
<p class="reqTexte">· The CRC check status reported in the first PBIT and CBIT frames is the same.</p>
</td></tr>
</tbody></table>
<p class="sans_interligne">The BPTU guarantees the emission of only correct measures in BPTU_xxx_Order_CANi frames. Thus in case of failure detected during CBIT on ADC1 and ADC2, the payload of Order frames is set to a specific value interpreted by the other equipment as invalid. These Order frames are then called Out Of Range (OOR) frames.
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1170-S</b></p>
</td>	<td><p class="reqIdent"><b>OOR value</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-1300-S</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">Order frames OOR data payload value shall be the predefined value 0x80.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p>Note: An OOR frame is a normal “Order” frame that includes a specific data interpreted by the system as invalid value.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1175-D</b></p>
</td>	<td><p class="reqIdent"><b>ADC3 28V first acquisitions use</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The acquisitions performed on ADC3 28V during initialization mode shall be used both for PBIT checks and for the first CBIT frame data.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified to clarify the process to evaluate the first CBIT frame data.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: see Figure 4‑4: BPTU FPGA Main sequences description for more details</p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.6.2.2 <u>CBIT ADC1 definition
</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1200-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC1 max boundary check</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0830-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU shall consider data from ADC1 (12 bits) as OOR if this data is upper than the Thres_max_ADC1 value stored in the EEPROM.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: Maximum sensor value defined between 0° and 10° as Thres_max_ADC1 by the user is considered as Out Of Range (OOR). </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1210-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC1 min boundary check</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0830-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU shall consider data from ADC1 (12 bits) as OOR if this data is lower than the Thres_min_ADC1 value stored in the EEPROM.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: Minimum sensor value defined between 0° and 10° as Thres_min_ADC1 by the user is considered as Out Of Range (OOR).</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1220-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC1 measures monitoring</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0830-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU shall send an order frame with the OOR value in the ADC1 field if one or more of the next conditions are met within an effective 50 ms window:</p>
<p class="reqTexte">· Two successive measures with timeout reached or</p>
<p class="reqTexte">· Three or more measures (regardless ranking) with timeout reached or</p>
<p class="reqTexte">· Two successive OOR measures detected or</p>
<p class="reqTexte">· Three or more measures OOR detected</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: after a 50ms window, timeout and OOR counters are reset. </p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.6.2.3 <u>CBIT ADC2 definition</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1240-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC2 configuration write / read register test</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0810-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC2 configuration register CFR [11:0] shall be set to 101111111101b and checked before the first of the each 8 acquisitions sequence.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure that BPTU starts with safe components states.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: If this test fails then any data coming from the device in current acquisition is ignored.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1260-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC2 max boundary check</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0830-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU shall consider data from ADC2 (12 bits) as OOR if it is upper than the Thres_max_ADC2 value stored in the EEPROM.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: Maximum sensor value defined between 0° and 10° as Thres_max_ADC2 by the user is considered as Out Of Range (OOR).</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1270-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC2 min boundary check</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0830-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU shall consider data from ADC2 (12 bits) as OOR if it is lower than the Thres_min_ADC2 value stored in the EEPROM.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: Minimum sensor value defined between 0° and 10° as Thres_min_ADC2 by the user is considered as Out Of Range (OOR).</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1280-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC2 measures monitoring</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0830-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU shall send an order frame with the OOR value in the ADC2 field if one or more of the next conditions are met within an effective 50 ms window:</p>
<p class="reqTexte">· Read value of the configuration register different from 101111111101b or</p>
<p class="reqTexte">· Two successive measures with timeout reached or</p>
<p class="reqTexte">· Three or more measures (regardless ranking) with timeout reached or</p>
<p class="reqTexte">· Two successive OOR measures detected or</p>
<p class="reqTexte">· Three or more measures OOR detected</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: </p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.6.2.4 <u>CBIT ADC3 definition</u></p>
<p class="corps_de_texte">The ADC3 is a dual input analog channel device which allows the monitoring of the two power supplies of the system:
</p>
<p class="corps_de_texte">· The 28V power supply on channel 0</p>
<p class="paragraphe_de_liste">· The 3.3V power supply on channel 1</p>
<p class="corps_de_texte">The input channel to be converted is selected through the digital interface.
</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1290-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC3 channel 0 acquisition</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0870-S</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">During an effective 50 ms window, the BPTU shall perform 2 acquisitions from channel 0 of ADC3 device.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure a valid data acquisition in all cases. </p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note:</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1300-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC3 channel 1 acquisition</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0800-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">During an effective 50 ms window, the BPTU shall perform 16 acquisitions from channel 1 of ADC3 device.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure a valid data acquisition in all cases. </p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note:</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1320-D</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC3 DOUT word format</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The ADC3_DOUT shall be considered as invalid if the 16 bit word is not compliant with the following table:
</p>
<p>MSB
</p>
<p>LSB
</p>
<p>0
</p>
<p>0
</p>
<p>CHN
</p>
<p>MOD</p>
<p>Conversion result</p>
<p class="reqTexte">ADC3_DOUT word
</p>
<p class="reqTexte">With CHN = MOD
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure the proper functioning of the system.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: See ADC_AD7922 [RD6]   , chapter DOUT Output for further details about this mode.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1330-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC3 channel 0 min boundary check</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0880-S</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU FPGA shall consider a value as invalid if the value read from ADC3 channel 0 (CHN=0) is upper than the Thres_stop_min_ADC3_28V value stored in the EEPROM.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure that no frame is sent on CAN bus when the system’s behavior is not guaranteed.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: This threshold value corresponds to the minimum stop voltage value on the 28V power supply.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1335-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC3 channel 0 max boundary check</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0890-S</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU FPGA shall consider a value as invalid if the value read from ADC3 channel 0 (CHN=0) is lower than the Thres_stop_max_ADC3_28V value stored in the EEPROM.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure that no frame is sent on CAN bus when the system’s behavior is not guaranteed.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: This threshold value corresponds to the maximum stop voltage value on the 28V power supply.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1340-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC3 channel 1 min boundary check</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0800-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU FPGA shall consider a value as invalid if the value read from ADC3 channel 1 (CHN=1) is lower than the Thres_min_ADC3_3_3V value stored in the EEPROM.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure that no frame is sent on CAN bus when the system’s behavior is not guaranteed.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: This threshold value corresponds to the minimum value acceptable to ensure a proper functional behavior. </p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1350-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC3 channel 1 max boundary check</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0800-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU FPGA shall consider a value as invalid if the value read from ADC3 channel 1 (CHN=1) is upper than the Thres_max_ADC3_3_3V value stored in the EEPROM.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure that no frame is sent on CAN bus when the system’s behavior is not guaranteed.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: This threshold value corresponds to the maximum value acceptable to ensure a proper functional behavior.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1360-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC3 channel 1 measures monitoring</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0820-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0830-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">During an effective 50 ms window, the BPTU shall stop sending frames if one or more of the next conditions are met in the ADC3 channel 1 within an effective 50 ms window:</p>
<p class="reqTexte">· Two successive measures with timeout reached or
</p>
<p class="reqTexte">· Three or more measures (regardless ranking) with timeout reached or</p>
<p class="reqTexte">· Two successive invalid measures are detected or </p>
<p class="reqTexte">· Three or more invalid measures (regardless ranking) are detected</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: Invalid measure definition is given in HRD-BPTU-1320, HRD-BPTU-1330, HRD-BPTU-1335, HRD-BPTU-1340 and HRD-BPTU-1350</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1370-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT ADC3 channel 0 measures monitoring</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0820-S partial</b></p>
<p class="reqMother"><b>BRD-BPTU-0830-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">At the end of 4 effectives 50 ms window, the BPTU shall stop sending frames during 200 ms if one or more of the next conditions are met in the ADC3 channel 0 within an effective 50 ms window:</p>
<p class="reqTexte">· Two successive measures with timeout reached or
</p>
<p class="reqTexte">· Three or more measures (regardless ranking) with timeout reached or</p>
<p class="reqTexte">· Two successive invalid measures are detected or 
</p>
<p class="reqTexte">· Three or more invalid measures (regardless ranking) are detected</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure measures validity.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note: Invalid measure definition is given in HRD-BPTU-1320, HRD-BPTU-1330, HRD-BPTU-1335, HRD-BPTU-1340 and HRD-BPTU-1350</p>
</td></tr>
</tbody></table>
<p class="titre_5,NIV_5,TITLE5">4.5.6.2.5 <u>CBIT EEPROM definition</u></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1380-S</b></p>
</td>	<td><p class="reqIdent"><b>CBIT EEPROM CRC check</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0860-S</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">During an effective 50 ms window number N, if an EEPROM CRC fails :
</p>
<p class="reqTexte">· The EEPROM data are not used </p>
<p class="reqTexte">· The BPTU FPGA shall not emit on the CAN bus during the N+2 50 ms window
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="corps_de_texte">This requirement is justified by the necessity to ensure that no frame is sent on CAN bus when the system’s behavior is not guaranteed.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="sans_interligne">Note: - There is no valid EEPROM data on window N+1</p>
</td></tr>
</tbody></table>
<p class="titre_2">4.6 <b>Packaging and Technology requirements
</b></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1390</b></p>
</td>	<td><p class="reqIdent"><b>Packaging and Technology</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0460
</b></p>
<p class="reqMother"><b>BRD-BPTU-0470-D
</b></p>
<p class="reqMother"><b>BRD-BPTU-0480-D
</b></p>
<p class="reqMother"><b>BRD-BPTU-0700-D
</b></p>
<p class="reqMother"><b>BRD-BPTU-0710-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU functions shall be implemented in each of the following FPGA devices:</p>
<p class="reqTexte">· Microsemi Proasic3 A3P1000 (FGG144I) speed grade std
</p>
<p class="reqTexte">· Microsemi IGL002  M2GL050 (VFG400I) speed grade std</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified at upper level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note:
</p>
<p class="corps_de_texte">· The same function is implemented in CAN Management FPGA COM and FPGA MON.
</p>
<p class="corps_de_texte">· Refer to 1.2.2 System functions for more details</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1400-D</b></p>
</td>	<td><p class="reqIdent"><b>Device resources utilization</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">BPTU functions shall use less than 70% of the available resource of each FPGA device.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified by the necessity to ensure place and route facilities.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte">Note: the FPGA resource refers to the available logic gates of the component.</p>
</td></tr>
</tbody></table>
<p class="titre_2">4.7 <b>Environmental requirements
</b></p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1410</b></p>
</td>	<td><p class="reqIdent"><b>Temperature range</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0900</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU FPGA shall operate under industrial temperature range being from -40°C up to 85°C.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified at upper level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note:</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1420</b></p>
</td>	<td><p class="reqIdent"><b>Power supply voltages</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0330-D
</b></p>
<p class="reqMother"><b>BRD-BPTU-0350-D</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU FPGA shall be compliant with the following power supply voltages:
</p>
<p class="reqTexte">· 3.3V +/- 5% and 1.5V +/- 5% for FPGA COM ProASIC </p>
<p class="reqTexte">· 3.3V +/- 5% and 1.2V +/- 5% for FPGA MON IGLOO2</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified at upper level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note:</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1430</b></p>
</td>	<td><p class="reqIdent"><b>FPGA COM power consumption</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0240-D partial
</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The FPGA COM maximum power consumption shall be less than:
</p>
<p class="reqTexte">· 300 mA on 1.5V core power supply
</p>
<p class="reqTexte">· 20 mA on 3.3V IO power supply</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified at upper level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note:</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1435</b></p>
</td>	<td><p class="reqIdent"><b>FPGA MON power consumption</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0240-D partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The FPGA MON maximum power consumption shall be less than:</p>
<p class="reqTexte">· 150 mA on 1.2V core power supply
</p>
<p class="reqTexte">· 20 mA on 3.3V IO power supply</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified at upper level.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note:</p>
</td></tr>
</tbody></table>
<p class="titre_2">4.8 <b>Safety requirements</b></p>
<p class="corps_de_texte">Safety requirements are in all the document and tagged by –S.</p>
<p class="corps_de_texte">BPTU is protected against SEU/MEU (Single/Multiple Event upset/s) through multiple techniques:</p>
<p class="corps_de_texte">· CRC protection on EEPROM data
</p>
<p class="corps_de_texte">· BPTU parameters update each 50 ms (during CBIT).</p>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1440-S</b></p>
</td>	<td><p class="reqIdent"><b>EEPROM data protection</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0850-S</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The BPTU EEPROM data shall be protected with CRC in accordance with EEPROM memory map.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified by the necessity to ensure sensible data protection.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note:</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1450-S</b></p>
</td>	<td><p class="reqIdent"><b>Acquisitions period</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0840-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis + Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">ADCs acquisitions processes shall be done cyclically each 50 ms +/- 62.5 ns.</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified by design decision and safety reasons to protect the BPTU against SEU/MEU.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note:</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1455-S</b></p>
</td>	<td><p class="reqIdent"><b>EEPROM extraction period</b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>BRD-BPTU-0840-S partial</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis + Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">EEPROM extraction processes shall be both done once in Initialization mode and cyclically each 50 ms +/- 62.5 ns, in Normal mode, and shall concerned: 
</p>
<p class="reqTexte">· All data except Copilot data in Pilot configuration </p>
<p class="reqTexte">or
</p>
<p class="reqTexte">· All data except Pilot data in Copilot configuration </p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified by design decision and safety reasons to protect the BPTU against SEU/MEU.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note:</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b>HRD-BPTU-1460-DS</b></p>
</td>	<td><p class="reqIdent"><b>CRC polynomial </b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">1</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b>Covers:</b></p>
</td>	<td><p class="reqMother"><b>Derived</b></p>
</td>	<td><p class="reqVerification">Verification :</p>
</td>	<td><p class="reqVerification">Analysis + Test</p>
</td></tr>
<tr>	<td><p class="reqSection"><b><u>Definition:</u></b></p>
<p class="reqTexte">The CRC polynomial shall be:
</p>
<p class="reqTexte">· CRC-32 IEEE802.3
</p>
<p class="reqTexte">· Polynomial: 1+x+x2+x4+x5+x7+x8+x10+x11+x12+x16+x22+x23+x26+x32</p>
<p class="reqTexte">· Initial value = 0xFFFFFFFF</p>
<p class="reqTexte">· The CRC value is a 4 bytes value calculated on 8 bytes of data 
</p>
<p class="reqSection"><b><u>Rationale:
</u></b></p>
<p class="reqTexte">This requirement is justified by design decision and safety reasons to protect the BPTU against SEU/MEU.</p>
</td></tr>
<tr>	<td><p class="reqEnd"><b>End_Req</b></p>
</td></tr>
<tr>	<td><p class="reqTexte">Note:</p>
</td></tr>
</tbody></table>
<p class="titre_2">4.9 <b>Deleted requirements</b></p>
<table><tbody><tr>	<td><p class="reqIdent"><b><s>HRD-BPTU-0030</s></b></p>
</td>	<td><p class="reqIdent"><b><s>Input / output default values </s></b></p>
</td>	<td><p class="reqVersion"><s>Version:</s></p>
</td>	<td><p class="reqVersion">DELETED</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><s /></p>
</td>	<td><p class="reqMother"><b><s>Covers:</s></b></p>
</td>	<td><p class="reqMother"><b><s /></b></p>
</td>	<td><p class="reqVerification"><s>Verification :</s></p>
</td>	<td><p class="reqVerification"><s>Test</s></p>
</td></tr>
<tr>	<td><p class="reqSection"><b><s><u>Definition:
</u></s></b></p>
<p class="reqTexte"><s>The RESET_N signal shall asynchronously reset BPTU FPGA outputs to their default values according to the FPGA pinout table requirement. </s></p>
<p class="reqSection"><b><s><u>Rationale:
</u></s></b></p>
<p class="reqTexte"><s>This requirement is justified by the necessity to put in a default state a synchronous design.</s></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b><s>End_Req</s></b></p>
</td></tr>
<tr>	<td><p class="corps_de_texte"><s>Note: </s></p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b><s>HRD-BPTU-0144</s></b></p>
</td>	<td><p class="reqIdent"><b><s>CAN Frame re-transmission update</s></b></p>
</td>	<td><p class="reqVersion"><s>Version:</s></p>
</td>	<td><p class="reqVersion">DELETED</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b><s>Covers:</s></b></p>
</td>	<td><p class="reqMother"><b><s /></b></p>
</td>	<td><p class="reqVerification"><s>Verification :</s></p>
</td>	<td><p class="reqVerification"><s>Test</s></p>
</td></tr>
<tr>	<td><p class="reqSection"><b><s><u>Definition:
</u></s></b></p>
<p class="reqTexte"><s>Re-transmitted frame content shall be updated according to their initial transmission period:
</s></p>
<p class="reqTexte">· <s>BPTU_xxx_Order_CANi: update at t0 + N*50 ms</s></p>
<p class="reqTexte">· <s>BPTU_xxx_PBIT_CANi: update at t0 + N*200 ms
</s></p>
<p class="reqTexte">· <s>BPTU_xxx_CBIT_CANi: update at t0 + N*200 ms
</s></p>
<p class="reqTexte">· <s>BPTU_xxx_BusBIT_CANi: update at t0 + N*1000 ms
</s></p>
<p class="reqTexte">· <s>BPTU_xxx_PN_MSB_CANi: update at t0 + N*2000 ms  
</s></p>
<p class="reqTexte">· <s>BPTU_xxx_PN_LSB_CANi: update at t0 + N*2000 ms 
</s></p>
<p class="reqTexte">· <s>BPTU_xxx_SWPN_MSB_CANi: update at t0 + N*2000 ms 
</s></p>
<p class="reqTexte">· <s>BPTU_xxx_SWPN_LSB_CANi: update at t0 + N*2000 ms 
</s></p>
<p class="reqTexte">· <s>BPTU_xxx_SN_CANi: update at t0 + N*2000 ms  
</s></p>
<p class="sans_interligne"><s>xxx = pil/copil
</s></p>
<p class="sans_interligne"><s>i = 1 or 2
</s></p>
<p class="reqSection"><b><s><u>Rationale:
</u></s></b></p>
<p class="sans_interligne"><s>This requirement is justified by the necessity to ensure no data loss.</s></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b><s>End_Req</s></b></p>
</td></tr>
<tr>	<td><p class="reqTexte"><s>Note: - Frame retransmission must be sequenced according initial frame transmission steps.</s></p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b><s>HRD-BPTU-0150</s></b></p>
</td>	<td><p class="reqIdent"><b><s>Frame update</s></b></p>
</td>	<td><p class="reqVersion"><s>Version:</s></p>
</td>	<td><p class="reqVersion">DELETED</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><s /></p>
</td>	<td><p class="reqMother"><b><s>Covers:</s></b></p>
</td>	<td><p class="reqMother"><b><s /></b></p>
</td>	<td><p class="reqVerification"><s>Verification :</s></p>
</td>	<td><p class="reqVerification"><s>Test</s></p>
</td></tr>
<tr>	<td><p class="reqSection"><b><s><u>Definition:
</u></s></b></p>
<p class="reqTexte"><s>When the data is updated, the repeated frame shall be discarded and replaced in the Tx buffer by the same frame with refreshed data.
</s></p>
<p class="reqSection"><b><s><u>Rationale:
</u></s></b></p>
<p class="sans_interligne"><s>This requirement is justified by the necessity to ensure no data loss.</s></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b><s>End_Req </s></b></p>
</td></tr>
<tr>	<td><p class="sans_interligne"><s>Note: cf. [GRECT-029], [GRECT-030] in General Requirements for Equipment using CAN Technology [RD2]   </s></p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b><s>HRD-BPTU-0390</s></b></p>
</td>	<td><p class="reqIdent"><b><s>EEPROM operations</s></b><s /></p>
</td>	<td><p class="reqVersion"><s>Version:</s></p>
</td>	<td><p class="reqVersion">DELETED</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><s /></p>
</td>	<td><p class="reqMother"><b><s>Covers:</s></b></p>
</td>	<td><p class="reqMother"><b><s /></b></p>
</td>	<td><p class="reqVerification"><s>Verification :</s></p>
</td>	<td><p class="reqVerification"><s>Test</s></p>
</td></tr>
<tr>	<td><p class="reqSection"><b><s><u>Definition:
</u></s></b></p>
<p class="reqTexte"><s>The EEPROM controller shall handle read/write byte (8 bits) operations.
</s></p>
<p class="reqSection"><b><s><u>Rationale:
</u></s></b></p>
<p class="sans_interligne"><s>This requirement is justified by the necessity to EEPROM operations more efficient.</s></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b><s>End_Req</s></b></p>
</td></tr>
<tr>	<td><p class="sans_interligne"><s>Note: See [RD7]    EEPROM_ST and [RD8]    EEPROM_MIC for further details</s></p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b><s>HRD-BPTU-0590</s></b></p>
</td>	<td><p class="reqIdent"><b><s>ADC1 3.3V adjustment law</s></b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">DELETED</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b><s>Covers:</s></b></p>
</td>	<td><p class="reqMother"><b /></p>
</td>	<td><p class="reqVerification"><s>Verification :</s></p>
</td>	<td><p class="reqVerification"><s>Test</s></p>
</td></tr>
<tr>	<td><p class="reqSection"><b><s><u>Definition:
</u></s></b></p>
<p class="reqTexte"><s>The average value (step 4 of data treatment) of data order from ADC1 acquisition shall be compliant to the following table: TBD
</s></p>
<p class="reqSection"><b><s><u>Rationale:
</u></s></b></p>
<p class="sans_interligne"><s>This requirement is justified by the necessity to ensure measures validity.</s></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b><s>End_Req</s></b></p>
</td></tr>
<tr>	<td><p class="sans_interligne"><s>Note:</s></p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b><s>HRD-BPTU-0730</s></b></p>
</td>	<td><p class="reqIdent"><b><s>ADC2 3,3V adjustment law</s></b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">DELETED</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><s /></p>
</td>	<td><p class="reqMother"><b><s>Covers:</s></b></p>
</td>	<td><p class="reqMother"><b><s /></b></p>
</td>	<td><p class="reqVerification"><s>Verification :</s></p>
</td>	<td><p class="reqVerification"><s>Test</s></p>
</td></tr>
<tr>	<td><p class="reqSection"><b><s><u>Definition:
</u></s></b></p>
<p class="reqTexte"><s>The average value (step 4 of data treatment) of data order from ADC2 acquisition shall be compliant to the following table: TBD</s></p>
<p class="reqSection"><b><s><u>Rationale:
</u></s></b></p>
<p class="sans_interligne"><s>This requirement is justified by the necessity to ensure measures validity.</s></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b><s>End_Req</s></b></p>
</td></tr>
<tr>	<td><p class="sans_interligne"><s>Note:
</s></p>
<p class="sans_interligne"><s /></p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b><s>HRD-BPTU-1100</s></b></p>
</td>	<td><p class="reqIdent"><b><s>ADCs initialization mode activities </s></b></p>
</td>	<td><p class="reqVersion">Version:</p>
</td>	<td><p class="reqVersion">DELETED</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b><s>Covers:</s></b></p>
</td>	<td><p class="reqMother"><b><s>Derived</s></b></p>
</td>	<td><p class="reqVerification"><s>Verification :</s></p>
</td>	<td><p class="reqVerification"><s>Test</s></p>
</td></tr>
<tr>	<td><p class="reqSection"><b><s>Definition:
</s></b></p>
<p class="reqTexte"><s>During the Initialization mode, the ADC 1, 2 &amp; 3 activities shall be the same as described in their relative CBIT activities.
</s></p>
<p class="reqSection"><b><s>Rationale:
</s></b></p>
<p class="corps_de_texte"><s>This requirement is justified by the necessity to ensure that BPTU starts sending valid data as soon as CAN frames are generated on the CAN buses. </s></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b><s>End_Req</s></b></p>
</td></tr>
<tr>	<td><p class="reqTexte"><s>Note: </s></p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b><s>HRD-BPTU-1190-S</s></b></p>
</td>	<td><p class="reqIdent"><b><s>CBIT ADC1 device test</s></b></p>
</td>	<td><p class="reqVersion"><s>Version:</s></p>
</td>	<td><p class="reqVersion">DELETED</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><s /></p>
</td>	<td><p class="reqMother"><b><s>Covers:</s></b></p>
</td>	<td><p class="reqMother"><b><s>BRD-BPTU-0810</s></b></p>
</td>	<td><p class="reqVerification"><s>Verification :</s></p>
</td>	<td><p class="reqVerification"><s>Test</s></p>
</td></tr>
<tr>	<td><p class="reqSection"><b><s><u>Definition:
</u></s></b></p>
<p class="reqTexte"><s>During an effective 50 ms window, an ADC1 acquisition shall be considered as invalid if its timeout is reached.
</s></p>
<p class="reqSection"><b><s><u>Rationale:
</u></s></b></p>
<p class="corps_de_texte"><s>This requirement is justified by the necessity to ensure that BPTU starts with safe components states.</s></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b><s>End_Req</s></b></p>
</td></tr>
<tr>	<td><p class="reqTexte"><s>Note: If this test fails, then any data coming from the device in current acquisition is ignored.</s></p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b><s>HRD-BPTU-1250-S</s></b></p>
</td>	<td><p class="reqIdent"><b><s>CBIT ADC2 device test</s></b></p>
</td>	<td><p class="reqVersion"><s>Version:</s></p>
</td>	<td><p class="reqVersion">DELETED</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><s /></p>
</td>	<td><p class="reqMother"><b><s>Covers:</s></b></p>
</td>	<td><p class="reqMother"><b><s>BRD-BPTU-0810</s></b></p>
</td>	<td><p class="reqVerification"><s>Verification :</s></p>
</td>	<td><p class="reqVerification"><s>Test</s></p>
</td></tr>
<tr>	<td><p class="reqSection"><b><s><u>Definition:
</u></s></b></p>
<p class="reqTexte"><s>During an effective 50 ms window, an ADC2 acquisition shall be considered as invalid if its timeout is reached.
</s></p>
<p class="reqSection"><b><s><u>Rationale:
</u></s></b></p>
<p class="corps_de_texte"><s>This requirement is justified by the necessity to ensure failure detection.</s></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b><s>End_Req</s></b></p>
</td></tr>
<tr>	<td><p class="reqTexte"><s>Note: If this test fails then any data coming from the device in current acquisition is ignored.</s></p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b><s>HRD-BPTU-1310-S</s></b></p>
</td>	<td><p class="reqIdent"><b><s>CBIT ADC3 device test</s></b></p>
</td>	<td><p class="reqVersion"><s>Version:</s></p>
</td>	<td><p class="reqVersion">DELETED</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b><s>Covers:</s></b></p>
</td>	<td><p class="reqMother"><b><s>BRD-BPTU-0810</s></b></p>
</td>	<td><p class="reqVerification"><s>Verification :</s></p>
</td>	<td><p class="reqVerification"><s>Test</s></p>
</td></tr>
<tr>	<td><p class="reqSection"><b><s><u>Definition:
</u></s></b></p>
<p class="reqTexte"><s>During an effective 50 ms window, an ADC3 acquisition shall be considered as invalid if its timeout is reached.
</s></p>
<p class="reqSection"><b><s><u>Rationale:
</u></s></b></p>
<p class="corps_de_texte"><s>This requirement is justified by the necessity to ensure that BPTU starts with safe components states.</s></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b><s>End_Req</s></b></p>
</td></tr>
<tr>	<td><p class="reqTexte"><s>Note: If this test fails then any data coming from the device in current acquisition is ignored.</s></p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b><s>HRD-BPTU-0465-D</s></b></p>
</td>	<td><p class="reqIdent"><b><s>Calibration read data </s></b><s /></p>
</td>	<td><p class="reqVersion"><s>Version:</s></p>
</td>	<td><p class="reqVersion">DELETED</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b><s>Covers:</s></b></p>
</td>	<td><p class="reqMother"><b><s>Derived</s></b></p>
</td>	<td><p class="reqVerification"><s>Verification :</s></p>
</td>	<td><p class="reqVerification"><s>Test</s></p>
</td></tr>
<tr>	<td><p class="reqSection"><b><s><u>Definition:
</u></s></b></p>
<p class="reqTexte"><s>Upon read_calibration_data RS232 command, the BPTU FPGA shall read the CALIB_OFFSET_ADC1, CALIB_OFFSET_ADC2, CALIB_GAIN_ADC1 and CALIB_GAIN_ADC2 values. 
</s></p>
<p class="reqSection"><b><s><u>Rationale:
</u></s></b></p>
<p class="sans_interligne"><s>This requirement is justified by the necessity to adjust ADCs measurement.</s></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b><s>End_Req</s></b></p>
</td></tr>
<tr>	<td><p class="sans_interligne"><s>Note: Refer to 4.4.1.4.2  for more details about EEPROM management</s></p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b><s>HRD-BPTU-0466-D</s></b></p>
</td>	<td><p class="reqIdent"><b><s>Calibration write data </s></b><s /></p>
</td>	<td><p class="reqVersion"><s>Version:</s></p>
</td>	<td><p class="reqVersion">DELETED</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps" />
</td>	<td><p class="reqMother"><b><s>Covers:</s></b></p>
</td>	<td><p class="reqMother"><b><s>Derived</s></b></p>
</td>	<td><p class="reqVerification"><s>Verification :</s></p>
</td>	<td><p class="reqVerification"><s>Test</s></p>
</td></tr>
<tr>	<td><p class="reqSection"><b><s><u>Definition:
</u></s></b></p>
<p class="reqTexte"><s>Upon write_gain_data RS232 command, the BPTU FPGA shall write the CALIB_OFFSET_ADC1, CALIB_OFFSET_ADC2, CALIB_GAIN_ADC1 and CALIB_GAIN_ADC2 values. 
</s></p>
<p class="reqSection"><b><s><u>Rationale:
</u></s></b></p>
<p class="sans_interligne"><s>This requirement is justified by the necessity to adjust ADCs measurement.</s></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b><s>End_Req</s></b></p>
</td></tr>
<tr>	<td><p class="sans_interligne"><s>Note: Refer to 4.4.1.4.2  for more details about EEPROM management </s></p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="reqIdent"><b><s>HRD-BPTU-1110-D</s></b></p>
</td>	<td><p class="reqIdent"><b><s>ADC3 initialization mode activities</s></b></p>
</td>	<td><p class="reqVersion"><s>Version:</s></p>
</td>	<td><p class="reqVersion">DELETED</p>
</td></tr>
<tr>	<td><p class="tAB:_Corps"><s /></p>
</td>	<td><p class="reqMother"><b><s>Covers:</s></b></p>
</td>	<td><p class="reqMother"><b><s>Derived</s></b></p>
</td>	<td><p class="reqVerification"><s>Verification :</s></p>
</td>	<td><p class="reqVerification"><s>Test</s></p>
</td></tr>
<tr>	<td><p class="reqSection"><b><s><u>Definition:
</u></s></b></p>
<p class="reqTexte"><s>During the Initialization mode, the 2 acquisitions done on ADC3 channel 0 shall be used to evaluate the PBIT voltage start value.
</s></p>
<p class="reqSection"><b><s><u>Rationale:
</u></s></b></p>
<p class="corps_de_texte"><s>This requirement is justified by the necessity to ensure that BPTU starts sending valid data as soon as CAN frames are generated on the CAN buses. </s></p>
</td></tr>
<tr>	<td><p class="reqEnd"><b><s>End_Req</s></b></p>
</td></tr>
<tr>	<td><p class="reqTexte"><s>Note: </s></p>
</td></tr>
</tbody></table>
<p class="pAGE_BLANK:_Title"><b>This page is left blank intentionally.</b></p>
<p class="titre_1">5 <b>Traceability Matrix
</b></p>
<p class="corps_de_texte">The traceability matrixes are given in the document [IAD4]   

 REF _Ref406073537 \h 
<b>H</b>ardware <b>T</b>raceability <b>M</b>atrixes (<b>HTM</b>).</p>
<p class="pAGE_BLANK:_Title"><b>This page is left blank intentionally.</b></p>
<p class="titre_1">6 <b>TECHNICAL NOTES</b></p>
<p class="titre_2">6.1 <b>EEPROM memory map</b></p>
<p class="corps_de_texte">Note: the 4 bytes of CRC are calculated for the 8 previous bytes of data in the memory map. </p>
<table><tbody><tr>	<td><p><b>Section</b></p>
</td>	<td><p><b>Data name</b></p>
</td>	<td><p><b>Address </b></p>
</td>	<td><p><b>Size (8bits)</b></p>
</td></tr>
<tr>	<td><p><b>Configuration data "System"</b></p>
</td>	<td><p>EEPROM ID</p>
</td>	<td><p>0x0000</p>
</td>	<td><p>1 word x 8 bits</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>SN
payload data</p>
</td>	<td><p>0x0001</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0002</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>provision</p>
</td>	<td><p>0x0003</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0004</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0005</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0006</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0007</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x0008</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0009</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x000A</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x000B</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>PN MSB
payload data</p>
</td>	<td><p>0x000C</p>
</td>	<td><p>1 word x 8 bits MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x000D</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x000E</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x000F</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0010</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0011</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0012</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0013</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x0014</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0015</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0016</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0017</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>PN LSB
payload data</p>
</td>	<td><p>0x0018</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0019</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x001A</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x001B</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x001C</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x001D</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x001E</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x001F</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x0020</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0021</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0022</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0023</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>SW PN MSB
payload data</p>
</td>	<td><p>0x0024</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0025</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0026</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0027</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0028</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0029</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x002A</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x002B</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x002C</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x002D</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x002E</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x002F</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>SW PN LSB
payload data</p>
</td>	<td><p>0x0030</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0031</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0032</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0033</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0034</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0035</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0036</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0037</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x0038</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0039</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x003A</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x003B</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b>Configuration data "Pilot"</b></p>
</td>	<td><p>Pil_Order_CANx Frame ID</p>
</td>	<td><p>0x003C</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x003D</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x003E</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x003F</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Pil_PBIT_CANx Frame ID</p>
</td>	<td><p>0x0040</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0041</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0042</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0043</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x0044</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0045</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0046</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0047</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Pil_CBIT_CANx Frame ID</p>
</td>	<td><p>0x0048</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0049</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x004A</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x004B</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Pil_BusBIT_CANx Frame ID</p>
</td>	<td><p>0x004C</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x004D</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x004E</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x004F</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x0050</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0051</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0052</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0053</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Pil_PN_MSB_CANx Frame ID</p>
</td>	<td><p>0x0054</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0055</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0056</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0057</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Pil_PN_LSB_CANx Frame ID</p>
</td>	<td><p>0x0058</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0059</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x005A</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x005B</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x005C</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x005D</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x005E</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x005F</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Pil_SWPN_MSB_CANx Frame ID</p>
</td>	<td><p>0x0060</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0061</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0062</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0063</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Pil_SWPN_LSB_CANx Frame ID</p>
</td>	<td><p>0x0064</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0065</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0066</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0067</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x0068</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0069</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x006A</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x006B</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Pil_SN_CANx
Frame ID</p>
</td>	<td><p>0x006C</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x006D</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x006E</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x006F</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Provision</p>
</td>	<td><p>0x0070</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0071</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0072</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0073</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x0074</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0075</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0076</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0077</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b>Configuration data "CoPilot"</b></p>
</td>	<td><p>CoPil_Order_CANx
Frame ID</p>
</td>	<td><p>0x0078</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0079</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x007A</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x007B</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CoPil_PBIT_CANx
Frame ID</p>
</td>	<td><p>0x007C</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x007D</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x007E</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x007F</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x0080</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0081</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0082</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0083</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CoPil_CBIT_CANx
Frame ID</p>
</td>	<td><p>0x0084</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0085</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0086</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0087</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CoPil_BusBIT_CANx Frame ID</p>
</td>	<td><p>0x0088</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0089</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x008A</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x008B</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x008C</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x008D</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x008E</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x008F</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CoPil_PN_MSB_CANx Frame ID</p>
</td>	<td><p>0x0090</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0091</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0092</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0093</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CoPil_PN_LSB_CANx Frame ID</p>
</td>	<td><p>0x0094</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0095</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0096</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0097</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x0098</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x0099</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x009A</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x009B</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CoPil_SWPN_MSB_CANx Frame ID</p>
</td>	<td><p>0x009C</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x009D</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x009E</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x009F</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CoPil_SWPN_LSB_CANx Frame ID</p>
</td>	<td><p>0x00A0</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00A1</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00A2</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00A3</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x00A4</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00A5</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00A6</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00A7</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CoPil_SN_CANx
Frame ID</p>
</td>	<td><p>0x00A8</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00A9</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00AA</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00AB</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Provision</p>
</td>	<td><p>0x00AC</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00AD</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00AE</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00AF</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x00B0</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00B1</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00B2</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00B3</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b>Configuration data "Threshold"</b></p>
</td>	<td><p>Thres_min_ADC1</p>
</td>	<td><p>0x00B4</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00B5</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Thres_max_ADC1</p>
</td>	<td><p>0x00B6</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00B7</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Thres_min_ADC2</p>
</td>	<td><p>0x00B8</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00B9</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Thres_max_ADC2</p>
</td>	<td><p>0x00BA</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00BB</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x00BC</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00BD</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00BE</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00BF</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Thres_min_ADC3_3_3V</p>
</td>	<td><p>0x00C0</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00C1</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Thres_max_ADC3_3_3V</p>
</td>	<td><p>0x00C2</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00C3</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Thres_start_ADC3_28V</p>
</td>	<td><p>0x00C4</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00C5</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Provision</p>
</td>	<td><p>0x00C6</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00C7</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x00C8</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00C9</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00CA</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00CB</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Thres_stop_min_ADC3_28V</p>
</td>	<td><p>0x00CC</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00CD</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Thres_stop_max_ADC3_28V</p>
</td>	<td><p>0x00CE</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00CF</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>Provision</p>
</td>	<td><p>0x00D0</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00D1</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00D2</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00D3</p>
</td>	<td><p>0x00</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x00D4</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00D5</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00D6</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00D7</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b>Calibration data</b></p>
</td>	<td><p>CALIB_OFFSET_ADC1</p>
</td>	<td><p>0x00D8</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00D9</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CALIB_OFFSET_ADC2</p>
</td>	<td><p>0x00DA</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00DB</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CALIB_GAIN_ADC1</p>
</td>	<td><p>0x00DC</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00DD</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CALIB_GAIN_ADC2</p>
</td>	<td><p>0x00DE</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00DF</p>
</td>	<td><p>LSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p>CRC 32 bits</p>
</td>	<td><p>0x00E0</p>
</td>	<td><p>MSB</p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00E1</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00E2</p>
</td>	<td><p> </p>
</td></tr>
<tr>	<td><p><b /></p>
</td>	<td><p />
</td>	<td><p>0x00E3</p>
</td>	<td><p> LSB</p>
</td></tr>
</tbody></table>
<p class="corps_de_texte">Table 6‑1: Memory map</p>
<p class="titre_2">6.2 <b>Frame description
</b></p>
<p class="titre_3">6.2.1 <b>BPTU self-test Frame</b></p>
<p class="sans_interligne">The following table shows in details the CAN Self-Test Frame composition.
</p>
<table><tbody><tr>	<td><p class="sIGN:_Title">Frame Name<b /></p>
</td>	<td><p class="sIGN:_Title">Field name</p>
</td>	<td><p class="sIGN:_Title">Data description</p>
</td>	<td><p class="sIGN:_Title">Comment</p>
</td></tr>
<tr>	<td><p class="sIGN:_Function">CAN-Self-Test</p>
</td>	<td><p class="sIGN:_Function">Data-Self-Test
</p>
<p class="sIGN:_Function">(8 bytes)</p>
</td>	<td><p class="sIGN:_Function">Payload</p>
</td>	<td><p class="sIGN:_Function">[63-8i:56-8i]= 5E1Fh
</p>
<p class="sIGN:_Function">with i inside [0,7]</p>
</td></tr>
<tr>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Function">LLC (3bits)</p>
</td>	<td><p class="sIGN:_Function">Frame Base Identifier</p>
</td>	<td><p class="sIGN:_Function">3d </p>
</td></tr>
<tr>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Function">SFID (7bits)</p>
</td>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Function">7d </p>
</td></tr>
<tr>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Function">RSD (1bit)</p>
</td>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Function">1d </p>
</td></tr>
<tr>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Function">LCL (1bit)</p>
</td>	<td><p class="sIGN:_Function">Frame Extended Identifier</p>
</td>	<td><p class="sIGN:_Function">1d </p>
</td></tr>
<tr>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Function">PVT (1bit)</p>
</td>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Function">1d </p>
</td></tr>
<tr>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Function">DOC (14bits)</p>
</td>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Function">14d </p>
</td></tr>
<tr>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Function">RCI (2bits)</p>
</td>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Function">2d </p>
</td></tr>
<tr>	<td><p class="sIGN:_Function" />
</td>	<td><p class="sIGN:_Function">DLC (4bits)</p>
</td>	<td><p class="sIGN:_Function">Length</p>
</td>	<td><p class="sIGN:_Function">8d </p>
</td></tr>
</tbody></table>
<p class="légende">Table 6‑2: Self-Test Frame description
</p>
<div class="footer"><table><tbody><tr>	<td><p class="fOOTER:_Text">This document is the property of Silkan. Its content cannot be reproduced, disclosed or utilized without the company's written approval.</p>
</td></tr>
</tbody></table>
<table><tbody><tr>	<td><p class="fOOTER:_Text">This document is the property of Silkan. Its content cannot be reproduced, disclosed or utilized without the company's written approval.</p>
</td></tr>
</tbody></table>
</div>
<div class="package-entry"><h1>_1479121278.vsd</h1>
<p>&lt; 100 ms
</p>

<p>Transfert frame rate : 500 kbits/s
</p>

<p>t0
</p>

<p>BPTU_xxx_Order_CANi
</p>

<p>BPTU_xxx_PBIT_CANi
</p>

<p>BPTU_xxx_CBIT_CANi
</p>

<p>BPTU_xxx_BusBit_CANi
</p>

<p>BPTU_xxx_PN_MSB_CANi
</p>

<p>BPTU_xxx_PN_LSB_CANi
</p>

<p>BPTU_xxx_SWPN_MSB_CANi
</p>

<p>BPTU_xxx_SWPN_LSB_CANi
</p>

<p>BPTU_xxx_SN_CANi
</p>

<p>t1 = t0 + 50 ms
</p>

<p>t2
</p>

<p>t3
</p>

<p>t4 = t0 + 200 ms
</p>

<p>T
</p>

<p>Initialization mode success
</p>

<p>Reset_n disabled
</p>

<p>T = Time slot = 0.5 ms 
</p>

<p>t0
</p>

<p>t0
</p>

<p>t0
</p>

<p>t0
</p>

<p>t0
</p>

<p>t0
</p>

<p>t0
</p>

<p>t0
</p>

<p>t5
</p>

<p>t20 = t0 + 1000 ms
</p>

<p>t40 = t0 + 2000 ms
</p>

<p>t6
</p>

<p>t7
</p>

<p>t8 = t0 + 400 ms
</p>

</div>
<div class="package-entry"><h1>_1480854037.vsd</h1>
<p>8 data bits
</p>

<p>bus idle
</p>

<p>start bit
</p>

<p>lsb bit
</p>

<p>1 stop bit
</p>

<p>bus idle
</p>

<p>msb bit
</p>

<p>sampling points
</p>

<p>1 parity bit
</p>

<p>bit0
</p>

<p>bit1
</p>

<p>bit2
</p>

<p>bit3
</p>

<p>Parity bit
</p>

<p>bit4
</p>

<p>bit5
</p>

<p>bit6
</p>

<p>bit7
</p>

<p>T = 8.68 µs +/- 0.35 µs
</p>

<p>T
</p>

</div>
<div class="package-entry"><h1>_1482679308.vsd</h1>
<p>Offset treatment law
</p>

<p>ADC1
Bundaries 
check
</p>

<p>&gt;= Thres_max_ADC1 OR
&lt;= Thres_min_ADC1
</p>

<p>&lt; Thres_max_ADC1 AND
&gt; Thres_min_ADC1
</p>

<p>ADC1 data 
adjustment
law
</p>

<p>OOR on CAN order frame
</p>

<p>ADC1 data measurement average value
</p>

<p>8 bits of data sent on CAN order frames field
</p>

<p>ADC1_average[11:0]
12 bits data
</p>

<p>Gain treatment law
</p>

<p>IDLE
</p>

<p>1
</p>

<p>2
</p>

<p>3
</p>

<p>4
</p>

<p>5
</p>

<p>result_gain[11:0]
12 bits data
</p>

<p>result_offset[11:0]
12 bits data
</p>

<p>ADC1_value[11:0]
12 bits data
</p>

<p>adjust_value[7:0]
8 bits data
</p>

</div>
<div class="package-entry"><h1>_1483359249.vsd</h1>
<p>Texte�</p>

<p>50 ms
</p>

<p>Transfert frame rate : 500 kbits/s
</p>

<p>t0
</p>

<p>Acquisition order
</p>

<p>t1=t0 + 50 ms
</p>

<p>t3=t2 + 50 ms
</p>

<p>Reset_n disabled
</p>

<p>Init mode
</p>

<p>&lt; 100 ms
</p>

<p>Normal mode
</p>

<p>EEPROM read
</p>

<p>EEPROM read
</p>

<p>Send of CAN frame
</p>

<p>Power supply monitoring
</p>

<p>EEPROM values buffer
</p>

</div>
<div class="package-entry"><h1>_1482679475.vsd</h1>
<p>Offset treatment law
</p>

<p>ADC2
Bundaries 
check
</p>

<p>&gt;= Thres_max_ADC2 OR
&lt;= Thres_min_ADC2
</p>

<p>&lt; Thres_max_ADC2 AND
&gt; Thres_min_ADC2
</p>

<p>ADC2 data 
adjustment
law
</p>

<p>OOR on CAN order frame
</p>

<p>ADC2 data measurement average value
</p>

<p>8 bits of data sent on CAN order frames field
</p>

<p>ADC2_average[11:0]
12 bits data
</p>

<p>Gain treatment law
</p>

<p>IDLE
</p>

<p>1
</p>

<p>2
</p>

<p>3
</p>

<p>4
</p>

<p>5
</p>

<p>result_gain[11:0]
12 bits data
</p>

<p>result_offset[11:0]
12 bits data
</p>

<p>adjust_value[7:0]
8 bits data
</p>

<p>ADC2_value[11:0]
12 bits data
</p>

</div>
<div class="package-entry"><h1>_1482063037.vsd</h1>
<p>FPGA_ready send
</p>

<p>write_data ?
</p>

<p>yes
</p>

<p>FPGA_error send
</p>

<p>yes
</p>

<p>One data byte reception
</p>

<p>no
</p>

<p>yes
</p>

<p>no
</p>

<p>yes
</p>

<p>FPGA_command
_ok send
</p>

<p>write_start 
 ?
</p>

<p>Write in
EEPROM 
success ?
</p>

<p>Last byte
written ?
</p>

<p>Reset EEPROM address
</p>

<p>no
</p>

<p>reset_
command ?
</p>

<p>no
</p>

<p>yes
</p>

<p>FPGA_command
_ok send
</p>

<p>Check 
ID EEPROM
OK
?
</p>

<p>no
</p>

<p>FPGA_ID_error send
</p>

<p>CRC Check
Ok?
</p>

<p>yes
</p>

<p>no
</p>

<p>IDLE
</p>

<p>no
</p>

<p>FPGA_command
_ok send
</p>

<p>ID EEPROM byte reception
</p>

<p>yes
</p>

<p>CRC check
needed?
</p>

<p>no
</p>

<p>Reset EEPROM address
</p>

<p>FPGA_CRC_error send
</p>

<p>CRC is done
when N modulo 12 equals 0
with N the number of bytes received 
</p>

</div>
<div class="package-entry"><h1>_1482568285.vsd</h1>
<p>�</p>

<p>Tacquisition
</p>

</div>
<div class="package-entry"><h1>_1480769381.vsd</h1>
</div>
<div class="package-entry"><h1>_1480770060.vsd</h1>
<p>ADC1_CONVST_N
</p>

<p>ADC1_SDO
</p>

<p>ADC1_CS_N
</p>

</div>
<div class="package-entry"><h1>_1480772492.vsd</h1>
</div>
<div class="package-entry"><h1>_1480773051.vsd</h1>
</div>
<div class="package-entry"><h1>_1480769836.vsd</h1>
</div>
<div class="package-entry"><h1>_1479723743.vsd</h1>
<p>Not(ADC1[11:0]) x CALIB_GAIN_ADC1[15:0]
</p>

<p>result_gain = resul_mult[22:11]
</p>

<p>result_mult[27:0]
</p>

<p>result_mult[10] = 0
?
</p>

<p>no
</p>

<p>yes
</p>

<p>result_gain = resul_mult[22:11] + 1
</p>

<p>IDLE
</p>

</div>
<div class="package-entry"><h1>_1479723804.vsd</h1>
<p>IDLE
</p>

<p>ADC2[11:0] x CALIB_GAIN_ADC2[15:0]
</p>

<p>result_gain = resul_mult[22:11]
</p>

<p>result_mult[27:0]
</p>

<p>result_mult[10] = 0
?
</p>

<p>no
</p>

<p>yes
</p>

<p>result_gain = resul_mult[22:11] + 1
</p>

</div>
<div class="package-entry"><h1>_1479123100.vsd</h1>
<p>ADC1 interface
</p>

<p>ADC2 interface
</p>

<p>ADC3 interface
</p>

<p>ARINC825 interface
</p>

<p>CBIT manager
</p>

<p>Reference time counters
</p>

<p>Frames generation
</p>

<p>ARINC825 interface manager
</p>

<p>Main controller
</p>

</div>
<div class="package-entry"><h1>_1477725135.vsd</h1>
<p>EEPROM
</p>

</div>
<div class="package-entry"><h1>_1477811883.vsd</h1>
<p>FPGA_ready send
</p>

<p>calibration_
command ?
</p>

<p>yes
</p>

<p>FPGA_error send
</p>

<p>yes
</p>

<p>FPGA_command
_ok send
</p>

<p>calibration_
offset_start 
?
</p>

<p>ADC 1 &amp; 2
Acquisition
Success ?
</p>

<p>no
</p>

<p>Reset_
command ?
</p>

<p>no
</p>

<p>yes
</p>

<p>yes
</p>

<p>write in
EEPROM 
success ?
</p>

<p>no
</p>

<p>no
</p>

<p>ADC 1 &amp; 2 calibration
</p>

<p>Calibration data offset EEPROM write
</p>

<p>yes
</p>

<p>FPGA_command
_ok send
</p>

<p>IDLE
</p>

<p>no
</p>

</div>
<div class="package-entry"><h1>_1477811983.vsd</h1>
<p>FPGA_ready send
</p>

<p>read_data ?
</p>

<p>yes
</p>

<p>FPGA_error send
</p>

<p>no
</p>

<p>no
</p>

<p>yes
</p>

<p>no
</p>

<p>FPGA_command
_ok send
</p>

<p>yes
</p>

<p>read_
calibration_
data
 ?
</p>

<p>read in
EEPROM 
success ?
</p>

<p>Read_ready ?
</p>

<p>no
</p>

<p>yes
</p>

<p>Read one EEPROM byte
</p>

<p>EEPROM byte send
</p>

<p>Last byte
read?
</p>

<p>yes
</p>

<p>yes
</p>

<p>Reset_
command ?
</p>

<p>no
</p>

<p>yes
</p>

<p>Reset_
command ?
</p>

<p>no
</p>

<p>Reset EEPROM address
</p>

<p>Reset EEPROM address
</p>

<p>FPGA_command
_ok send
</p>

<p>IDLE
</p>

<p>no
</p>

</div>
<div class="package-entry"><h1>_1478007134.vsd</h1>
<p>�</p>

<p>memory_SDA OUT
</p>

<p>memory_SCL
</p>

<p>t8
</p>

<p>t9
</p>

<p>memory_SDA IN
</p>

<p>t13
</p>

<p>t14
</p>

<p>t10
</p>

<p>t3
</p>

<p>t2
</p>

<p>t7
</p>

<p>t6
</p>

<p>memory_WP
</p>

<p>t12
</p>

<p>t11
</p>

<p>START condition
</p>

<p>STOP condition
</p>

</div>
<div class="package-entry"><h1>_1478089659.vsd</h1>
<p>&lt; 100 ms
</p>

<p>Transfert frame rate : 500 kbits/s
</p>

<p>t0
</p>

<p>BPTU_xxx_Order_CANi
</p>

<p>BPTU_xxx_PBIT_CANi
</p>

<p>BPTU_xxx_CBIT_CANi
</p>

<p>BPTU_xxx_BusBit_CANi
</p>

<p>BPTU_xxx_PN_MSB_CANi
</p>

<p>BPTU_xxx_PN_LSB_CANi
</p>

<p>BPTU_xxx_SWPN_MSB_CANi
</p>

<p>BPTU_xxx_SWPN_LSB_CANi
</p>

<p>BPTU_xxx_SN_CANi
</p>

<p>t1 = t0 + 50 ms
</p>

<p>t2
</p>

<p>t3
</p>

<p>t4 = t0 + 200 ms
</p>

<p>T
</p>

<p>Initialization mode success
</p>

<p>Reset_n disabled
</p>

<p>T = Time slot = 0.5 ms 
</p>

<p>t0
</p>

<p>t0
</p>

<p>t0
</p>

<p>t0
</p>

<p>t0
</p>

<p>t0
</p>

<p>t0
</p>

<p>t0
</p>

<p>t5
</p>

<p>t20 = t0 + 1000 ms
</p>

<p>t40 = t0 + 2000 ms
</p>

<p>t6
</p>

<p>t7
</p>

<p>t8 = t0 + 400 ms
</p>

<p>Transmission error Order CAN frame
</p>

<p>Max re-transmission time Order CAN frame
</p>

<p>Transmission error CBIT CAN frame
</p>

<p>Max re-transmission CBIT CAN frame
</p>

<p>Transmission error Order CAN frame

</p>

<p>Max re-transmission time Order CAN frame
</p>

<p>Transmission error SWPN MSB CAN frame
</p>

<p>Max re-transmission SWPN MSB CAN frame
</p>

</div>
<div class="package-entry"><h1>_1477987095.vsd</h1>
<p>FPGA_ready send
</p>

<p>write_data ?
</p>

<p>yes
</p>

<p>FPGA_error send
</p>

<p>yes
</p>

<p>FPGA_command
_ok send
</p>

<p>One data byte reception
</p>

<p>no
</p>

<p>FPGA_CRC_error send
</p>

<p>no
</p>

<p>yes
</p>

<p>FPGA_command
_ok send
</p>

<p>write_gain
_data 
 ?
</p>

<p>Write in
EEPROM 
success ?
</p>

<p>Last byte
written ?
</p>

<p>Reset EEPROM address
</p>

<p>no
</p>

<p>Reset_
command ?
</p>

<p>no
</p>

<p>yes
</p>

<p>FPGA_command
_ok send
</p>

<p>IDLE
</p>

<p>no
</p>

<p>yes
</p>

<p>yes
</p>

<p>Check CRC
OK ?
</p>

<p>no
</p>

<p>Reset EEPROM address
</p>

</div>
<div class="package-entry"><h1>_1477811931.vsd</h1>
<p>FPGA_ready send
</p>

<p>calibration_
command ?
</p>

<p>yes
</p>

<p>FPGA_error send
</p>

<p>yes
</p>

<p>FPGA_command
_ok send
</p>

<p>calibration_
gain_start 
?
</p>

<p>ADC 1 &amp; 2
Acquisition
Success ?
</p>

<p>no
</p>

<p>Reset_
command ?
</p>

<p>no
</p>

<p>yes
</p>

<p>yes
</p>

<p>write in
EEPROM 
success ?
</p>

<p>no
</p>

<p>no
</p>

<p>ADC 1 &amp; 2 calibration
</p>

<p>yes
</p>

<p>FPGA_command
_ok send
</p>

<p>Calibration data gain EEPROM write
</p>

<p>IDLE
</p>

<p>no
</p>

</div>
<div class="package-entry"><h1>_1477811695.vsd</h1>
<p>FPGA_ready send
</p>

<p>read_data ?
</p>

<p>yes
</p>

<p>FPGA_error send
</p>

<p>no
</p>

<p>no
</p>

<p>yes
</p>

<p>no
</p>

<p>FPGA_command
_ok send
</p>

<p>yes
</p>

<p>read_start 
 ?
</p>

<p>read in
EEPROM 
success ?
</p>

<p>read_ready ?
</p>

<p>no
</p>

<p>yes
</p>

<p>Read one EEPROM byte
</p>

<p>EEPROM byte send
</p>

<p>Last byte
read?
</p>

<p>yes
</p>

<p>yes
</p>

<p>reset_
command ?
</p>

<p>no
</p>

<p>yes
</p>

<p>reset_
command ?
</p>

<p>no
</p>

<p>Reset EEPROM address
</p>

<p>Reset EEPROM address
</p>

<p>FPGA_command
_ok send
</p>

<p>IDLE
</p>

<p>no
</p>

</div>
<div class="package-entry"><h1>_1471790938.vsd</h1>
</div>
<div class="package-entry"><h1>_1476702318.vsd</h1>
<p>�</p>

<p>�</p>

<p>�</p>

</div>
<div class="package-entry"><h1>_1477120468.vsd</h1>
<p>RS232
</p>

</div>
<div class="package-entry"><h1>_1477144020.vsd</h1>
<p>adjust_value[7:0] = result_offset[11:4] + 1
</p>

<p>result_offset[11:0]
</p>

<p>result_offset[3] = 0
?
</p>

<p>no
</p>

<p>yes
</p>

<p>adjust_value[7:0] = result_offset[11:4]
</p>

<p>IDLE
</p>

</div>
<div class="package-entry"><h1>_1476882158.vsd</h1>
<p>�</p>

<p>�</p>

<p>Internal clock
</p>

<p>Tq
</p>

</div>
<div class="package-entry"><h1>_1475327181.vsd</h1>
<p>Reset
</p>

<p>Initialization(*)
</p>

<p>Normal(*)
</p>

<p>RESET_N = 1 AND no errors detected
</p>

<p>PBIT OK
</p>

</div>
<div class="package-entry" />
<div class="package-entry"><h1>_1451305336.vsd</h1>
<p>Texte�</p>

<p>Uncompleted frame
</p>

<p>6 dominant bits
</p>

<p>Error delimiter
</p>

<p>8 recessive bits
</p>

<p>Error flag
</p>

<p>Error condition
</p>

<p>0 to 6 dominant bits
</p>

<p>Error flag
</p>

<p>�</p>

<p>�</p>

<p>�</p>

<p>Send by the node detecting the error
</p>

<p>Send by node(s) detecting the first error flag, viewed as a stuff error
</p>

<p>Send by the transmitter
</p>

<p>�</p>

<p>Send by the transmitter
</p>

</div>
<div class="package-entry"><h1>_1451305363.vsd</h1>
<p>Texte�</p>

<p>Uncompleted frame
</p>

<p>6 recessive bits
</p>

<p>Error delimiter
</p>

<p>8 recessive bits
</p>

<p>Error flag
</p>

<p>Error condition
</p>

<p>0 to 6 recessive bits
</p>

<p>Error flag
</p>

<p>�</p>

<p>�</p>

<p>�</p>

<p>Send by the node detecting the error
</p>

<p>Send by node(s) detecting the first error flag, viewed as a stuff error
</p>

<p>Send by the transmitter
</p>

<p>�</p>

<p>Send by the transmitter
</p>

</div>
<div class="package-entry"><h1>_1451306358.vsd</h1>
<p>Error active mode
</p>

<p>Bus off mode
</p>

<p>Error passive mode
</p>

<p>Reset and Configuration
</p>

<p>Reset, configuration and Reception of 128x11 consecutive ressecive bits
</p>

<p>TEC &gt; 255
</p>

<p>REC &lt; 128 and 
TEC &lt; 128
</p>

<p>REC &gt; 127 or 
TEC &gt; 127
</p>

<p>Receive Error Counter (REC)
Transmit Error Counter (TEC)
</p>

</div>
<div class="package-entry"><h1>_1451303205.vsd</h1>
<p>MSB first transmission
</p>

<p>CRC delimiter
</p>

</div>
<div class="package-entry" />
<div class="package-entry"><h1>_1385195673.vsd</h1>
<p>Data field
</p>

<p>SOF
</p>

<p>1 bit
</p>

<p>29 bits identifier + 1 bit SRR + 1 bit IDE
</p>

<p>RTR
</p>

<p>Control field
</p>

<p>11 bits
</p>

<p>6 bits
</p>

<p>1 bit
</p>

<p>1 bit
</p>

<p>18 bits
</p>

<p>1 bit
</p>

<p>0 to 8 bytes
</p>

<p>CRC Sequence
</p>

<p>15 bits
</p>

<p>CRC delimiter
</p>

</div>
</body></html>